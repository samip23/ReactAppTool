{"version":3,"sources":["services/history.js","utils/routeHelper.js","Components/Welcome.js","Components/Utlities/DatePickerApp.js","redux/DatePicker/action.js","redux/GanttForm/action.js","redux/VacationForm/action.js","redux/ProjectApp/action.js","Firebase/firebase.js","redux/TaskForm/action.js","Components/TaskApp/TaskForm.js","Components/TaskApp/TaskApp.js","Components/TaskApp/TaskDetail.js","Components/TaskApp/TaskItem.js","Components/TaskApp/TaskList.js","Components/TaskApp/TaskListApp.js","redux/Defect/index.js","Components/DefectApp/DefectForm.js","Components/DefectApp/DefectApp.js","Components/GanttApp/GanttApp.js","Components/GanttApp/GanttChart.js","Components/ForumApp/ForumNote.js","Components/ForumApp/CreateArea.js","Components/ForumApp/ForumApp.js","Components/ForumApp/Forum.js","Components/GanttApp/GanttForm.js","Components/GanttApp/GanttFormApp.js","Components/VacationApp/VacationForm.js","Components/VacationApp/VacationApp.js","Components/VacationApp/VacationChart.js","Components/VacationApp/VacationChartApp.js","Components/TimesheetApp/TimesheetForm.js","Components/TimesheetApp/TimesheetFormApp.js","Components/ProjectApp/ProjectForm.js","Components/ProjectApp/ProjectFormApp.js","Components/DefectApp/DefectList.js","Components/DefectApp/DefectListApp.js","Components/ProjectApp/ProjectItem.js","redux/Scenario/action.js","Components/Popup.js","Components/ScenarioItem.js","Components/ScenariosForm.js","redux/ScenarioEnabler/index.js","Components/ProjectApp/ProjectDetail.js","Components/ProjectApp/ProjectList.js","Components/ProjectApp/ProjectListApp.js","Components/ScenariosFormApp.js","Components/Login.js","redux/auth.js","routes/index.js","Components/Utlities/Header.js","App.js","redux/DatePicker/reducer.js","redux/TaskForm/reducer.js","redux/GanttForm/reducer.js","redux/VacationForm/reducer.js","redux/ProjectApp/reducer.js","redux/Scenario/reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["history","createHashHistory","forceRefresh","routeHelper","path_name","Welcome","todayDate","Date","class","to","type","placeholder","toLocaleString","Component","DatePickerApp","mode","key","dispatch","id","useDispatch","useSelector","state","datepicker","date","gantt","task","useState","setDate","selected","onSelect","selectDate","payload","selectGanttDate","selectVacationDate","selectProjectDate","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","database","googleAuthProvider","auth","GoogleAuthProvider","addTask","TaskForm","taskName","taskAssignee","taskPriority","progressV","inputProgress","newTask","setNewTask","setTasks","tasks_","taskform","date_","useEffect","onInputChange","event","target","name","value","className","onChange","onClick","preventDefault","uniqid","taskData","console","log","ref","push","then","startAddTask","document","getElementById","submit","alert","TaskApp","tasks","selectedTask","onTaskSubmit","setState","onFormSubmit","this","React","TaskDetail","idx","setProgressV","progressV_by_idx","undefined","data-label","style","width","e","margin","setProgress","LinearProgress","variant","substring","diff","parse","getTime","Math","abs","round","toString","calculateDaysRemain","TaskItem","onTaskSelect","cursor","TaskList","task_data","Object","values","slice","setSelectedTask","setLocalTask","handleDeleteTask","keys","length","renderedList","map","doc","jsPDF","setFontSize","content","startY","head","body","elt","text","autoTable","save","TaskListApp","initialState","defects","title","summary","expect","actual","steps","status","assignee","priority","severity","DefectForm","expectedResults","actualResults","comments","eta","dateCreated","dateResolved","newDefect","setNewDefect","setDefects","defects_","defect","Segment","Group","horizontal","addDefect","DefectApp","onDefectSubmit","GanttApp","data","GanttChart","ForumNote","props","onDelete","CreateArea","note","setNote","handleChange","prevNote","rows","onAdd","ForumApp","notes","setNotes","deleteNote","prevNotes","filter","noteItem","index","newNote","Forum","GanttForm","startDate_","endDate_","start","end","startDate","endDate","addGanttTask","GanttFormApp","VacationForm","employeeName","newVacation","setNewVacation","setVacations","vacations_","vacation","employee","addVacationRequest","VacationApp","onVacationSubmit","VacationChart","config","taskList","label","background","VacationChartApp","TimesheetForm","TimesheetFormApp","onTimesheetSubmit","ProjectForm","projectName","projectAssignee","projectMilestones","newProject","setNewProject","setProjects","projects_","project","addProject","ProjectFormApp","DefectList","defect_data","activeIndex","setActiveIndex","setLocalDefect","blockerCounted","majorCounted","mediumCounted","lowCounted","labels","datasets","backgroundColor","borderColor","borderWidth","handleDeleteDefect","renderedItems","active","onTitleClick","stopPropagation","actuals","options","display","fontSize","scales","yAxes","ticks","beginAtZero","DefectListApp","ProjectItem","onProjectSelect","split","addScenario","description","highLevelSteps","validation","language","Popup","closePopup","result","newScenario","setNewScenario","setScenarios","scenarios_","scenario","ScenarioItem","onScenarioSelect","projectKey","testResult","setResultS","setResult","ScenariosForm","showPopup","setShowPopup","togglePopup","setSelectedScenario","setLocalScenario","scenario_arr","handleDeleteScenario","scenarioToRender","entries","el","obj","scenarioEnabled","flag","ProjectDetail","projects","scenariosEnabled","scenarioEnabler","ProjectList","project_data","scenarios_data","projectNames","projectProgresses","scenario_state","countScenarioArr","count_arr","x","pCount","fCount","bCount","pCountArr","fCountArr","bCountArr","maxBarThickness","project_state","selectedProject","setSelectedProject","precision","stacked","xAxes","ProjectListApp","ScenariosFormApp","Login","signInWithPopup","Routes","path","exact","component","connect","startLogout","signOut","useHistory","App","basename","rootReducer","combineReducers","action","newState","persistConfig","storage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","jsx","loading","ReactDOM","render"],"mappings":"0fAKeA,EAFCC,YAAkB,CAACC,cAAa,I,gCCHnCC,EAAc,SAACC,GACzB,MAAO,wBAAyDA,ICkDpDC,E,4JA7Cb,WACE,IAAIC,EAAY,IAAIC,KAEpB,OACE,6BACE,yBAAKC,MAAM,sBACT,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAWK,MAAM,eAAvC,QAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAYK,MAAM,QAAxC,sBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,aAAcK,MAAM,QAA1C,qBAGM,kBAAC,IAAD,CAAMC,GAAIN,EAAY,SAAUK,MAAM,QAAtC,SAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,eAAgBK,MAAM,QAA5C,MAGN,yBAAKA,MAAM,cACT,yBAAKA,MAAM,QACT,yBAAKA,MAAM,iBACT,2BAAOE,KAAK,OAAOC,YAAY,cAC/B,uBAAGH,MAAM,uBAGb,uBAAGA,MAAM,WAAT,YAKJ,yBAAKA,MAAM,gCACT,yBAAKA,MAAM,cACT,wCACA,6BACA,uCAAaF,EAAUM,yB,GAvCbC,a,wCCkCPC,G,OA7BO,SAAC,GAAY,IAAXJ,EAAU,EAAVA,KAEfK,EAAkBL,EAAlBK,KAAMC,EAAYN,EAAZM,IAEPC,GAFmBP,EAAPQ,GAEDC,eAJe,GAKRC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,WAAWC,QAC3CH,aAAY,SAAAC,GAAK,OAAIA,EAAMG,MAAMC,QAE5BC,mBAAS,IAAInB,OARL,mBAQzBgB,EARyB,KAQnBI,EARmB,KAsBhC,OACE,kBAAC,IAAD,CAAYC,SAAUL,EACpBM,SAdiB,SAACN,GAGpBI,EAAQJ,GAEI,QAARR,GAAgBE,ECjBE,SAACM,GAAD,MAAY,CAClCb,KANuB,cAOvBa,QDe6BO,CAAWP,IAC5B,SAARR,GAAiBE,EEZM,SAACM,EAAMP,GAAP,MAAgB,CAC7CN,KAb+B,oBAc/BqB,QAAS,CACPR,OAAMP,QFSwBgB,CAAgBT,EAAMP,IACxC,YAARD,GAAoBE,EGbM,SAACM,EAAMP,GAAP,MAAgB,CAChDN,KAbkC,uBAclCqB,QAAS,CACPR,OAAMP,QHU2BiB,CAAmBV,EAAMP,IAC9C,WAARD,GAAmBE,EIXM,SAACM,EAAMP,GAAP,MAAgB,CAC/CN,KAhBiC,sBAiBjCqB,QAAS,CACPR,OAAMP,QJQ0BkB,CAAkBX,EAAMP,S,QKrB/CmB,EAAiB,CAC1BC,OAAQ,0CACRC,WAAY,0BACZC,YAAa,8CACbC,UAAW,UACXC,cAAe,sBACfC,kBAAmB,eACnBC,MAAO,6CAGXC,IAASC,cAAcT,GAEvB,IAAMU,EAAWF,IAASE,WACpBC,EAAqB,IAAIH,IAASI,KAAKC,mBCZhCC,EAAU,SAACxB,GAAD,MAAW,CAChCf,KANsB,WAOrBqB,QAASN,I,iBC8FGyB,G,OAhGE,WAAO,IAAD,EACSxB,mBAAS,CACrCyB,SAAU,GACVC,aAAc,GACdC,aAAc,GACd9B,KAAM,IAAIhB,KACVW,GAAI,GACJoC,UAAW,EACXC,cAAe,OARI,mBACdC,EADc,KACLC,EADK,OAWK/B,mBAAS,IAXd,mBAWPgC,GAXO,aAYahC,qBAZb,mBAabyB,GAba,UAakCK,EAA/CL,UAAUC,EAAqCI,EAArCJ,aAAcC,EAAuBG,EAAvBH,aAC1BpC,GADiDuC,EAATjC,KAC7BJ,eAEXwC,EAASvC,aAAY,SAACC,GAAD,OAAWA,EAAMuC,SAASnC,QAC/CoC,EAAQzC,aAAY,SAACC,GAAD,OAAWA,EAAMC,WAAWC,QAEtDuC,qBAAU,WACRJ,EAASC,KACR,CAACA,IAEJ,IAAMI,EAAgB,SAACC,GAAW,IAAD,EACPA,EAAMC,OAAtBC,EADuB,EACvBA,KAAMC,EADiB,EACjBA,MAED,aAATD,GACFT,EAAW,2BAAKD,GAAN,IAAeL,SAAUgB,KAGxB,iBAATD,GACFT,EAAW,2BAAMD,GAAP,IAAgBJ,aAAce,KAG7B,iBAATD,GACFT,EAAW,2BAAKD,GAAN,IAAeH,aAAcc,MAkB3C,OACE,6BACE,0BAAMjD,GAAG,YAAYkD,UAAU,WAC7B,yBAAKA,UAAU,SACb,6CACA,2BACEF,KAAK,WACLxD,KAAK,OACLyD,MAAOhB,EACPkB,SAAUN,KAGd,yBAAKK,UAAU,SACb,+CACA,2BACEF,KAAK,eACLxD,KAAK,OACLyD,MAAOf,EACPiB,SAAUN,KAGd,yBAAKK,UAAU,SACb,iDACA,2BACEF,KAAK,eACLxD,KAAK,OACLyD,MAAOd,EACPgB,SAAUN,KAGd,yBAAKK,UAAU,SACb,4CACA,kBAAC,EAAD,CAAe1D,KAAM,CAACK,KAAM,WAE9B,yBAAKqD,UAAU,iBACb,4BAAQE,QAjDK,SAACN,GAGpB,GAFAA,EAAMO,iBAEW,KAAbpB,GAAoC,KAAjBC,GAAwC,KAAjBC,EAAqB,CACjE,IAAMnC,EAAKsD,MACXf,EAAW,2BAAKD,GAAN,IAAejC,KAAMsC,EAAO3C,QACtCD,EDvCsB,WAAmB,IAAlBwD,EAAiB,uDAAP,GACrC,OAAO,SAACxD,GAAc,IAElBkC,EAKEsB,EALFtB,SACAC,EAIEqB,EAJFrB,aACAC,EAGEoB,EAHFpB,aAJiB,EAOfoB,EAFFlD,YALiB,MAKV,IAAIhB,KALM,IAOfkE,EADFnB,UAEI7B,EAAO,CAAE0B,WAAUC,eAAcC,eAAc9B,OAAM+B,eARxC,MAML,EANK,GASnBoB,QAAQC,IAAIF,GAGZ5B,EAAS+B,IAAI,SAASC,KAAKJ,GAC1BK,MAAK,SAACF,GACL3D,EAASgC,EAAQ,eAEZxB,SCsBIsD,CAAa,CAAC5B,WAAUC,eAAcC,eAAcQ,QAAO3C,QACpE8D,SAASC,eAAe,aAAaC,cAGrCC,MAAM,2CAuC6B3E,MAAM,YAAYE,KAAK,UAAtD,eCdK0E,G,mNAzEX/D,MAAQ,CAAEgE,MAAO,GAAIC,aAAc,M,EAEnCC,aAAe,SAACF,GACZ,EAAKG,SAAS,CACVH,MAAOA,K,4CAIf,WACI,OACI,6BACI,yBAAK7E,MAAM,sBACX,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAYK,MAAM,QAAxC,QAGI,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAYK,MAAM,eAAxC,sBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,aAAcK,MAAM,QAA1C,qBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,SAAUK,MAAM,QAAtC,SAGJ,kBAAC,IAAD,CAAMC,GAAIN,EAAY,eAAgBK,MAAM,QAA5C,MAGI,yBAAKA,MAAM,cACP,yBAAKA,MAAM,QACP,yBAAKA,MAAM,iBACP,2BAAOE,KAAK,OAAOC,YAAY,cAC/B,uBAAGH,MAAM,uBAGjB,uBAAGA,MAAM,WAAT,YAKR,yBAAKA,MAAM,WACP,yBAAKA,MAAM,oBACP,yBAAKA,MAAM,kCACP,kBAAC,IAAD,CAASC,GAAIN,EAAY,WAAYK,MAAM,eAA3C,YAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,eAAgBK,MAAM,QAA/C,aAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,cAAeK,MAAM,QAA9C,eAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,gBAAiBK,MAAM,QAAhD,cAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,kBAAmBK,MAAM,QAAlD,gBAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,kBAAmBK,MAAM,QAAlD,kBAKR,yBAAKA,MAAM,gCACP,yBAAKA,MAAM,cACP,kBAAC,EAAD,CAAUiF,aAAcC,KAAKH,uB,GAlEnCI,IAAM9E,Y,SC+Eb+E,G,OA/EI,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAEZvF,EAAY,IAAIC,KAFM,EAIMmB,qBAJN,mBAIrB4B,EAJqB,KAIVwC,EAJU,KAKtBT,EAAQjE,aAAY,SAAAC,GAAK,OAAIA,EAAMuC,SAASnC,QAC5CR,EAAWE,cAEXM,EAAO4D,EAAMQ,GAEbE,EAAmB3E,aAAY,SAAAC,GACjC,YAAiC2E,IAA7B3E,EAAMuC,SAASnC,KAAKoE,GACbxE,EAAMuC,SAASnC,KAAKoE,GAAKvC,UAE7B,KAuBX,OAAK7B,EAKD,6BACI,yBAAK2C,UAAU,cACX,4DACA,2BAAO5D,MAAM,mBACT,+BACI,4BACI,yCACA,6CACA,6CACA,6CACA,6CACA,gDAGR,+BACI,4BACI,wBAAIyF,aAAW,aAAaxE,EAAK0B,UACjC,wBAAI8C,aAAW,iBAAiBxE,EAAK2B,cACrC,wBAAI6C,aAAW,iBAAiBxE,EAAK4B,cACrC,wBAAI6C,MAAO,CAAEC,MAAO,QAAUF,aAAW,iBACrC,2BACI,2BAAOvF,KAAK,OAAOwF,MAAO,CAAEC,MAAO,OAASxF,YAAY,qBAAqBwD,MAAOb,EAAWe,SA9C/H,SAA8B+B,GAC1BN,EAAaM,EAAEnC,OAAOE,UA8CM,4BAAQ+B,MAAO,CAAEG,OAAQ,SAAW3F,KAAK,SAAS4D,QA1ClF,WACQhB,EAAY,GAAKA,EAAY,KAC7BrC,EHWe,SAACC,EAAIoC,GAAL,MACzB,CACE5C,KAvCwB,eAwCxBqB,QAAS,CACPb,KACAoC,cGhBegD,CAAYT,EAAKvC,IAC1BwC,EAAa,KAEZX,MAAM,+BAqCiB,QAEJ,kBAACoB,EAAA,EAAD,CAAgBC,QAAQ,cAAcrC,MAAO4B,IAC7C,oDAA0BA,EAA1B,MAEJ,wBAAIG,MAAO,CAAEC,MAAO,QAAUF,aAAW,iBAAiBxE,EAAKF,KAAKkF,UAAU,EAAG,KACjF,wBAAIR,aAAW,oBAxCvC,WACI,IAAMS,EAAOnG,KAAKoG,MAAMlF,EAAKF,MAAQjB,EAAUsG,UAC/C,OAAIF,EAAO,EAAUG,KAAKC,IAAID,KAAKE,MAAML,EAAK,IAAK,GAAG,GAAG,KAAKM,WAAa,oBACpEH,KAAKC,IAAID,KAAKE,MAAML,EAAK,IAAK,GAAG,GAAG,KAAKM,WAAa,kBAqCNC,SAhChD,6CCfAC,EA3BE,SAAC,GAAiC,IAA/BrB,EAA8B,EAA9BA,IAAKpE,EAAyB,EAAzBA,KAAM0F,EAAmB,EAAnBA,aAC3B,OACI,yBAAK7C,QAAS,kBAAM6C,EAAatB,IAAMzB,UAAU,QAC7C,yBAAKA,UAAU,WACX,yBAAK5D,MAAM,UACP,2BAAO0F,MAAO,CAAEkB,OAAQ,YAAxB,eACC3F,EAAK0B,UAEV,yBAAK3C,MAAM,eACP,6BACI,2BAAO0F,MAAO,CAAEkB,OAAQ,YAAxB,iBACC3F,EAAK2B,cAEV,6BACI,2BAAO8C,MAAO,CAAEkB,OAAQ,YAAxB,sBACC3F,EAAK4B,cAEV,6BACI,2BAAO6C,MAAO,CAAEkB,OAAQ,YAAxB,mBACcpB,GAAbvE,EAAKF,KAAoB,GAAKE,EAAKF,KAAKkF,UAAU,EAAG,S,QC0E/DY,G,aAtFE,WAEb,IA6BMpG,EAAWE,cACXwC,EAASvC,aAAY,SAACC,GAAD,OAAWA,EAAMuC,SAASnC,QACjD6F,EAAYC,OAAOC,OAAO7D,GAC9B2D,EAAYA,EAAUG,MAAM,GAlCT,MAmCqB/F,mBAAS,MAnC9B,mBAmCZ4D,EAnCY,KAmCEoC,EAnCF,OAoCehG,mBAAS,IApCxB,mBAoCDiG,GApCC,WA0CbC,EAAmB,SAACxB,GACtB1B,QAAQC,IAAIyB,EAAEnC,OAAO/C,IACrBD,ELjB2B,CACjCP,KAlCyB,cAmCzBqB,QAAS,CAACb,GKegBkF,EAAEnC,OAAO/C,MAC7ByG,EAAa,KAGjB,GAAc,MAAVhE,GAAkB4D,OAAOM,KAAKlE,GAAQmE,OAAS,EAAG,CAElD,IAEMC,EAFOR,OAAOM,KAAKlE,GAECqE,KAAI,SAAChH,GAC3B,GAAY,OAARA,EACA,OACI,yBAAKR,MAAM,cACP,yBAAKU,GAAIF,EAAKoD,UAAU,aAAaE,QAASsD,GAC1C,uBAAG1G,GAAIF,EAAKR,MAAM,aAAa8D,QAASsD,KAE5C,kBAAC,EAAD,CACI/B,IAAM7E,EACNmG,aAAc,kBAvBjB,SAACnG,GAClB0G,EAAgB1G,GAsBwBmG,CAAanG,IACjCS,KAAMkC,EAAO3C,SASjC,OACI,yBAAKoD,UAAU,kBACV2D,EACD,6BACA,kBAAC,EAAD,CAAYlC,IAAKP,IACjB,6BACA,4BAAQ9E,MAAM,YAAY8D,QA3EpB,WACd,IAIM2D,EAAM,IAAIC,UAFI,WAFP,KACA,MAKbD,EAAIE,YAAY,IAEhB,IAQIC,EAAU,CACZC,OAAQ,GACRC,KATc,CAAC,CAAC,OAAQ,OAAQ,aAUhCC,KATWjB,EAAUU,KAAI,SAACQ,GAAD,MAAS,CAClCA,EAAIpF,aACJoF,EAAIrF,SACJqF,EAAInF,kBASN4E,EAAIQ,KAdU,eALK,GAmBS,IAC5BR,EAAIS,UAAUN,GACdH,EAAIU,KAAK,qBAkDD,oBAMZ,OAAO,sDCjBIC,E,4MApEXvH,MAAQ,CAAEgE,MAAO,GAAIC,aAAc,M,4CAEnC,WACI,OACI,6BACI,yBAAK9E,MAAM,sBACjB,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAWK,MAAM,QAAvC,QAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAYK,MAAM,eAAxC,sBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,aAAcK,MAAM,QAA1C,qBAGM,kBAAC,IAAD,CAAMC,GAAIN,EAAY,SAAUK,MAAM,QAAtC,SAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,eAAgBK,MAAM,QAA5C,MAGI,yBAAKA,MAAM,cACP,yBAAKA,MAAM,QACP,yBAAKA,MAAM,iBACP,2BAAOE,KAAK,OAAOC,YAAY,cAC/B,uBAAGH,MAAM,uBAGjB,uBAAGA,MAAM,WAAT,YAKR,yBAAKA,MAAM,WACP,yBAAKA,MAAM,oBACP,yBAAKA,MAAM,kCACP,kBAAC,IAAD,CAASC,GAAIN,EAAY,WAAYK,MAAM,QAA3C,YAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,eAAgBK,MAAM,eAA/C,aAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,cAAeK,MAAM,QAA9C,eAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,gBAAiBK,MAAM,QAAhD,cAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,kBAAmBK,MAAM,QAAlD,gBAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,kBAAmBK,MAAM,QAAlD,kBAKR,yBAAKA,MAAM,gCACP,yBAAKA,MAAM,cACP,qCACA,kBAAC,EAAD,c,GA7DFmF,IAAM9E,W,iBCW1BgI,EAAe,CACjBC,QAAS,CACL5H,GAAI,CACAA,GAAI,GACJ6H,MAAO,GACPC,QAAS,GACTC,OAAQ,GACRC,OAAQ,GACRC,MAAO,GACPC,OAAQ,GACRC,SAAU,GACVC,SAAU,GACVC,SAAU,M,SC+IPC,G,OApKI,WACf,IAAMvI,EAAWE,cADI,EAGaO,mBAAS,CACvCqH,MAAO,GACPC,QAAS,GACTI,OAAQ,WACRC,SAAU,GACVI,gBAAiB,GACjBC,cAAe,GACfP,MAAO,GACPQ,SAAU,GACVC,IAAK,GACLL,SAAU,UACVD,SAAU,KACVO,YAAa,GACbC,aAAc,KAhBG,mBAGdC,EAHc,KAGHC,EAHG,KAoBbjB,EAA+GgB,EAA/GhB,MAAOC,EAAwGe,EAAxGf,QAASI,EAA+FW,EAA/FX,OAAQK,EAAuFM,EAAvFN,gBAAiBC,EAAsEK,EAAtEL,cAAeP,EAAuDY,EAAvDZ,MAAsBE,GAAiCU,EAAhDJ,SAAgDI,EAAtCH,IAAsCG,EAAjCV,UAAUE,EAAuBQ,EAAvBR,SAAUD,EAAaS,EAAbT,SApBrF,EA0BS5H,mBAAS,IA1BlB,mBA0BLuI,GA1BK,WA4BfC,EAAW9I,aAAY,SAAAC,GAAK,OAAIA,EAAM8I,OAAOrB,WAEnDhF,qBAAU,WACNmG,EAAWC,KACV,CAACA,IAEN,IAAMnG,EAAgB,SAACC,GAAW,IAAD,EACLA,EAAMC,OAAtBC,EADqB,EACrBA,KAAMC,EADe,EACfA,MACd6F,EAAa,2BAAKD,GAAN,kBAAkB7F,EAAOC,MAgBzC,OACI,6BACI,0BAAMjD,GAAG,cAAckD,UAAU,WAC7B,yBAAKA,UAAU,SACX,yCACA,2BACIF,KAAK,QACLxD,KAAK,OACLyD,MAAO4E,EACP1E,SAAUN,KAGlB,yBAAKK,UAAU,SACX,2CACA,8BACIF,KAAK,UACLC,MAAO6E,EACP3E,SAAUN,KAGlB,kBAACqG,EAAA,EAAQC,MAAT,CAAeC,YAAU,GACrB,kBAACF,EAAA,EAAD,KAEI,yBAAKhG,UAAU,SACX,oDACA,8BACIF,KAAK,kBACLC,MAAOsF,EACPpF,SAAUN,MAItB,kBAACqG,EAAA,EAAD,KACI,yBAAKhG,UAAU,SACX,kDACA,8BACIF,KAAK,gBACLC,MAAOuF,EACPrF,SAAUN,OAK1B,yBAAKK,UAAU,SACX,sDACA,8BACIA,UAAU,QACVF,KAAK,QACLC,MAAOgF,EACP9E,SAAUN,KAGlB,yBAAKK,UAAU,SACX,0CACA,4BAEIF,KAAK,SACLG,SAAUN,GACV,4BAAQI,MAAM,YAAd,YACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,UAAd,YAGR,yBAAKC,UAAU,SACX,+CACA,2BACIF,KAAK,WACLxD,KAAK,OACLyD,MAAOkF,EACPhF,SAAUN,KAGlB,kBAACqG,EAAA,EAAQC,MAAT,CAAeC,YAAU,GACrB,kBAACF,EAAA,EAAD,KACI,yBAAKhG,UAAU,SACX,4CACA,4BAAQD,MAAOmF,EAAUpF,KAAK,WAAWG,SAAUN,GAC/C,4BAAQI,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,SAIZ,kBAACiG,EAAA,EAAD,KACI,yBAAKhG,UAAU,SACX,4CACA,4BAAQD,MAAOoF,EAAUrF,KAAK,WAAWG,SAAUN,GAC/C,4BAAQI,MAAM,WAAd,WACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,aAKhB,yBAAKC,UAAU,mBACX,4BAAQ5D,MAAM,YAAYE,KAAK,SAAS4D,QApHnC,SAACN,GAElB,GADAA,EAAMO,iBACQ,KAAVwE,GAA4B,KAAZC,GAAsC,KAApBS,EAAwB,CAE1D,IAAMvI,EAAKsD,MACXwF,EAAa,2BAAKD,GAAN,IAAiB7I,QAC7BD,EDjDa,SAACC,EAAI6H,EAAOC,GAAZ,IAAqBC,EAArB,uDAA8B,GAAIC,EAAlC,uDAA2C,GAAIC,EAA/C,uDAAuD,GAAIC,EAA3D,uCAAmEC,EAAnE,uCAA6EC,EAA7E,uCAAuFC,EAAvF,6CAAqG,CAC1H7I,KAJe,aAKfqB,QAAS,CACLb,KAAI6H,QAAOC,UAASC,SAAQC,SAAQC,QAAOC,SAAQC,WAAUC,WAAUC,aC8C1DgB,CAAUrJ,EAAI6H,EAAOC,EAASS,EAAiBC,EAAeP,EAAOC,EAAQC,EAAUC,EAAUC,IAC1GvE,SAASC,eAAe,eAAeC,cAEvCC,MAAM,4CA2GE,eC7FLqF,E,4MA7DXnJ,MAAQ,CAAEgE,MAAO,GAAIC,aAAc,M,EAEnCC,aAAe,SAACF,GACZ,EAAKG,SAAS,CACVH,MAAOA,K,4CAIf,WACI,OACI,6BACI,yBAAK7E,MAAM,sBACjB,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAWK,MAAM,QAAvC,QAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAYK,MAAM,QAAxC,sBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,aAAcK,MAAM,eAA1C,qBAGM,kBAAC,IAAD,CAAMC,GAAIN,EAAY,SAAUK,MAAM,QAAtC,SAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,eAAgBK,MAAM,QAA5C,MAGI,yBAAKA,MAAM,cACP,yBAAKA,MAAM,QACP,yBAAKA,MAAM,iBACP,2BAAOE,KAAK,OAAOC,YAAY,cAC/B,uBAAGH,MAAM,uBAGjB,uBAAGA,MAAM,WAAT,YAKR,yBAAKA,MAAM,WACP,yBAAKA,MAAM,oBACP,yBAAKA,MAAM,kCACP,kBAAC,IAAD,CAAMC,GAAIN,EAAY,aAAcK,MAAM,eAA1C,cAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,iBAAkBK,MAAM,QAA9C,iBAKR,yBAAKA,MAAM,gCACP,yBAAKA,MAAM,cACP,kBAAC,EAAD,CAAYiF,aAAcC,KAAK+E,yB,GAtDnC9E,IAAM9E,W,iBCgEf6J,G,OAjEE,WAEb,IAAM/G,EAASvC,aAAY,SAACC,GAAD,OAAWA,EAAMG,MAAMC,QAI5CkJ,GAHOvJ,aAAY,SAAAC,GAAK,OAAIA,EAAMG,MAAMD,QAC3BgG,OAAOC,OAAO7D,GACTqE,KAAI,SAACvG,EAAMP,GAAP,mBAAC,eAAkBO,GAAnB,IAAyBP,GAAIA,OACvCuG,MAAM,IAyCxB,OACI,yBAAKrD,UAAU,iBACX,2CAGA,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CACIuG,KAAMA,QCaXC,E,4JAjEb,WACE,OACE,6BACE,yBAAKpK,MAAM,sBACX,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAYK,MAAM,QAAxC,QAGY,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAYK,MAAM,eAAxC,sBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,aAAcK,MAAM,QAA1C,qBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,SAAUK,MAAM,QAAtC,SAGJ,kBAAC,IAAD,CAAMC,GAAIN,EAAY,eAAgBK,MAAM,QAA5C,MAGN,yBAAKA,MAAM,cACT,yBAAKA,MAAM,QACT,yBAAKA,MAAM,iBACT,2BAAOE,KAAK,OAAOC,YAAY,cAC/B,uBAAGH,MAAM,uBAGb,uBAAGA,MAAM,WAAT,YAKJ,yBAAKA,MAAM,WACT,yBAAKA,MAAM,oBACT,yBAAKA,MAAM,kCACK,kBAAC,IAAD,CAASC,GAAIN,EAAY,WAAYK,MAAM,QAA3C,YAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,eAAgBK,MAAM,QAA/C,aAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,cAAeK,MAAM,eAA9C,eAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,gBAAiBK,MAAM,QAAhD,cAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,kBAAmBK,MAAM,QAAlD,gBAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,kBAAmBK,MAAM,QAAlD,kBAKlB,yBAAKA,MAAM,gCACT,yBAAKA,MAAM,cACT,kBAAC,EAAD,c,GA1DWK,a,eCYVgK,MAdf,SAAmBC,GAKf,OACQ,yBAAK1G,UAAU,QACX,4BAAK0G,EAAM/B,OACX,2BAAI+B,EAAM1C,SACV,4BAAQ9D,QARpB,WACIwG,EAAMC,SAASD,EAAM5J,MAOb,YCuCD8J,MAhDf,SAAoBF,GAAQ,IAAD,EACDpJ,mBAAS,CAC/BqH,MAAO,GACPX,QAAS,KAHc,mBAClB6C,EADkB,KACZC,EADY,KAMzB,SAASC,EAAanH,GAAQ,IAAD,EACHA,EAAMC,OAAtBC,EADmB,EACnBA,KAAMC,EADa,EACbA,MAEd+G,GAAQ,SAAAE,GACN,OAAO,2BACFA,GADL,kBAEGlH,EAAOC,OAcd,OACE,yBAAKC,UAAU,eACb,8BACE,2BACEF,KAAK,QACLG,SAAU8G,EACVhH,MAAO8G,EAAKlC,MACZpI,YAAY,UAEd,8BACEuD,KAAK,UACLG,SAAU8G,EACVhH,MAAO8G,EAAK7C,QACZzH,YAAY,iBACZ0K,KAAK,MAEP,4BAAQjH,UAAU,MAAME,QAzB9B,SAAoBN,GAClB8G,EAAMQ,MAAML,GACZC,EAAQ,CACNnC,MAAO,GACPX,QAAS,KAEXpE,EAAMO,mBAmBF,UCAOgH,MAxCf,WAAqB,IAAD,EACQ7J,mBAAS,IADjB,mBACX8J,EADW,KACJC,EADI,KASlB,SAASC,EAAWxK,GAClBuK,GAAS,SAAAE,GACP,OAAOA,EAAUC,QAAO,SAACC,EAAUC,GACjC,OAAOA,IAAU5K,QAKvB,OACE,yBAAKkD,UAAU,aAEb,kBAAC,EAAD,CAAYkH,MAjBhB,SAAiBS,GACfN,GAAS,SAAAE,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsBI,UAiBrBP,EAAMxD,KAAI,SAAC6D,EAAUC,GACpB,OAEE,kBAAC,EAAD,CACE9K,IAAK8K,EACL5K,GAAI4K,EACJ/C,MAAO8C,EAAS9C,MAChBX,QAASyD,EAASzD,QAClB2C,SAAUW,SCcPM,E,4JA1Cb,WAEE,OACE,6BACE,yBAAKxL,MAAM,sBACT,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAWK,MAAM,QAAvC,QAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAYK,MAAM,QAAxC,sBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,aAAcK,MAAM,QAA1C,qBAGM,kBAAC,IAAD,CAAMC,GAAIN,EAAY,SAAUK,MAAM,eAAtC,SAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,eAAgBK,MAAM,QAA5C,MAGN,yBAAKA,MAAM,cACT,yBAAKA,MAAM,QACT,yBAAKA,MAAM,iBACT,2BAAOE,KAAK,OAAOC,YAAY,cAC/B,uBAAGH,MAAM,uBAGb,uBAAGA,MAAM,WAAT,YAKJ,yBAAKA,MAAM,gCACT,yBAAKA,MAAM,eACT,kBAAC,EAAD,a,GApCQK,aC0FLoL,G,OAxFG,WAAO,IAAD,EAEUvK,mBAAS,CACnCyB,SAAU,GACV+I,WAAY,IAAI3L,KAChB4L,SAAU,IAAI5L,KACdW,GAAI,KANY,mBAEbsC,EAFa,KAEJC,EAFI,OASM/B,mBAAS,IATf,mBASNgC,GATM,WAUZP,EAAsCK,EAAtCL,SAAgCjC,GAAMsC,EAA5B0I,WAA4B1I,EAAhB2I,SAAgB3I,EAANtC,IAClCD,EAAWE,cAGXwC,EAASvC,aAAY,SAACC,GAAD,OAAWA,EAAMG,MAAMC,QAC5CoC,EAAQzC,aAAY,SAAAC,GAAK,OAAIA,EAAMG,MAAMD,QACxC6K,EAAcvI,EAAduI,MAAOC,EAAOxI,EAAPwI,IACdvI,qBAAU,WAENJ,EAASC,KAEV,CAACA,EAAQyI,EAAOC,IAwBnB,OACI,6BACI,0BAAMnL,GAAG,aAAakD,UAAU,WAC5B,yBAAKA,UAAU,SACX,6CACA,2BACIF,KAAK,WACLxD,KAAK,OACLyD,MAAOhB,EACPkB,SA/BE,SAACL,GAAW,IAAD,EACLA,EAAMC,OAAtBC,EADqB,EACrBA,KAAMC,EADe,EACfA,MAED,aAATD,GACAT,EAAW,CAAEN,SAAUgB,QA8BnB,yBAAKC,UAAU,SACX,8CACA,kBAAC,EAAD,CAAe1D,KAAM,CAACK,KAAM,QAASG,KAAIF,IAAK,MAElD,yBAAKoD,UAAU,SACX,4CACA,kBAAC,EAAD,CAAe1D,KAAM,CAACK,KAAM,QAASC,IAAK,EAAGE,SAejD,yBAAKkD,UAAU,kBACX,4BAAQ5D,MAAM,YAAYE,KAAK,SAAS4D,QA/CnC,SAACN,GAGlB,GAFAA,EAAMO,iBAEW,KAAbpB,EAAiB,CACjB,IAAMjC,EAAKsD,MACXf,EAAW,2BAAKD,GAAN,IAAetC,QACzBD,EpB1CgB,SAACkC,EAAUmJ,EAAWC,EAASrL,GAA/B,MAAuC,CACjER,KAJ4B,iBAK5BqB,QAAS,CACPoB,WACAmJ,YACAC,UACArL,OoBoCiBsL,CAAarJ,EAAUiJ,EAAMC,EAAInL,IAC1C8D,SAASC,eAAe,cAAcC,cAEtCC,MAAM,4CAsCE,qBCZLsH,E,4MAnEXpL,MAAQ,CAAEgE,MAAO,GAAIC,aAAc,M,4CAEnC,WACI,OACI,6BACI,yBAAK9E,MAAM,sBACX,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAYK,MAAM,QAAxC,QAGI,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAYK,MAAM,eAAxC,sBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,aAAcK,MAAM,QAA1C,qBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,SAAUK,MAAM,QAAtC,SAGJ,kBAAC,IAAD,CAAMC,GAAIN,EAAY,eAAgBK,MAAM,QAA5C,MAGI,yBAAKA,MAAM,cACP,yBAAKA,MAAM,QACP,yBAAKA,MAAM,iBACP,2BAAOE,KAAK,OAAOC,YAAY,cAC/B,uBAAGH,MAAM,uBAGjB,uBAAGA,MAAM,WAAT,YAKR,yBAAKA,MAAM,WACP,yBAAKA,MAAM,oBACP,yBAAKA,MAAM,kCACP,kBAAC,IAAD,CAASC,GAAIN,EAAY,WAAYK,MAAM,QAA3C,YAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,eAAgBK,MAAM,QAA/C,aAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,cAAeK,MAAM,QAA9C,eAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,gBAAiBK,MAAM,eAAhD,cAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,kBAAmBK,MAAM,QAAlD,gBAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,kBAAmBK,MAAM,QAAlD,kBAKR,yBAAKA,MAAM,gCACP,yBAAKA,MAAM,cACP,kBAAC,EAAD,c,GA5DDmF,IAAM9E,WC4ElB6L,I,OA1EM,WAAO,IAAD,EAEehL,mBAAS,CAC3CiL,aAAc,GACdT,WAAY,IAAI3L,KAChB4L,SAAU,IAAI5L,KACdW,GAAI,KANe,mBAEhB0L,EAFgB,KAEHC,EAFG,OASWnL,mBAAS,IATpB,mBASLoL,GATK,WAUfH,EAA0CC,EAA1CD,aAAoCzL,GAAM0L,EAA5BV,WAA4BU,EAAhBT,SAAgBS,EAAN1L,IACtCD,EAAWE,cAGX4L,EAAa3L,aAAY,SAACC,GAAD,OAAWA,EAAM2L,SAASC,YACnDpJ,EAAQzC,aAAY,SAAAC,GAAK,OAAIA,EAAM2L,SAASzL,QAC3C6K,EAAcvI,EAAduI,MAAOC,EAAOxI,EAAPwI,IACdvI,qBAAU,WACNgJ,EAAaC,KAEd,CAACA,EAAYX,EAAOC,IAwBvB,OACI,6BACI,0BAAMnL,GAAG,gBAAgBkD,UAAU,WAC/B,yBAAKA,UAAU,SACX,iDACA,2BACIF,KAAK,eACLxD,KAAK,OACLyD,MAAOwI,EACPtI,SA/BE,SAACL,GAAW,IAAD,EACLA,EAAMC,OAAtBC,EADqB,EACrBA,KAAMC,EADe,EACfA,MAED,iBAATD,GACA2I,EAAe,CAAEF,aAAcxI,QA8B3B,yBAAKC,UAAU,SACX,8CACA,kBAAC,EAAD,CAAe1D,KAAM,CAACK,KAAM,WAAYG,KAAIF,IAAK,MAErD,yBAAKoD,UAAU,SACX,4CACA,kBAAC,EAAD,CAAe1D,KAAM,CAACK,KAAM,WAAYC,IAAK,EAAGE,SAEpD,yBAAKkD,UAAU,qBACX,4BAAQ5D,MAAM,YAAYE,KAAK,SAAS4D,QAlCnC,SAACN,GAGlB,GAFAA,EAAMO,iBAEe,KAAjBoI,EAAqB,CACrB,IAAMzL,EAAKsD,MACXqI,EAAe,2BAAKD,GAAN,IAAmB1L,QACjCD,ErBzCsB,SAAC0L,EAAcL,EAAWC,EAASrL,GAAnC,MAA2C,CAC3ER,KAJkC,uBAKlCqB,QAAS,CACP4K,eACAL,YACAC,UACArL,OqBmCiBgM,CAAmBP,EAAcP,EAAMC,EAAInL,IACpD8D,SAASC,eAAe,iBAAiBC,cAEzCC,MAAM,4CAyBE,iCCDLgI,G,4MAhEX9L,MAAQ,CAAEgE,MAAO,GAAIC,aAAc,M,EAEnCC,aAAe,SAACF,GACZ,EAAKG,SAAS,CACVH,MAAOA,K,4CAIf,WACI,OACI,6BACI,yBAAK7E,MAAM,sBACP,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAYK,MAAM,QAAxC,QAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAYK,MAAM,QAAxC,sBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,aAAcK,MAAM,QAA1C,qBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,SAAUK,MAAM,QAAtC,SAGJ,kBAAC,IAAD,CAAMC,GAAIN,EAAY,eAAgBK,MAAM,eAA5C,MAGI,yBAAKA,MAAM,cACP,yBAAKA,MAAM,QACP,yBAAKA,MAAM,iBACP,2BAAOE,KAAK,OAAOC,YAAY,cAC/B,uBAAGH,MAAM,uBAGjB,uBAAGA,MAAM,WAAT,YAKR,yBAAKA,MAAM,WACP,yBAAKA,MAAM,oBACP,yBAAKA,MAAM,kCACP,kBAAC,IAAD,CAAMC,GAAIN,EAAY,eAAgBK,MAAM,eAA5C,gBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,oBAAqBK,MAAM,QAAjD,kBAGI,kBAAC,IAAD,CAAMC,GAAIN,EAAY,oBAAqBK,MAAM,QAAjD,eAKZ,yBAAKA,MAAM,gCACP,yBAAKA,MAAM,cACP,kBAAC,GAAD,CAAciF,aAAcC,KAAK0H,2B,GAzDnCzH,IAAM9E,WC6EjBwM,I,OA7EO,WAElB,IAAMN,EAAa3L,aAAY,SAACC,GAAD,OAAWA,EAAM2L,SAASA,YAInDrC,GAHOvJ,aAAY,SAAAC,GAAK,OAAIA,EAAM2L,SAASzL,QAC1BgG,OAAOC,OAAOuF,GACT/E,KAAI,SAACgF,EAAU9L,GAAX,mBAAC,eAAuB8L,GAAxB,IAAkC9L,GAAIA,OACpDuG,MAAM,IAoD5B,OACI,yBAAKrD,UAAU,iBACX,8CAGA,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CACIuG,KAAMA,EACN2C,OA1DG,CACXC,SAAU,CACNxE,MAAO,CACHyE,MAAO,WACPtH,MAAO,CACHuH,WAAY,0CC6CjBC,G,4JAxDX,WACI,OACI,6BACI,yBAAKlN,MAAM,sBACX,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAYK,MAAM,QAAxC,QAGI,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAYK,MAAM,QAAxC,sBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,aAAcK,MAAM,QAA1C,qBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,SAAUK,MAAM,QAAtC,SAGJ,kBAAC,IAAD,CAAMC,GAAIN,EAAY,eAAgBK,MAAM,eAA5C,MAGI,yBAAKA,MAAM,cACP,yBAAKA,MAAM,QACP,yBAAKA,MAAM,iBACP,2BAAOE,KAAK,OAAOC,YAAY,cAC/B,uBAAGH,MAAM,uBAGjB,uBAAGA,MAAM,WAAT,YAKR,yBAAKA,MAAM,WACP,yBAAKA,MAAM,oBACP,yBAAKA,MAAM,kCACP,kBAAC,IAAD,CAAMC,GAAIN,EAAY,eAAgBK,MAAM,QAA5C,gBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,oBAAqBK,MAAM,eAAjD,kBAGI,kBAAC,IAAD,CAAMC,GAAIN,EAAY,oBAAqBK,MAAM,QAAjD,eAKhB,yBAAKA,MAAM,gCACP,yBAAKA,MAAM,cACP,kBAAC,GAAD,c,GAjDOK,aC+GhB8M,GAhHO,WAAO,IAAD,EAEUjM,mBAAS,CACvCqH,MAAO,GACPC,QAAS,GACTI,OAAQ,GACRC,SAAU,GACVI,gBAAiB,GACjBC,cAAe,GACfP,MAAO,GACPQ,SAAU,GACVC,IAAK,GACLL,SAAU,GACVD,SAAU,GACVO,YAAa,GACbC,aAAc,KAfM,mBAEjBC,EAFiB,KAENC,EAFM,KAkBThB,GAA0Ce,EAAjDhB,MAAiDgB,EAA1Cf,SAASK,EAAiCU,EAAjCV,SAAUE,EAAuBQ,EAAvBR,SAE5BxF,GAFmDgG,EAAbT,SAEtB,SAACtF,GAAW,IAAD,EACLA,EAAMC,OAAtBC,EADqB,EACrBA,KAAMC,EADe,EACfA,MAED,UAATD,GACA8F,EAAa,2BAAKD,GAAN,IAAiBhB,MAAO5E,KAG3B,aAATD,GACA8F,EAAa,2BAAKD,GAAN,IAAiBR,SAAUpF,OAK/C,OACI,6BACI,0BAAMjD,GAAG,iBAAiBkD,UAAU,WAChC,yBAAKA,UAAU,SACX,+CAEJ,yBAAKA,UAAU,SACX,2CACA,4BAAQD,MAAOoF,EAAUrF,KAAK,WAAWG,SAAUN,GAC/C,4BAAQI,MAAM,MAAd,MACA,4BAAQA,MAAM,QAAd,UAGR,kBAACiG,EAAA,EAAQC,MAAT,CAAeC,YAAU,GACrB,kBAACF,EAAA,EAAD,KACI,yBAAKhG,UAAU,SACX,wCACA,2BACIF,KAAK,UACLC,MAAO6E,MAKnB,kBAACoB,EAAA,EAAD,KACI,yBAAKhG,UAAU,SACX,yDACA,2BACIF,KAAK,WACLxD,KAAK,OACLyD,MAAOkF,OAMvB,yBAAKjF,UAAU,SACX,uCAEJ,yBAAKA,UAAU,SACX,2CACA,4BAAQD,MAAOoF,EAAUrF,KAAK,WAAWG,SAAUN,GAC/C,4BAAQI,MAAM,MAAd,MACA,4BAAQA,MAAM,QAAd,UAGR,kBAACiG,EAAA,EAAQC,MAAT,CAAeC,YAAU,GACrB,kBAACF,EAAA,EAAD,KACI,yBAAKhG,UAAU,SACX,wCACA,2BACIF,KAAK,UACLC,MAAO6E,MAKnB,kBAACoB,EAAA,EAAD,KACI,yBAAKhG,UAAU,SACX,gDACA,2BACIF,KAAK,WACLxD,KAAK,OACLyD,MAAOkF,OAMvB,yBAAKjF,UAAU,mBACX,4BAAQ5D,MAAM,YAAYE,KAAK,UAA/B,kBCpCLkN,G,4MAhEXvM,MAAQ,CAAEgE,MAAO,GAAIC,aAAc,M,EAEnCC,aAAe,SAACF,GACZ,EAAKG,SAAS,CACVH,MAAOA,K,4CAIf,WACI,OACI,6BACI,yBAAK7E,MAAM,sBACjB,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAWK,MAAM,QAAvC,QAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAYK,MAAM,QAAxC,sBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,aAAcK,MAAM,QAA1C,qBAGM,kBAAC,IAAD,CAAMC,GAAIN,EAAY,SAAUK,MAAM,QAAtC,SAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,eAAgBK,MAAM,eAA5C,MAGI,yBAAKA,MAAM,cACP,yBAAKA,MAAM,QACP,yBAAKA,MAAM,iBACP,2BAAOE,KAAK,OAAOC,YAAY,cAC/B,uBAAGH,MAAM,uBAGjB,uBAAGA,MAAM,WAAT,YAKR,yBAAKA,MAAM,WACP,yBAAKA,MAAM,oBACP,yBAAKA,MAAM,kCACX,kBAAC,IAAD,CAAMC,GAAIN,EAAY,eAAgBK,MAAM,QAA5C,gBAGI,kBAAC,IAAD,CAAMC,GAAIN,EAAY,oBAAqBK,MAAM,QAAjD,kBAGI,kBAAC,IAAD,CAAMC,GAAIN,EAAY,oBAAqBK,MAAM,eAAjD,eAKZ,yBAAKA,MAAM,gCACP,yBAAKA,MAAM,cACP,kBAAC,GAAD,CAAeiF,aAAcC,KAAKmI,4B,GAzD/BlI,IAAM9E,WCkGtBiN,GAhGK,WAAO,IAAD,EACcpM,mBAAS,CACzCqM,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnB/B,WAAY,IAAI3L,KAChB4L,SAAU,IAAI5L,KACd+C,UAAW,EACXpC,GAAI,KARc,mBACfgN,EADe,KACHC,EADG,OAWUzM,mBAAS,IAXnB,mBAWL0M,GAXK,WAYdL,EAA6EG,EAA7EH,YAAaC,EAAgEE,EAAhEF,gBAAiBC,EAA+CC,EAA/CD,kBAChChN,GAD+EiN,EAA5BhC,WAA4BgC,EAAhB/B,SAAgB+B,EAANhN,GAC9DC,eAEXkN,EAAYjN,aAAY,SAACC,GAAD,OAAWA,EAAMiN,QAAQA,WACjDzK,EAAQzC,aAAY,SAAAC,GAAK,OAAIA,EAAMiN,QAAQ/M,QAC1C6K,EAAcvI,EAAduI,MAAOC,EAAOxI,EAAPwI,IAEdvI,qBAAU,WACNsK,EAAYC,KACb,CAACA,EAAWjC,EAAOC,IAEtB,IAAMtI,EAAgB,SAACC,GAAW,IAAD,EACLA,EAAMC,OAAtBC,EADqB,EACrBA,KAAMC,EADe,EACfA,MACdgK,EAAc,2BAAKD,GAAN,kBAAmBhK,EAAOC,MAgB3C,OACI,6BACI,0BAAMjD,GAAG,eAAekD,UAAU,WAC9B,yBAAKA,UAAU,SACX,gDACA,2BACIF,KAAK,cACLxD,KAAK,OACLyD,MAAO4J,EACP1J,SAAUN,KAGlB,yBAAKK,UAAU,SACX,+CACA,8BACIF,KAAK,kBACLxD,KAAK,OACL2K,KAAK,IACLlH,MAAO6J,EACP3J,SAAUN,KAGlB,yBAAKK,UAAU,SACX,sDACA,8BACIF,KAAK,oBACLxD,KAAK,OACL2K,KAAK,IACLlH,MAAO8J,EACP5J,SAAUN,KAGlB,kBAACqG,EAAA,EAAQC,MAAT,CAAeC,YAAU,GACrB,kBAACF,EAAA,EAAD,KACI,yBAAKhG,UAAU,SACX,8CACA,kBAAC,EAAD,CAAe1D,KAAM,CAAEK,KAAM,UAAWC,IAAI,OAGpD,kBAACoJ,EAAA,EAAD,KACI,yBAAKhG,UAAU,SACX,4CACA,kBAAC,EAAD,CAAe1D,KAAM,CAAEK,KAAM,UAAWC,IAAK,QAIzD,yBAAKoD,UAAU,oBACX,4BAAQE,QA5DH,SAACN,GAGlB,GAFAA,EAAMO,iBAEc,KAAhBwJ,GAA0C,KAApBC,GAAgD,KAAtBC,EAA0B,CAC1E,IAAM/M,EAAKsD,MACX2J,EAAc,2BAAKD,GAAN,IAAkBhN,QAC/BD,E1BrCc,SAAC8M,EAAaC,EAAiBC,EAAmB3B,EAAWC,EAASrL,GAAtE,MAA8E,CACtGR,KALyB,cAMzBqB,QAAS,CACPgM,cACAC,kBACAC,oBACA3B,YACAC,UACArL,O0B6BiBqN,CAAWR,EAAaC,EAAiBC,EAAmB7B,EAAMC,EAAInL,IAC/E8D,SAASC,eAAe,gBAAgBC,cAExCC,MAAM,2CAmDiC3E,MAAM,YAAYE,KAAK,UAAtD,mBCrBL8N,G,4MAnEXnN,MAAQ,CAAEgE,MAAO,GAAIC,aAAc,M,4CAEnC,WACI,OACI,6BACI,yBAAK9E,MAAM,sBACX,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAYK,MAAM,QAAxC,QAGI,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAYK,MAAM,eAAxC,sBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,aAAcK,MAAM,QAA1C,qBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,SAAUK,MAAM,QAAtC,SAGJ,kBAAC,IAAD,CAAMC,GAAIN,EAAY,eAAgBK,MAAM,QAA5C,MAGI,yBAAKA,MAAM,cACP,yBAAKA,MAAM,QACP,yBAAKA,MAAM,iBACP,2BAAOE,KAAK,OAAOC,YAAY,cAC/B,uBAAGH,MAAM,uBAGjB,uBAAGA,MAAM,WAAT,YAKR,yBAAKA,MAAM,WACP,yBAAKA,MAAM,oBACP,yBAAKA,MAAM,kCACP,kBAAC,IAAD,CAASC,GAAIN,EAAY,WAAYK,MAAM,QAA3C,YAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,eAAgBK,MAAM,QAA/C,aAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,cAAeK,MAAM,QAA9C,eAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,gBAAiBK,MAAM,QAAhD,cAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,kBAAmBK,MAAM,eAAlD,gBAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,kBAAmBK,MAAM,QAAlD,kBAKR,yBAAKA,MAAM,gCACP,yBAAKA,MAAM,cACP,kBAAC,GAAD,c,GA5DCmF,IAAM9E,W,kBC6MpB4N,I,OAxMI,WAEf,IAmCMvE,EAAW9I,aAAY,SAACC,GAAD,OAAWA,EAAM8I,OAAOrB,WAC/C4F,EAAcnH,OAAOC,OAAO0C,GAAUzC,MAAM,GAtC7B,EAuCuB/F,mBAAS,MAvChC,gCAwCiBA,mBAAS,OAxC1B,mBAwCdiN,EAxCc,KAwCDC,EAxCC,OAyCiBlN,mBAAS,eAAIwI,IAzC9B,mBAyCD2E,GAzCC,WA4CfC,EADgBJ,EAAY9C,QAAO,SAAAzB,GAAM,MAAwB,YAApBA,EAAOZ,YACrBzB,OAE/BiH,EADcL,EAAY9C,QAAO,SAAAzB,GAAM,MAAwB,UAApBA,EAAOZ,YACvBzB,OAE3BkH,EADeN,EAAY9C,QAAO,SAAAzB,GAAM,MAAwB,WAApBA,EAAOZ,YACtBzB,OAE7BmH,EADYP,EAAY9C,QAAO,SAAAzB,GAAM,MAAwB,QAApBA,EAAOZ,YACzBzB,OAEvB7G,EAAWE,cAEXE,EAAQ,CACV6N,OAAQ,CAAC,WACTC,SAAU,CACN,CACI3B,MAAO,WACP4B,gBAAiB,qBACjBC,YAAa,gBACbC,YAAa,EACb3E,KAAM,CAACmE,IAEX,CACItB,MAAO,SACP4B,gBAAiB,oBACjBC,YAAa,gBACbC,YAAa,EACb3E,KAAM,CAACoE,IAEX,CACIvB,MAAO,UACP4B,gBAAiB,qBACjBC,YAAa,gBACbC,YAAa,EACb3E,KAAM,CAACqE,IAEX,CACIxB,MAAO,OACP4B,gBAAiB,qBACjBC,YAAa,gBACbC,YAAa,EACb3E,KAAM,CAACsE,MAcbM,EAAqB,SAACnJ,GACxBnF,EnBjG6B,CACjCP,KAXkB,gBAYlBqB,QAAS,CAACb,GmB+FgBkF,EAAEnC,OAAO/C,MAC/B2N,EAAe,KAGnB,GAAgB,MAAZ3E,GAAoB3C,OAAOM,KAAKqC,GAAUpC,OAAS,EAAG,CACtD,IAAM0H,EAAgBd,EAAY1G,KAAI,SAACmC,EAAQ2B,GAC3C,GAAoB,IAAhB3B,EAAOpB,MAAa,CACpB,IAAM0G,EAAS3D,IAAU6C,EAAc,SAAW,GAElD,OACI,yBAAK3N,IAAKmJ,EAAOpB,OACb,yBAAK3E,UAAS,gBAAWqL,GAAUnL,QAAS,kBArB3C,SAACwH,GAElB8C,EADiBD,IAAgB7C,GAAS,EAAIA,GAoBoB4D,CAAa5D,KAC3D,yBAAK5K,GAAIiJ,EAAOjJ,GAAIkD,UAAU,aAAaE,QAAS,SAAC8B,GAA4B,OAArBA,EAAEuJ,kBAA0BJ,EAAmBnJ,KACxG,uBAAGlF,GAAIiJ,EAAOjJ,GAAIV,MAAM,aAAa8D,QAASiL,KAGjD,yBAAKnL,UAAU,aAEf,uBAAGA,UAAU,kBAEZ+F,EAAOpB,QAKZ,yBAAK3E,UAAS,kBAAaqL,IACvB,2BACI,4CAAyBtF,EAAOnB,SAEpC,2BACI,2CAAwBmB,EAAOf,QAEnC,2BACI,6CAA0Be,EAAOd,UAErC,2BACI,qDADJ,IACuCc,EAAOlB,QAE9C,2BACI,mDADJ,IACqCkB,EAAOyF,SAE5C,2BACI,0CADJ,IAC4BzF,EAAOhB,OAEnC,2BACI,6CAA0BgB,EAAOZ,UAErC,2BACI,6CAA0BY,EAAOb,gBASzD,OACI,6BACI,+CACA,yBAAKlF,UAAU,uBACVoL,GAQL,6BACA,6BACI,4BAAQhP,MAAM,YAAY8D,QAvKxB,WACd,IAIM2D,EAAM,IAAIC,UAFI,WAFP,KACA,MAKbD,EAAIE,YAAY,IAEhB,IAcIC,EAAU,CACVC,OAAQ,GACRC,KAfY,CAAC,CAAC,QAAS,UAAW,mBAAoB,iBAAkB,QAAS,SAAU,WAAY,WAAY,aAgBnHC,KAfSmG,EAAY1G,KAAI,SAACQ,GAAD,MAAS,CAClCA,EAAIO,MACJP,EAAIQ,QACJR,EAAIS,OACJT,EAAIU,OACJV,EAAIW,MACJX,EAAIY,OACJZ,EAAIa,SACJb,EAAIc,SACJd,EAAIe,cASRtB,EAAIQ,KApBU,iBALK,GAyBS,IAC5BR,EAAIS,UAAUN,GACdH,EAAIU,KAAK,uBAwIG,oBAIJ,6BACA,6BACI,kBAAC,OAAD,CACIgC,KAAMtJ,EACNwO,QACI,CACI9G,MAAO,CACH+G,SAAS,EACTrH,KAAM,2BACNsH,SAAU,IAEdC,OAAQ,CACJC,MAAO,CAAC,CACJC,MAAO,CACHC,aAAa,WAUrD,OAAO,wDCpJIC,GAtDO,WAClB,OACI,yBAAKhM,UAAU,iBAEP,yBAAK5D,MAAM,sBACjB,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAWK,MAAM,QAAvC,QAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAYK,MAAM,QAAxC,sBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,aAAcK,MAAM,eAA1C,qBAGM,kBAAC,IAAD,CAAMC,GAAIN,EAAY,SAAUK,MAAM,QAAtC,SAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,eAAgBK,MAAM,QAA5C,MAGI,yBAAKA,MAAM,cACP,yBAAKA,MAAM,QACP,yBAAKA,MAAM,iBACP,2BAAOE,KAAK,OAAOC,YAAY,cAC/B,uBAAGH,MAAM,uBAGjB,uBAAGA,MAAM,WAAT,YAKR,yBAAKA,MAAM,WACP,yBAAKA,MAAM,oBACP,yBAAKA,MAAM,kCACP,kBAAC,IAAD,CAAMC,GAAIN,EAAY,aAAcK,MAAM,QAA1C,cAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,iBAAkBK,MAAM,eAA9C,iBAKR,yBAAKA,MAAM,gCACP,yBAAKA,MAAM,cACP,kBAAC,GAAD,WCbb6P,GAnCK,SAAC,GAAuC,IAArCxK,EAAoC,EAApCA,IAAKyI,EAA+B,EAA/BA,QAASgC,EAAsB,EAAtBA,gBACjC,OACI,yBAAKhM,QAAS,kBAAMgM,EAAgBzK,IAAMzB,UAAU,QAChD,yBAAK5D,MAAM,WACP,yBAAKA,MAAM,WACP,yBAAKA,MAAM,UAAU8N,EAAQP,cAEjC,yBAAKvN,MAAM,WACP,wBAAIA,MAAM,iBAAV,WACA,yBAAKA,MAAM,iBACP,yBAAKA,MAAM,SACP,yBAAKA,MAAM,WACP,yBAAKA,MAAM,WACP,2BACI,gDAA6B8N,EAAQN,iBAEzC,2BACI,uDAAoCM,EAAQL,mBAEhD,2BACI,uDAAoCK,EAAQlC,MAAMmE,MAAM,KAAK,IAEjE,2BACI,qDAAkCjC,EAAQjC,IAAIkE,MAAM,KAAK,YCrBpFC,GAAc,SAAClC,EAASmC,EAAaC,EAAgBC,EAAYC,EAAU1P,EAAIF,GAAjE,MAA0E,CACnGN,KAL0B,eAM1BqB,QAAS,CACPuM,UACAmC,cACAC,iBACAC,aACAC,WACA1P,KACAF,SCgHW6P,I,OAvHD,SAAC,GAA4C,IAA1C9C,EAAyC,EAAzCA,YAAaxL,EAA4B,EAA5BA,UAAWuO,EAAiB,EAAjBA,WAAiB,EAClBpP,mBAAS,CAC7C4M,QAAS,GACTmC,YAAa,GACbC,eAAgB,GAChBC,WAAY,GACZC,SAAU,UAEVG,OAAQ,KAR8C,mBACjDC,EADiD,KACpCC,EADoC,OAWtBvP,mBAAS,IAXa,mBAWtCwP,GAXsC,WActDT,GAIEO,EALF1C,QAKE0C,EAJFP,aACAC,EAGEM,EAHFN,eACAC,EAEEK,EAFFL,WACAC,EACEI,EADFJ,SAEI3P,EAAWE,cAnBuC,EAqBtBO,oBAAS,GArBa,mBAuBlDyP,GAvBkD,UAuBrC/P,aAAY,SAACC,GAAD,OAAWA,EAAM+P,aAEhDtN,qBAAU,WACRoN,EAAaC,KACZ,CAACA,IAEJ,IAAMpN,EAAgB,SAACC,GAAW,IAAD,EACPA,EAAMC,OAAtBC,EADuB,EACvBA,KAAMC,EADiB,EACjBA,MACd8M,EAAe,2BAAKD,GAAN,kBAAoB9M,EAAOC,MA2B3C,OACE,yBAAKC,UAAU,SACb,yBAAKA,UAAU,eACb,mDAAyB2J,GACzB,4BAAQ3J,UAAU,YAAYE,QAASwM,GAAvC,YAGA,0BACE5P,GAAG,iBACHkD,UAAU,WAEV,yBAAKA,UAAU,SACb,+CACA,8BACEA,UAAU,kBACVF,KAAK,cACLxD,KAAK,OACLyD,MAAOsM,EACPpM,SAAUN,KAGd,yBAAKK,UAAU,SACb,oDACA,8BACEA,UAAU,kBACVF,KAAK,iBACLxD,KAAK,OACLyD,MAAOuM,EACPrM,SAAUN,KAGd,yBAAKK,UAAU,SACb,8CACA,8BACEA,UAAU,kBACVF,KAAK,aACLxD,KAAK,OACLyD,MAAOwM,EACPtM,SAAUN,KAGd,yBAAKK,UAAU,SACb,4CACA,4BAAQF,KAAK,WAAWG,SAAUN,GAChC,4BAAQnC,UAAQ,EAACuC,MAAM,WAAvB,WAGA,4BAAQA,MAAM,UAAd,YAGJ,yBAAKC,UAAU,sBACb,4BAAQE,QA3EG,SAACN,GAGpB,GAFAA,EAAMO,iBACNG,QAAQC,IAAI,YAAaqM,GACL,KAAhBP,GAAyC,KAAnBC,GAAwC,KAAfC,EAAmB,CACpE,IAAM3P,EAAM,OAASwD,MACrBE,QAAQC,IAAI,iBAAkB3D,GAC9BiQ,EAAe,2BAAKD,GAAN,IAAmBzO,eACjCtB,EACEuP,GACEzC,EACA0C,EACAC,EACAC,EACAC,EACArO,EACAvB,IAGJgE,SAASC,eAAe,kBAAkBC,cAE1CC,MAAM,2CAuD+B3E,MAAM,YAAYE,KAAK,UAAtD,gBCjDG2Q,GA9DM,SAAC,GAKf,IAJL9O,EAII,EAJJA,UACA6O,EAGI,EAHJA,SACAE,EAEI,EAFJA,iBACAC,EACI,EADJA,WAEMC,EAAapQ,aAAY,SAACC,GAAD,OAAWA,EAAM+P,YAAU7O,GACxDgP,GAFE,EAKyB7P,mBAAS8P,EAAWT,QAL7C,mBAKGA,EALH,KAKWU,EALX,KAMExQ,EAAWE,cAajB,OACE,yBAAKmD,QAAS,kBAAMgN,EAAiB/O,IAAY6B,UAAU,QACzD,yBAAKA,UAAU,WACb,yBAAK5D,MAAM,UACT,2BAAO0F,MAAO,CAAEkB,OAAQ,YAAxB,0BACCgK,EAASX,aAEZ,yBAAKjQ,MAAM,eACT,6BACE,2BAAO0F,MAAO,CAAEkB,OAAQ,YAAxB,sBACCgK,EAASV,gBAEZ,6BACE,2BAAOxK,MAAO,CAAEkB,OAAQ,YAAxB,gBACCgK,EAAST,YAEZ,6BACE,2BAAOzK,MAAO,CAAEkB,OAAQ,YAAxB,cACCgK,EAASR,UAEZ,6BACE,gDACA,2BACElQ,KAAK,OACLC,YAAY,eACZwD,MAAO4M,EACP1M,SArCZ,SAA4B+B,GAC1BqL,EAAWrL,EAAEnC,OAAOE,UAsCZ,4BAAQzD,KAAK,SAAS4D,QAnChC,WACiB,MAAXyM,GAA6B,MAAXA,GAA6B,MAAXA,GACtCU,EAAWV,GACX9P,EFFmB,SAACC,EAAI6P,EAAQ/P,GAAb,MACvB,CACEN,KAtBsB,aAuBtBqB,QAAS,CACPb,KACA6P,SACA/P,QEJS0Q,CAAUnP,EAAWwO,EAAQQ,KACjCpM,MAAM,+BA+BL,mBC8HGwM,GA7KO,SAAC,GAAgC,IAA9B5D,EAA6B,EAA7BA,YAAaxL,EAAgB,EAAhBA,UAAgB,EAyCdb,mBAAS,CAC7C4M,QAAS,GACTmC,YAAa,GACbC,eAAgB,GAChBC,WAAY,GACZC,SAAU,GACV1P,GAAI,KA/C8C,mBAyC7C8P,EAzC6C,aAkDlBtP,mBAAS,KAlDS,mBAkDlCwP,GAlDkC,WA0D9CjQ,GADF+P,EALF1C,QAKE0C,EAJFP,YAIEO,EAHFN,eAGEM,EAFFL,WAEEK,EADFJ,SAEezP,eA1DmC,EA2DlBO,oBAAS,GA3DS,mBA2D7CkQ,EA3D6C,KA2DlCC,EA3DkC,KA4D9CV,EAAa/P,aAAY,SAACC,GAAD,OAAWA,EAAM+P,YAEhDtN,qBAAU,WACRoN,EAAaC,KACZ,CAACA,IAEJ,IAKMW,EAAc,WAClBpN,QAAQC,IAAIiN,GACZC,GAAaD,IAzEqC,EA4EJlQ,mBAAS,MA5EL,mBA4E3BqQ,GA5E2B,aA0GVrQ,mBAAS,IA1GC,mBA0G9BsQ,GA1G8B,WA4G9CC,EAAe1K,OAAOC,OAAO2J,GAAY1J,MAAM,GAE/CyK,EAAuB,SAAC9L,GAC5BnF,EHvGmC,CACrCP,KAjB6B,kBAkB7BqB,QAAS,CAACb,GGqGgBkF,EAAEnC,OAAO/C,MACjC8Q,EAAiB,KAGbG,EAAmBhB,EAAW5O,GAEpC,QAAyByD,IAArBmM,EAAgC,CAClC,IAAM3C,EAAgBjI,OAAO6K,QAAQD,GAAkBnK,KAAI,SAACqK,GAAQ,IAAD,cAC9CA,EAD8C,GAC1DrR,EAD0D,KACrDsR,EADqD,KAEjE,GAAW,OAAPD,EACF,OACE,yBAAK7R,MAAM,cACT,yBAAKU,GAAImR,EAAIjO,UAAU,aAAaE,QAAS4N,GAC3C,uBAAGhR,GAAImR,EAAI7R,MAAM,aAAa8D,QAAS4N,KAEzC,kBAAC,GAAD,CACE3P,UAAWA,EACX6O,SAAUkB,EACVhB,iBAAkB,kBAnDL,SAACtQ,GACxB0D,QAAQC,IAAI,mBAAoB3D,GAChC+Q,EAAoB/Q,GAiDcsQ,CAAiBtQ,IACzCuQ,WAAYvQ,QAOtB,OACE,6BACE,4BAAK+M,EAAL,mBACA,yBAAK3J,UAAU,kBAAkBoL,GACjC,4BAAQlL,QAASwN,GAAjB,oBACCF,EACC,kBAAC,GAAD,CACE7D,YAAaA,EACb+C,WAAYgB,EACZvP,UAAWA,IAEX,KACJ,6BACA,6BACA,6BACE,4BAAQ/B,MAAM,YAAY8D,QAvJhB,WAChB,IAIM2D,EAAM,IAAIC,UAFI,WAFP,KACA,MAKbD,EAAIE,YAAY,IAEhB,IAoBIC,EAAU,CACZC,OAAQ,GACRC,KArBc,CACd,CACE,UACA,cACA,mBACA,aACA,WACA,gBAeFC,KAZW0J,EAAajK,KAAI,SAACQ,GAAD,MAAS,CACrCA,EAAI8F,QACJ9F,EAAIiI,YACJjI,EAAIkI,eACJlI,EAAImI,WACJnI,EAAIoI,SACJpI,EAAIuI,YASN9I,EAAIQ,KA1BU,wBALK,GA+BS,IAC5BR,EAAIS,UAAUN,GACdH,EAAIU,KAAK,sCAkHH,oCAOR,OACE,6BACE,8DACA,4BAAQrE,QAASwN,GAAjB,oBACCF,EACC,kBAAC,GAAD,CACE7D,YAAaA,EACb+C,WAAYgB,EACZvP,UAAWA,IAEX,OChLGgQ,GAAkB,SAACC,GAAD,MAAW,CACtC9R,KAHW,SAIX8R,SAGE3J,GAAe,CACjB0J,iBAAiB,GC6HNE,GA7HO,SAAC,GAAa,IAAX5M,EAAU,EAAVA,IACjBvF,EAAY,IAAIC,KADW,EAGCmB,qBAHD,mBAG1B4B,EAH0B,KAGfwC,EAHe,KAI3B4M,EAAWtR,aAAY,SAACC,GAAD,OAAWA,EAAMiN,QAAQA,WAChDrN,EAAWE,cAEXmN,EAAUoE,EAAS7M,GAEnBE,EAAmB3E,aAAY,SAACC,GACpC,YAAmC2E,IAA/B3E,EAAMiN,QAAQA,QAAQzI,GACjBxE,EAAMiN,QAAQA,QAAQzI,GAAKvC,UAE7B,KAcT,IAAMqP,EAAmBvR,aACvB,SAACC,GAAD,OAAWA,EAAMuR,gBAAgBL,mBAoBnC,OAAKjE,EAIDqE,EAEA,6BACE,kBAAC,GAAD,CAAe5E,YAAaO,EAAQP,YAAaxL,UAAWsD,KAMhE,6BACE,yBAAKzB,UAAU,cACb,+DACA,2BAAO5D,MAAM,mBACX,+BACE,4BACE,4CACA,gDACA,kDACA,kDACA,kDACA,8CACA,gDAGJ,+BACE,4BACE,wBAAIyF,aAAW,gBAAgBqI,EAAQP,aACvC,wBAAI9H,aAAW,oBAAoBqI,EAAQN,iBAC3C,wBAAI/H,aAAW,sBACZqI,EAAQL,mBAEX,wBAAI/H,MAAO,CAAEC,MAAO,QAAUF,aAAW,iBACvC,2BACE,2BACEvF,KAAK,OACLwF,MAAO,CAAEC,MAAO,OAChBxF,YAAY,qBACZwD,MAAOb,EACPe,SA1ElB,SAA8B+B,GAC5BN,EAAaM,EAAEnC,OAAOE,UA2ER,4BACE+B,MAAO,CAAEG,OAAQ,SACjB3F,KAAK,SACL4D,QA3ElB,WACMhB,EAAY,GAAKA,EAAY,KAC/BrC,EpCNqB,SAACC,EAAIoC,GAAL,MACzB,CACE5C,KAxBwB,eAyBxBqB,QAAS,CACPb,KACAoC,coCCSgD,CAAYT,EAAKvC,IAC1BwC,EAAa,KACRX,MAAM,+BAoEC,QAQF,kBAACoB,EAAA,EAAD,CACEC,QAAQ,cACRrC,MAAO4B,IAET,oDAA0BA,EAA1B,MAEF,wBAAIG,MAAO,CAAEC,MAAO,QAAUF,aAAW,oBACtCqI,EAAQlC,MAAM3F,UAAU,EAAG,IAD9B,KACqC,IAClC6H,EAAQjC,IAAI5F,UAAU,EAAG,KAE5B,wBAAIR,aAAW,oBA3E3B,WACE,IAAMS,EAAOnG,KAAKoG,MAAM2H,EAAQjC,KAAO/L,EAAUsG,UACjD,OAAIF,EAAO,EAEPG,KAAKC,IAAID,KAAKE,MAAML,EAAO,IAAO,GAAK,GAAK,KAAKM,WACjD,oBAGFH,KAAKC,IAAID,KAAKE,MAAML,EAAO,IAAO,GAAK,GAAK,KAAKM,WACjD,kBAkE2CC,IACnC,wBAAIhB,aAAW,kBACb,4BAAQvF,KAAK,SAAS4D,QAjFpC,WACErD,EAASsR,IAAgB,MAgFb,wBA/DL,4CCsNIM,GAtQK,WAClB,IAgCM5R,EAAWE,cACXkN,EAAYjN,aAAY,SAACC,GAAD,OAAWA,EAAMiN,QAAQA,WAEjDwE,EAAevL,OAAOC,OAAO6G,GAAW5G,MAAM,GAE9C0J,EAAa/P,aAAY,SAACC,GAAD,OAAWA,EAAM+P,YAC1C2B,EAAiBxL,OAAOC,OAAO2J,GAAY1J,MAAM,GAEvD/C,QAAQC,IAAIoO,GACZ,IAAMC,EAAeF,EAAa9K,KAAI,SAACsG,GAAD,OAAaA,EAAQP,eACrDkF,EAAoBH,EAAa9K,KAAI,SAACsG,GAAD,OAAaA,EAAQhL,aAChEoB,QAAQC,IAAIsO,GAEZ,IAmBIC,EAnBEC,EAAmBJ,EAAe/K,KAAI,SAACsG,GAC3C,IACM8E,EADM7L,OAAOC,OAAO8G,GACJtG,KAAI,SAACqL,GACzB,OAAOA,EAAEtC,UAEPuC,EAAS,EACTC,EAAS,EACTC,EAAS,EAMb,OALAJ,EAAUpL,KAAI,SAACqL,GACJ,KAALA,GAAUC,IACL,KAALD,GAAUE,IACL,KAALF,GAAUG,OAET,CAACF,EAAQC,EAAQC,MAWpBC,GAHclM,OAAOM,KAAKwG,GAAW5G,MAAM,GAC5BF,OAAOM,KAAKsJ,GAAY1J,MAAM,GAEjC,IACZiM,EAAY,GACZC,EAAY,GAElBR,EAAiBnL,KAAI,SAACqL,GACpBI,EAAU5O,KAAKwO,EAAE,IACjBK,EAAU7O,KAAKwO,EAAE,IACjBM,EAAU9O,KAAKwO,EAAE,OAGnB3O,QAAQC,IAAI8O,EAAWC,EAAWC,QAER3N,IAAtB+M,EAAe,KACjBG,EAAiB,CACfhE,OAAQ8D,EACR7D,SAAU,CACR,CACE3B,MAAO,OACP4B,gBAAiB,qBACjBC,YAAa,gBACbC,YAAa,EACb3E,KAAM8I,EACNG,gBAAiB,IAEnB,CACEpG,MAAO,OACP4B,gBAAiB,kBACjBC,YAAa,gBACbC,YAAa,EACb3E,KAAM+I,EACNE,gBAAiB,IAEnB,CACEpG,MAAO,UACP4B,gBAAiB,sBACjBC,YAAa,gBACbC,YAAa,EACb3E,KAAMgJ,EACNC,gBAAiB,OA5GD,MAkHclS,mBAAS,MAlHvB,mBAoHlBmS,GApHkB,UAoHF,CACpB3E,OAAQ8D,EACR7D,SAAU,CACR,CACE3B,MAAO,WACP4B,gBAAiB,qBACjBC,YAAa,gBACbC,YAAa,EACb3E,KAAMsI,EACNW,gBAAiB,OA7HC,EAuIsBlS,mBAAS,MAvI/B,mBAuIjBoS,EAvIiB,KAuIAC,EAvIA,KA8IxB,GAAiB,MAAb1F,GAAqB9G,OAAOM,KAAKwG,GAAWvG,OAAS,EAAG,CAC1D,IAEM0H,EAFOjI,OAAOM,KAAKwG,GAEErG,KAAI,SAAChH,GAC9B,GAAY,OAARA,EAGF,OACE,kBAAC,GAAD,CACE6E,IAAK7E,EACLsP,gBAAiB,kBAfH,SAACtP,GACvB+S,EAAmB/S,GACnBC,EAASsR,IAAgB,IAaMjC,CAAgBtP,IACvCsN,QAASD,EAAUrN,QAiC3B,OACE,6BACE,gDAECwO,EAED,6BACA,6BACE,4BAAQhP,MAAM,YAAY8D,QAjMhB,WAChB,IAIM2D,EAAM,IAAIC,UAFI,WAFP,KACA,MAKbD,EAAIE,YAAY,IAEhB,IAYIC,EAAU,CACZC,OAAQ,GACRC,KAbc,CACd,CAAC,UAAW,aAAc,qBAAsB,aAAc,aAa9DC,KAXWuK,EAAa9K,KAAI,SAACQ,GAAD,MAAS,CACrCA,EAAIuF,YACJvF,EAAIwF,gBACJxF,EAAIyF,kBACJzF,EAAI4D,MACJ5D,EAAI6D,SASNpE,EAAIQ,KAlBU,kBALK,GAuBS,IAC5BR,EAAIS,UAAUN,GACdH,EAAIU,KAAK,wBAoKH,4BAIF,6BACA,kBAAC,GAAD,CAAe9C,IAAKiO,IACpB,6BACA,6BACE,kBAAC,OAAD,CACEnJ,KAAMkJ,EACNhE,QAAS,CACP9G,MAAO,CACL+G,SAAS,EACTrH,KAAM,mBACNsH,SAAU,IAEZC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,UAQ3B,6BACE,kBAAC,OAAD,CACE/L,UAAU,kBACVuG,KAAMuI,EACNrD,QAAS,CACP9G,MAAO,CACL+G,SAAS,EACTrH,KAAM,yBACNsH,SAAU,IAEZC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,EACb6D,UAAW,GAEbC,SAAS,IAQbC,MAAO,CACL,CACED,SAAS,UAU3B,OAAO,wDClMME,G,4MAnEX9S,MAAQ,CAAEgE,MAAO,GAAIC,aAAc,M,4CAEnC,WACI,OACI,6BACI,yBAAK9E,MAAM,sBACX,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAYK,MAAM,QAAxC,QAGI,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAYK,MAAM,eAAxC,sBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,aAAcK,MAAM,QAA1C,qBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,SAAUK,MAAM,QAAtC,SAGJ,kBAAC,IAAD,CAAMC,GAAIN,EAAY,eAAgBK,MAAM,QAA5C,MAGI,yBAAKA,MAAM,cACP,yBAAKA,MAAM,QACP,yBAAKA,MAAM,iBACP,2BAAOE,KAAK,OAAOC,YAAY,cAC/B,uBAAGH,MAAM,uBAGjB,uBAAGA,MAAM,WAAT,YAKR,yBAAKA,MAAM,WACP,yBAAKA,MAAM,oBACP,yBAAKA,MAAM,kCACP,kBAAC,IAAD,CAASC,GAAIN,EAAY,WAAYK,MAAM,QAA3C,YAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,eAAgBK,MAAM,QAA/C,aAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,cAAeK,MAAM,QAA9C,eAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,gBAAiBK,MAAM,QAAhD,cAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,kBAAmBK,MAAM,QAAlD,gBAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,kBAAmBK,MAAM,eAAlD,kBAKR,yBAAKA,MAAM,gCACP,yBAAKA,MAAM,cACP,kBAAC,GAAD,c,GA5DCmF,IAAM9E,WCqEpBuT,G,4MAnEX/S,MAAQ,CAAEgE,MAAO,GAAIC,aAAc,M,4CAEnC,WACI,OACI,6BACI,yBAAK9E,MAAM,sBACX,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAYK,MAAM,QAAxC,QAGI,kBAAC,IAAD,CAAMC,GAAIN,EAAY,WAAYK,MAAM,eAAxC,sBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,aAAcK,MAAM,QAA1C,qBAGA,kBAAC,IAAD,CAAMC,GAAIN,EAAY,SAAUK,MAAM,QAAtC,SAGJ,kBAAC,IAAD,CAAMC,GAAIN,EAAY,eAAgBK,MAAM,QAA5C,MAGI,yBAAKA,MAAM,cACP,yBAAKA,MAAM,QACP,yBAAKA,MAAM,iBACP,2BAAOE,KAAK,OAAOC,YAAY,cAC/B,uBAAGH,MAAM,uBAGjB,uBAAGA,MAAM,WAAT,YAKR,yBAAKA,MAAM,WACP,yBAAKA,MAAM,oBACP,yBAAKA,MAAM,kCACP,kBAAC,IAAD,CAASC,GAAIN,EAAY,WAAYK,MAAM,QAA3C,YAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,eAAgBK,MAAM,QAA/C,aAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,cAAeK,MAAM,QAA9C,eAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,gBAAiBK,MAAM,QAAhD,cAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,kBAAmBK,MAAM,QAAlD,gBAGA,kBAAC,IAAD,CAASC,GAAIN,EAAY,kBAAmBK,MAAM,eAAlD,kBAKR,yBAAKA,MAAM,gCACP,yBAAKA,MAAM,cACP,kBAAC,GAAD,c,GA5DGmF,IAAM9E,WCYtBwT,GAbD,WACV,IAAMpT,EAAWE,cACjB,OACA,6BACI,4BAAQmD,QAAS,kBAAIrD,GCJlB,WACH,OAAO0B,IAASI,OAAOuR,gBAAgBxR,QDGvC,WEgCOyR,OAtBf,WACI,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAA8C,gBAAuBC,OAAK,EAACC,UAAWL,KAC7F,kBAAC,IAAD,CAAOG,KAA8C,wBAAsCE,UAAWtP,IACtG,kBAAC,IAAD,CAAOoP,KAA8C,wBAAsCE,UAAWrU,IACtG,kBAAC,IAAD,CAAOmU,KAA8C,4BAA8CE,UAAW9L,IAC9G,kBAAC,IAAD,CAAO4L,KAA8C,0BAA0CE,UAAWlK,IAC1G,kBAAC,IAAD,CAAOgK,KAA8C,8BAAkDE,UAAWtE,KAClH,kBAAC,IAAD,CAAOoE,KAA8C,2BAA4CE,UAAW9J,IAC5G,kBAAC,IAAD,CAAO4J,KAA8C,sBAAkCE,UAAW1I,IAClG,kBAAC,IAAD,CAAOwI,KAA8C,6BAAgDE,UAAWjI,IAChH,kBAAC,IAAD,CAAO+H,KAA8C,4BAA8CE,UAAWvH,KAC9G,kBAAC,IAAD,CAAOqH,KAA8C,iCAAwDE,UAAWhH,KACxH,kBAAC,IAAD,CAAO8G,KAA8C,iCAAwDE,UAAW9G,KACxH,kBAAC,IAAD,CAAO4G,KAA8C,+BAAoDE,UAAWlG,KACpH,kBAAC,IAAD,CAAOgG,KAA8C,+BAAoDE,UAAWP,KACpH,kBAAC,IAAD,CAAOK,KAA8C,iCAAwDE,UAAWN,OCJrHO,oBAAQ3O,GAJI,SAAC/E,GAAD,MAAe,CACxC2T,YAAa,kBAAM3T,GFlBV,WACH,OAAO0B,IAASI,OAAO8R,iBEoBhBF,EAzBO,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACjB5U,EAAU8U,cAKhB,OACE,yBAAK1Q,UAAU,8BACb,kBAAC,IAAD,CAAM3D,GAAIN,EAAY,IAAKiE,UAAU,QACnC,oDAEF,yBAAKA,UAAU,cACb,kBAAC,IAAD,CAAM3D,GAAIN,EAAY,IAAKiE,UAAU,QAArC,QAGA,4BAAQE,QAbO,WACnBsQ,IACA5U,EAAQ6E,KAAK,OAWT,e,SCIOkQ,OAff,WAEE,OACE,yBAAK3Q,UAAU,gBACb,kBAAC,IAAD,CAAY4Q,SAAS,IAAIhV,QAASA,GAChC,6BACI,kBAAC,GAAD,MACA,kBAAC,IAAD,CAAUS,GAAG,aACb,kBAAC,GAAD,U,kDChBNoI,GAAe,CACjBtH,KAAM,IAAIhB,MCCRsI,GAAe,CACnBpH,KAAM,CACJ,GAAM,CACJ0B,SAAU,GACVC,aAAc,GACdC,aAAc,GACd9B,KAAM,IAAIhB,KACV+C,UAAW,KCRXuF,GAAe,CACnBpH,KAAM,CACJ,GAAO,CACLyC,KAAM,GACNkI,MAAO,IAAI7L,KACX8L,IAAK,IAAI9L,OAIbgB,KAAM,CACJ6K,MAAO,IAAI7L,KACX8L,IAAK,IAAI9L,OCXPsI,GAAe,CACnBmE,SAAU,CACR,GAAO,CACL9I,KAAM,GACNkI,MAAO,IAAI7L,KACX8L,IAAK,IAAI9L,OAIbgB,KAAM,CACJ6K,MAAO,IAAI7L,KACX8L,IAAK,IAAI9L,OCVPsI,GAAe,CACjByF,QAAS,CACTpN,GAAK,CACH6M,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnB7B,MAAO,IAAI7L,KACX8L,IAAK,IAAI9L,KACT+C,UAAW,IAIf/B,KAAM,CACJ6K,MAAO,IAAI7L,KACX8L,IAAK,IAAI9L,OCdPsI,GAAe,CACnB3H,GAAI,CACFF,IAAK,CACHsN,QAAS,GACTmC,YAAa,GACbC,eAAgB,GAChBC,WAAY,GACZC,SAAU,GACVG,OAAQ,MCSCkE,GAXKC,aAAgB,CAClC5T,WNJ+B,WAAmC,IAAlCD,EAAiC,uDAAzBwH,GAAcsM,EAAW,uCAC/D,OAAQA,EAAOzU,MACX,IhDPmB,cgDQf,MAAO,CAACa,KAAM4T,EAAO5T,MAEzB,QACI,OAAOF,IMDjBuC,SLIyB,WAAmC,IAAlCvC,EAAiC,uDAAzBwH,GAAcsM,EAAW,uCAC3D,OAAQA,EAAOzU,MACb,I5ChBoB,W4CiBlB,OAAO,2BACFW,GADL,IAEEI,KAAK,2BACAJ,EAAMI,MADP,kBAED0T,EAAOpT,QAAQb,GAAK,CACnBiC,SAAUgS,EAAOpT,QAAQoB,SACzBC,aAAc+R,EAAOpT,QAAQqB,aAC7BC,aAAc8R,EAAOpT,QAAQsB,aAC7B9B,KAAM4T,EAAOpT,QAAQR,KACrB+B,UAAW,OAKnB,I5C9BuB,c4C+BrB,IAAME,EAAO,eAAOnC,GAEpB,cADOmC,EAAQ/B,KAAK0T,EAAOpT,QAAQb,IAC5BsC,EAET,I5ClCwB,e4CmCtB,OAAO,2BACFnC,GADL,IAEEI,KAAK,2BACAJ,EAAMI,MADP,kBAED0T,EAAOpT,QAAQb,GAFd,2BAGGG,EAAMI,KAAK0T,EAAOpT,QAAQb,KAH7B,IAIAoC,UAAW6R,EAAOpT,QAAQuB,gBAKlC,QACE,OAAOjC,IKtCXG,MJK0B,WAAmC,IAAlCH,EAAiC,uDAAzBwH,GAAcsM,EAAW,uCAC5D,OAAQA,EAAOzU,MACX,IjDpBwB,iBiDqBtB,OAAO,2BACFW,GADL,IAEEI,KAAK,2BAAMJ,EAAMI,MAAb,kBACF0T,EAAOpT,QAAQb,GAAK,CACpBgD,KAAMiR,EAAOpT,QAAQoB,SACrBiJ,MAAO+I,EAAOpT,QAAQuK,UACtBD,IAAK8I,EAAOpT,QAAQwK,aAK1B,IjD/B2B,oBiDgCzB,GAA0B,GAAtB4I,EAAOpT,QAAQf,IACjB,OAAO,2BACFK,GADL,IAECE,KAAK,2BACAF,EAAME,MADP,IAEH6K,MAAO+I,EAAOpT,QAAQR,SAGnB,GAA0B,GAAtB4T,EAAOpT,QAAQf,IACxB,OAAO,2BACFK,GADL,IAECE,KAAK,2BACAF,EAAME,MADP,IAEH8K,IAAK8I,EAAOpT,QAAQR,SAK5B,QACE,OAAOF,IItCX2L,SHI6B,WAAmC,IAAlC3L,EAAiC,uDAAzBwH,GAAcsM,EAAW,uCAC/D,OAAQA,EAAOzU,MACX,IjDpB8B,uBiDqB5B,OAAO,2BACFW,GADL,IAEE2L,SAAS,2BAAM3L,EAAM2L,UAAb,kBACNmI,EAAOpT,QAAQb,GAAK,CACpBgD,KAAMiR,EAAOpT,QAAQ4K,aACrBP,MAAO+I,EAAOpT,QAAQuK,UACtBD,IAAK8I,EAAOpT,QAAQwK,aAK1B,IjD/B8B,uBiDgC5B,GAA0B,GAAtB4I,EAAOpT,QAAQf,IACjB,OAAO,2BACFK,GADL,IAECE,KAAK,2BACAF,EAAME,MADP,IAEH6K,MAAO+I,EAAOpT,QAAQR,SAGnB,GAA0B,GAAtB4T,EAAOpT,QAAQf,IACxB,OAAO,2BACFK,GADL,IAECE,KAAK,2BACAF,EAAME,MADP,IAEH8K,IAAK8I,EAAOpT,QAAQR,SAK5B,QACE,OAAOF,IGrCX8I,O1CkB2B,WAAmC,IAAlC9I,EAAiC,uDAAzBwH,EAAcsM,EAAW,uCAC3D,OAAQA,EAAOzU,MACX,IAnCW,aAmCX,MAC4FyU,EAAOpT,QAAvFgH,EADZ,EACYA,MAAOC,EADnB,EACmBA,QAASC,EAD5B,EAC4BA,OAAQC,EADpC,EACoCA,OAAQC,EAD5C,EAC4CA,MAAOC,EADnD,EACmDA,OAAQC,EAD3D,EAC2DA,SAAUC,EADrE,EACqEA,SAAUC,EAD/E,EAC+EA,SAC3E,OAAO,2BACAlI,GADP,IAEIyH,QAAQ,2BACDzH,EAAMyH,SADN,kBAEFqM,EAAOpT,QAAQb,GAAK,CACjBA,GAAGiU,EAAOpT,QAAQb,GAAI6H,QAAOC,UAASC,SAAQC,SAAQC,QAAOC,SAAQC,WAAUC,WAAUC,gBAKzG,IA9Cc,gBA+CV,IAAM6L,EAAQ,eAAO/T,GAErB,cADO+T,EAAStM,QAAQqM,EAAOpT,QAAQb,IAChCkU,EAEX,QACI,OAAO/T,I0CrCjBiN,QFM4B,WAAmC,IAAlCjN,EAAiC,uDAAzBwH,GAAcsM,EAAW,uCAC9D,OAAQA,EAAOzU,MACX,IjDxBqB,ciDyBnB,OAAO,2BACFW,GADL,IAEEiN,QAAQ,2BAAMjN,EAAMiN,SAAb,kBACL6G,EAAOpT,QAAQb,GAAK,CACpB6M,YAAaoH,EAAOpT,QAAQgM,YAC5BC,gBAAiBmH,EAAOpT,QAAQiM,gBAChCC,kBAAmBkH,EAAOpT,QAAQkM,kBAClC7B,MAAO+I,EAAOpT,QAAQuK,UACtBD,IAAK8I,EAAOpT,QAAQwK,QACpBjJ,UAAW,OAKjB,IjDtC6B,sBiDuC3B,GAA0B,GAAtB6R,EAAOpT,QAAQf,IACjB,OAAO,2BACFK,GADL,IAECE,KAAK,2BACAF,EAAME,MADP,IAEH6K,MAAO+I,EAAOpT,QAAQR,SAGnB,GAA0B,GAAtB4T,EAAOpT,QAAQf,IACxB,OAAO,2BACFK,GADL,IAECE,KAAK,2BACAF,EAAME,MADP,IAEH8K,IAAK8I,EAAOpT,QAAQR,SAKxB,IjDxDoB,eiDyDtB,OAAO,2BACFF,GADL,IAEEiN,QAAQ,2BACHjN,EAAMiN,SADJ,kBAEJ6G,EAAOpT,QAAQb,GAFX,2BAGAG,EAAMiN,QAAQ6G,EAAOpT,QAAQb,KAH7B,IAIHoC,UAAW6R,EAAOpT,QAAQuB,gBAKlC,QACE,OAAOjC,IEtDX+P,SDA6B,WAAmC,IAAlC/P,EAAiC,uDAAzBwH,GAAcsM,EAAW,uCAC/D,OAAQA,EAAOzU,MACb,InBnBwB,emBoBtB,YAAiCsF,IAA7B3E,EAAM8T,EAAOpT,QAAQb,IAChB,2BACFG,GADL,kBAEG8T,EAAOpT,QAAQb,GAFlB,eAGKiU,EAAOpT,QAAQf,IAAM,CACpBsN,QAAS6G,EAAOpT,QAAQuM,QACxBmC,YAAa0E,EAAOpT,QAAQ0O,YAC5BC,eAAgByE,EAAOpT,QAAQ2O,eAC/BC,WAAYwE,EAAOpT,QAAQ4O,WAC3BC,SAAUuE,EAAOpT,QAAQ6O,SACzBG,OAAQ,OAKT,2BACF1P,GADL,kBAEG8T,EAAOpT,QAAQb,GAFlB,2BAGOG,EAAM8T,EAAOpT,QAAQb,KAH5B,kBAIKiU,EAAOpT,QAAQf,IAAM,CACpBsN,QAAS6G,EAAOpT,QAAQuM,QACxBmC,YAAa0E,EAAOpT,QAAQ0O,YAC5BC,eAAgByE,EAAOpT,QAAQ2O,eAC/BC,WAAYwE,EAAOpT,QAAQ4O,WAC3BC,SAAUuE,EAAOpT,QAAQ6O,SACzBG,OAAQ,QAKhB,InBjD2B,kBmBkDzB,IAAMC,EAAW,eAAQ3P,GAEzB,cADO2P,EAAYmE,EAAOpT,QAAQb,IAC3B8P,EAET,InBrDsB,amBsDpB,OAAO,2BACF3P,GADL,kBAEG8T,EAAOpT,QAAQb,GAFlB,2BAGOG,EAAM8T,EAAOpT,QAAQb,KAH5B,kBAIKiU,EAAOpT,QAAQf,IAJpB,2BAKSK,EAAM8T,EAAOpT,QAAQb,IAAIiU,EAAOpT,QAAQf,MALjD,IAMM+P,OAAQoE,EAAOpT,QAAQgP,aAK/B,QACE,OAAO1P,IClDXuR,gBhBPoC,WAAiC,IAAhCvR,EAA+B,uDAAzBwH,GAAcsM,EAAW,uCAClE,OAAQA,EAAOzU,MACX,IAbO,SAcH,MAAO,CAAC6R,gBAAiB4C,EAAO3C,MACpC,QACI,OAAOnR,M,UiBVbgU,GAAgB,CACpBrU,IAAK,OACLsU,cAGIC,GAAmBC,OAAOC,sCAAwCC,KAElEC,GAAmBC,aAAeP,GAAeJ,IAE5CY,GAAQC,aACjBH,GACAJ,GAAiBQ,aAAgBC,QAIxBC,GAAYC,aAAaL,ICV9BM,GACJ,kBAAC,KAAD,CAAqBhU,eAAgBA,GACnC,kBAAC,IAAD,CAAU0T,MAAOA,IACf,kBAAC,KAAD,CAAaO,QAAS,KAAMH,UAAWA,IACrC,kBAAC,GAAD,SAaRI,IAASC,OAAOH,GAAKnR,SAASC,eAAe,U","file":"static/js/main.1fab3ac0.chunk.js","sourcesContent":["import { createBrowserHistory, createHashHistory } from 'history';\nimport { useHistory } from 'react-router-dom';\n\nconst history = createHashHistory({forceRefresh:true});\n\nexport default history;","export const routeHelper = (path_name) =>     {\n   return process.env.NODE_ENV === \"production\" ? `/ReactAppTool/${path_name}` : `/${path_name}` \n}","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport {routeHelper} from \"../utils/routeHelper\";\n\nclass Welcome extends Component {\n\n  render() {\n    let todayDate = new Date();\n\n    return (\n      <div>\n        <div class=\"ui secondary  menu\">\n          <Link to={routeHelper(\"Welcome\")}class=\"active item\">\n            Home\n                </Link>\n          <Link to={routeHelper(\"TaskApp\")} class=\"item\">\n            Project Management\n                </Link>\n          <Link to={routeHelper(\"DefectApp\")} class=\"item\">\n            Defect Management\n                </Link>\n                <Link to={routeHelper(\"Forum\")} class=\"item\">\n            Forum\n                </Link>\n                <Link to={routeHelper(\"VacationApp\")} class=\"item\">\n                        HR\n                </Link>\n          <div class=\"right menu\">\n            <div class=\"item\">\n              <div class=\"ui icon input\">\n                <input type=\"text\" placeholder=\"Search...\" />\n                <i class=\"search link icon\"></i>\n              </div>\n            </div>\n            <a class=\"ui item\">\n              Logout\n                    </a>\n          </div>\n        </div>\n        <div class=\"twelve wide stretched column\">\n          <div class=\"ui segment\">\n            <h1>Welcome!</h1>\n            <br />\n            <p>Today is {todayDate.toLocaleString()}</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Welcome;","import React, { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { selectDate } from \"../../redux/DatePicker/action.js\"\nimport { selectGanttDate } from \"../../redux/GanttForm/action\"\nimport { selectVacationDate } from \"../../redux/VacationForm/action.js\"\nimport { selectProjectDate } from \"../../redux/ProjectApp/action.js\"\nimport {useSelector, useDispatch} from \"react-redux\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst DatePickerApp = ({type}) => {\n\n  const {mode, key, id}  = type;\n  \n  const dispatch = useDispatch();\n  const date_datepicker = useSelector(state => state.datepicker.date);\n  const date_gantt = useSelector(state => state.gantt.task);\n\n  const [date, setDate] = useState(new Date());\n\n  const handleSelect = (date) => {\n    // dispatch action to change date\n    \n    setDate(date)\n   \n    if (mode == \"task\") dispatch(selectDate(date ));\n    if (mode == \"gantt\") dispatch(selectGanttDate(date, key));\n    if (mode == \"vacation\") dispatch(selectVacationDate(date, key));\n    if (mode == \"project\") dispatch(selectProjectDate(date, key));\n  } \n\n\n  return (\n    <DatePicker selected={date}\n      onSelect={handleSelect}\n      />\n  );\n};\n\nexport default DatePickerApp;","// create action\n\nexport const SELECT_DATE = \"SELECT_DATE\";\n\n\n// action generators\n\nexport const selectDate = (date ) => ({\n    type: SELECT_DATE,\n    date\n})","export const ADD_GANTT_TASK = \"ADD_GANTT_TASK\";\nexport const SELECT_GANTT_DATE = \"SELECT_GANTT_DATE\"\n\nexport const addGanttTask = (taskName, startDate, endDate, id) => ({\n  type: ADD_GANTT_TASK,\n  payload: {\n    taskName,\n    startDate,\n    endDate,\n    id\n  },\n});\n\nexport const selectGanttDate = (date, key) => ({\n  type: SELECT_GANTT_DATE,\n  payload: {\n    date, key\n  }\n})","export const ADD_VACATION_REQUEST = \"ADD_VACATION_REQUEST\";\nexport const SELECT_VACATION_DATE = \"SELECT_VACATION_DATE\"\n\nexport const addVacationRequest = (employeeName, startDate, endDate, id) => ({\n  type: ADD_VACATION_REQUEST,\n  payload: {\n    employeeName,\n    startDate,\n    endDate,\n    id\n  },\n});\n\nexport const selectVacationDate = (date, key) => ({\n  type: SELECT_VACATION_DATE,\n  payload: {\n    date, key\n  }\n})","export const ADD_PROJECT = \"ADD_PROJECT\";\nexport const SELECT_PROJECT_DATE = \"SELECT_PROJECT_DATE\"\nexport const SET_PROGRESS = \"SET_PROGRESS\";\n\nexport const addProject = (projectName, projectAssignee, projectMilestones, startDate, endDate, id) => ({\n  type: ADD_PROJECT,\n  payload: {\n    projectName,\n    projectAssignee,\n    projectMilestones,\n    startDate,\n    endDate,\n    id\n  },\n});\n\nexport const selectProjectDate = (date, key) => ({\n  type: SELECT_PROJECT_DATE,\n  payload: {\n    date, key\n  }\n})\n\n\nexport const setProgress = (id, progressV ) => (\n  {\n    type: SET_PROGRESS,\n    payload: {\n      id,\n      progressV,\n    }\n  }\n)","import firebase from 'firebase';\n\n// inside key.js\n// export const api_key = AI..a..\n// add key.js to .gitignore\n//apiKey: api_key\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyAN9VigARouaAMuiSjzo4kvv7ylaMJ7yiM\",\n    authDomain: \"iqstool.firebaseapp.com\",\n    databaseURL: \"https://iqstool-default-rtdb.firebaseio.com\",\n    projectId: \"iqstool\",\n    storageBucket: \"iqstool.appspot.com\",\n    messagingSenderId: \"734034190613\",\n    appId: \"1:734034190613:web:198994b441d4b58163c91c\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst database = firebase.database();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport { firebase, googleAuthProvider, database as default };\n\n\n\n\n\n\n\n/*\n\ndatabase.ref().on('value', (snapshot) => {\n    console.log(snapshot.val());\n})\n\ndatabase.ref('expenses').push({\n    description: 'Rent',\n    note: '',\n    amount: 10960,\n    createdAt: 958493920\n})\n*/\n/*\ndatabase.ref()\n.once('value')\n.then((snapshot) => {\n    const val = snapshot.val();\n    console.log(val);\n}).catch((e) => {\n    console.log('Error fetching data', e);\n})\n*/\n/* database.ref().set({\n     name: 'Sam Ip',\n     age: 29,\n     stressLevel: 6,\n     isSingle: true,\n     job: {\n         title: 'Software Tester',\n         company: 'MIIPE'\n     },\n     location: {\n         city: 'Toronto',\n         country: 'Canada'\n     }\n }).then(() => {\n     console.log('Data is saved');\n }).catch((e) => {\n     console.log('This failed.', e);\n })\n\n// database.ref().set('This is my data.');\n\ndatabase.ref('age').set(27);\ndatabase.ref('location/city').set('Newmarket');\ndatabase.ref('attributes').set({\n    height: 50,\n    weight: 160\n})\n\n//database.ref('isSingle')\n//.remove()\n//.then(() => {\n//    console.log('Data is removed');\n//}).catch((e) => {\n//    console.log('Data was not removed', e);\n//})\n\ndatabase.ref().update({\n    stressLevel: 9,\n    'job/company': 'Amazon',\n    'location/city': 'Seattle'\n})\n*/","import database from '../../Firebase/firebase';\n\nexport const ADD_TASK = \"ADD_TASK\";\nexport const DELETE_TASK = \"DELETE_TASK\";\nexport const SET_PROGRESS = \"SET_PROGRESS\";\n\n\nexport const addTask = (task) => ({\n  type: ADD_TASK,\n   payload: task\n});\n\n\nexport const startAddTask = (taskData= {}) => {\n  return (dispatch) => {\n    const {\n      taskName,\n      taskAssignee, \n      taskPriority,\n      date = new Date(),\n      progressV = 0\n    } = taskData;\n    const task = { taskName, taskAssignee, taskPriority, date, progressV};\n    console.log(taskData)\n    // dispatch(addTask(taskData))\n\n    database.ref('tasks').push(taskData)\n    .then((ref) => {\n      dispatch(addTask({\n        // id: ref.key,\n        ...task\n      }))\n    })\n  }\n}\n\nexport const deleteTask = (id) => ({\n  type: DELETE_TASK,\n  payload: {id}\n});\n\nexport const setProgress = (id, progressV ) => (\n  {\n    type: SET_PROGRESS,\n    payload: {\n      id,\n      progressV,\n    }\n  }\n)\n","import React, { useEffect, useState } from \"react\";\nimport DatePickerApp from \"../Utlities/DatePickerApp\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { startAddTask } from \"../../redux/TaskForm/action.js\";\nimport uniqid from \"uniqid\";\nimport \"./TaskForm.scss\";\n\nconst TaskForm = () => {\n  const [newTask, setNewTask] = useState({\n    taskName: \"\",\n    taskAssignee: \"\",\n    taskPriority: \"\",\n    date: new Date(),\n    id: \"\",\n    progressV: 0,\n    inputProgress: null\n  });\n\n  const [tasks, setTasks] = useState([]);\n  const [startDate, setStartDate] = useState();\n  const { taskName, taskAssignee, taskPriority, date } = newTask;\n  const dispatch = useDispatch();\n\n  const tasks_ = useSelector((state) => state.taskform.task);\n  const date_ = useSelector((state) => state.datepicker.date);\n\n  useEffect(() => {\n    setTasks(tasks_);\n  }, [tasks_]);\n\n  const onInputChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === \"taskName\") {\n      setNewTask({ ...newTask, taskName: value });\n    }\n\n    if (name === \"taskAssignee\") {\n      setNewTask({  ...newTask, taskAssignee: value });\n    }\n\n    if (name === \"taskPriority\") {\n      setNewTask({ ...newTask, taskPriority: value });\n    }\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n\n    if (taskName !== \"\" && taskAssignee !== \"\" && taskPriority !== \"\") {\n      const id = uniqid();\n      setNewTask({ ...newTask, date: date_, id});\n      dispatch(startAddTask({taskName, taskAssignee, taskPriority, date_, id}));\n      document.getElementById(\"task-form\").submit();\n      \n    } else {\n      alert(\"Make sure all fields have been entered\");\n    }\n  };\n\n  return (\n    <div>\n      <form id=\"task-form\" className=\"ui form\" /* onSubmit={onFormSubmit} */>\n        <div className=\"field\">\n          <label>Task Name:</label>\n          <input\n            name=\"taskName\"\n            type=\"text\"\n            value={taskName}\n            onChange={onInputChange}\n          />\n        </div>\n        <div className=\"field\">\n          <label>Assigned To:</label>\n          <input\n            name=\"taskAssignee\"\n            type=\"text\"\n            value={taskAssignee}\n            onChange={onInputChange}\n          />\n        </div>\n        <div className=\"field\">\n          <label>Task Priority:</label>\n          <input\n            name=\"taskPriority\"\n            type=\"text\"\n            value={taskPriority}\n            onChange={onInputChange}\n          />\n        </div>\n        <div className=\"field\">\n          <label>Deadline:</label>\n          <DatePickerApp type={{mode: \"task\"}} />\n        </div>\n        <div className=\"task-form-btn\">\n          <button onClick={onFormSubmit} class=\"ui button\" type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\nexport default TaskForm;\n","import React from 'react';\nimport TaskForm from './TaskForm';\nimport \"./TaskApp.css\";\nimport { NavLink, Link } from 'react-router-dom';\nimport {routeHelper} from '../../utils/routeHelper';\n\nclass TaskApp extends React.Component {\n\n    state = { tasks: [], selectedTask: null };\n\n    onTaskSubmit = (tasks) => {\n        this.setState({\n            tasks: tasks\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div class=\"ui secondary  menu\">\n                <Link to={routeHelper(\"Welcome\")} class=\"item\">\n                        Home\n                </Link>\n                    <Link to={routeHelper(\"TaskApp\")} class=\"active item\">\n                        Project Management\n                    </Link>\n                    <Link to={routeHelper(\"DefectApp\")} class=\"item\">\n                        Defect Management\n                    </Link>\n                    <Link to={routeHelper(\"Forum\")} class=\"item\">\n                        Forum\n                </Link>\n                <Link to={routeHelper(\"VacationApp\")} class=\"item\">\n                        HR\n                </Link>\n                    <div class=\"right menu\">\n                        <div class=\"item\">\n                            <div class=\"ui icon input\">\n                                <input type=\"text\" placeholder=\"Search...\" />\n                                <i class=\"search link icon\"></i>\n                            </div>\n                        </div>\n                        <a class=\"ui item\">\n                            Logout\n                        </a>\n                    </div>\n                </div>\n                <div class=\"ui grid\">\n                    <div class=\"four wide column\">\n                        <div class=\"ui vertical fluid tabular menu\">\n                            <NavLink to={routeHelper(\"TaskApp\")} class=\"item active\">\n                                Add Task\n                            </NavLink>\n                            <NavLink to={routeHelper(\"TaskListApp\")} class=\"item\">\n                                Task List\n                            </NavLink>\n                            <NavLink to={routeHelper(\"GanttChart\")} class=\"item\">\n                                Gantt Chart\n                            </NavLink>\n                            <NavLink to={routeHelper(\"GanttFormApp\")} class=\"item\">\n                                Gantt Form\n                            </NavLink>\n                            <NavLink to={routeHelper(\"ProjectFormApp\")} class=\"item\">\n                                Project Form\n                            </NavLink>\n                            <NavLink to={routeHelper(\"ProjectListApp\")} class=\"item\">\n                                Project List\n                            </NavLink>\n                        </div>\n                    </div>\n                    <div class=\"twelve wide stretched column\">\n                        <div class=\"ui segment\">\n                            <TaskForm onFormSubmit={this.onTaskSubmit} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TaskApp;","import React, { useState, useEffect } from 'react';\nimport { LinearProgress } from '@material-ui/core';\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { setProgress } from \"../../redux/TaskForm/action.js\"\nimport \"./TaskDetail.scss\";\n\nconst TaskDetail = ({ idx }) => {\n\n    const todayDate = new Date();\n\n    const [progressV, setProgressV] = useState();\n    const tasks = useSelector(state => state.taskform.task);\n    const dispatch = useDispatch();\n\n    const task = tasks[idx];\n\n    const progressV_by_idx = useSelector(state => {\n        if (state.taskform.task[idx] !== undefined) {\n            return state.taskform.task[idx].progressV;\n        }\n        return 0;\n    })\n\n    function handleProgressUpdate(e) {\n        setProgressV(e.target.value)\n\n    }\n\n    function handleButtonClick() {\n        if (progressV > 0 && progressV < 101) {\n            dispatch(setProgress(idx, progressV));\n            setProgressV(\"\");\n        }\n        else alert(\"Invalid value was entered\")\n    }\n\n    function calculateDaysRemain() {\n        const diff = Date.parse(task.date) - todayDate.getTime()\n        if (diff > 0) return Math.abs(Math.round(diff/1000/60/60/24)).toString() + \" Day(s) Remaining\"\n        return Math.abs(Math.round(diff/1000/60/60/24)).toString() + \" Day(s) overdue\"\n    }\n\n\n    if (!task) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div>\n            <div className=\"ui segment\">\n                <h3>Selected Task - More Details</h3>\n                <table class=\"ui celled table\">\n                    <thead>\n                        <tr>\n                            <th>Task Name</th>\n                            <th>Task Assignee</th>\n                            <th>Task Priority</th>\n                            <th>Task Progress</th>\n                            <th>Task Deadline</th>\n                            <th>Days Remaining</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td data-label=\"Task Name\">{task.taskName}</td>\n                            <td data-label=\"Task Assignee\">{task.taskAssignee}</td>\n                            <td data-label=\"Task Priority\">{task.taskPriority}</td>\n                            <td style={{ width: \"120%\" }} data-label=\"Task Progress\">\n                                <p>\n                                    <input type=\"text\" style={{ width: \"80%\" }} placeholder=\"Enter Progress (%)\" value={progressV} onChange={handleProgressUpdate} />\n                                    <button style={{ margin: \"0 4px\" }} type=\"submit\" onClick={handleButtonClick}>Set</button>\n                                </p>\n                                <LinearProgress variant=\"determinate\" value={progressV_by_idx} />\n                                <label>Current Progress: {progressV_by_idx}%</label>\n                            </td>\n                            <td style={{ width: \"120%\" }} data-label=\"Task Deadline\">{task.date.substring(0, 10)}</td>\n                            <td data-label=\"Days to Deadline\">{calculateDaysRemain()}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n};\n\nexport default TaskDetail;","import React from 'react';\n\nconst TaskItem = ({ idx, task, onTaskSelect }) => {\n    return (\n        <div onClick={() => onTaskSelect(idx)} className=\"item\">\n            <div className=\"content\">\n                <div class=\"header\">\n                    <label style={{ cursor: \"pointer\" }}>Task Name: </label>\n                    {task.taskName}\n                </div>\n                <div class=\"description\">\n                    <div>\n                        <label style={{ cursor: \"pointer\" }}>Assigned to: </label>\n                        {task.taskAssignee}\n                    </div>\n                    <div>\n                        <label style={{ cursor: \"pointer\" }}>Priority of Task: </label>\n                        {task.taskPriority}\n                    </div>\n                    <div>\n                        <label style={{ cursor: \"pointer\" }}>Deadline: </label>\n                        {task.date == undefined ? \"\" : task.date.substring(0, 10)}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TaskItem;","import React, { useState } from 'react';\nimport TaskDetail from \"./TaskDetail\";\nimport TaskItem from './TaskItem';\nimport { useSelector, useDispatch} from \"react-redux\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport {deleteTask} from \"../../redux/TaskForm/action\"\nimport \"./TaskList.scss\";\n\nconst TaskList = () => {\n\n    const exportPDF = () => {\n        const unit = \"pt\";\n        const size = \"A4\"; // Use A1, A2, A3 or A4\n        const orientation = \"portrait\"; // portrait or landscape\n        const marginLeft = 40;\n        const doc = new jsPDF(orientation, unit, size);\n    \n        doc.setFontSize(15);\n    \n        const title = \"Tasks Report\";\n        const headers = [[\"Name\", \"Task\", \"Priority\"]];\n        const data = task_data.map((elt) => [\n          elt.taskAssignee,\n          elt.taskName,\n          elt.taskPriority,\n        ]);\n    \n        let content = {\n          startY: 50,\n          head: headers,\n          body: data,\n        };\n    \n        doc.text(title, marginLeft, 40);\n        doc.autoTable(content);\n        doc.save(\"task_report.pdf\");\n      };\n\n\n    const dispatch = useDispatch();\n    const tasks_ = useSelector((state) => state.taskform.task);\n    let task_data = Object.values(tasks_);\n    task_data = task_data.slice(1);\n    const [selectedTask, setSelectedTask] = useState(null);\n    const [localTask, setLocalTask] = useState({});\n\n    const onTaskSelect = (key) => {\n        setSelectedTask(key);\n    };\n\n    const handleDeleteTask = (e) => {\n        console.log(e.target.id)\n        dispatch(deleteTask(e.target.id));\n        setLocalTask({}); \n    }\n\n    if (tasks_ != null && Object.keys(tasks_).length > 0) {\n        \n        const keys = Object.keys(tasks_);\n\n        const renderedList = keys.map((key) => {\n            if (key !== \"id\") {\n                return (\n                    <div class=\"list-items\">\n                        <div id={key} className=\"trash-icon\" onClick={handleDeleteTask}>\n                            <i id={key} class=\"trash icon\" onClick={handleDeleteTask}></i>\n                        </div>\n                        <TaskItem\n                            idx ={key}\n                            onTaskSelect={() => onTaskSelect(key)}\n                            task={tasks_[key]}\n                        />\n\n                    </div>\n                );\n            }\n        } \n        );\n\n        return (\n            <div className=\"ui celled list\">\n                {renderedList}\n                <br />\n                <TaskDetail idx={selectedTask}/>\n                <br />\n                <button class=\"ui button\" onClick={exportPDF}>\n                    Generate Report\n                </button>\n            </div>\n        )\n    }\n    return <div>No Task Created....</div>\n};\n\nexport default TaskList;","import React from 'react';\nimport TaskList from './TaskList';\nimport { NavLink, Link } from 'react-router-dom';\nimport {routeHelper} from '../../utils/routeHelper';\n\nclass TaskListApp extends React.Component {\n\n    state = { tasks: [], selectedTask: null };\n\n    render() {\n        return (\n            <div>\n                <div class=\"ui secondary  menu\">\n          <Link to={routeHelper(\"Welcome\")}class=\"item\">\n            Home\n                </Link>\n          <Link to={routeHelper(\"TaskApp\")} class=\"item active\">\n            Project Management\n                </Link>\n          <Link to={routeHelper(\"DefectApp\")} class=\"item\">\n            Defect Management\n                </Link>\n                <Link to={routeHelper(\"Forum\")} class=\"item\">\n            Forum\n                </Link>\n                <Link to={routeHelper(\"VacationApp\")} class=\"item\">\n                        HR\n                </Link>\n                    <div class=\"right menu\">\n                        <div class=\"item\">\n                            <div class=\"ui icon input\">\n                                <input type=\"text\" placeholder=\"Search...\" />\n                                <i class=\"search link icon\"></i>\n                            </div>\n                        </div>\n                        <a class=\"ui item\">\n                            Logout\n                        </a>\n                    </div>\n                </div>\n                <div class=\"ui grid\">\n                    <div class=\"four wide column\">\n                        <div class=\"ui vertical fluid tabular menu\">\n                            <NavLink to={routeHelper(\"TaskApp\")} class=\"item\">\n                                Add Task\n                            </NavLink>\n                            <NavLink to={routeHelper(\"TaskListApp\")} class=\"item active\">\n                                Task List\n                            </NavLink>\n                            <NavLink to={routeHelper(\"GanttChart\")} class=\"item\">\n                                Gantt Chart\n                            </NavLink>\n                            <NavLink to={routeHelper(\"GanttFormApp\")} class=\"item\">\n                                Gantt Form\n                            </NavLink>\n                            <NavLink to={routeHelper(\"ProjectFormApp\")} class=\"item\">\n                                Project Form\n                            </NavLink>\n                            <NavLink to={routeHelper(\"ProjectListApp\")} class=\"item\">\n                                Project List\n                            </NavLink>\n                        </div>\n                    </div>\n                    <div class=\"twelve wide stretched column\">\n                        <div class=\"ui segment\">\n                            <h1>Tasks</h1>\n                            <TaskList />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TaskListApp;","const ADD_DEFECT = \"ADD_DEFECT\";\nconst DELETE_DEFECT = \"DELETE_DEFECT\";\n\nexport const addDefect = (id, title, summary, expect = \"\", actual = \"\", steps = \"\", status, assignee, priority, severity) => ({\n    type: ADD_DEFECT,\n    payload: {\n        id, title, summary, expect, actual, steps, status, assignee, priority, severity\n    }\n\n});\n\nexport const deleteDefect = (id) => ({\n    type: DELETE_DEFECT,\n    payload: {id}\n})\n\nconst initialState = {\n    defects: {\n        id: {\n            id: \"\",\n            title: \"\",\n            summary: \"\",\n            expect: \"\",\n            actual: \"\",\n            steps: \"\",\n            status: \"\",\n            assignee: \"\",\n            priority: \"\",\n            severity: \"\"\n        }\n    }\n};\n\nexport const defectReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_DEFECT:\n            const { title, summary, expect, actual, steps, status, assignee, priority, severity } = action.payload;\n            return {\n                ...state,\n                defects: {\n                    ...state.defects,\n                    [action.payload.id]: {\n                        id:action.payload.id, title, summary, expect, actual, steps, status, assignee, priority, severity\n                    }\n                }\n            }\n\n        case DELETE_DEFECT:\n            const newState = {...state};\n            delete newState.defects[action.payload.id];\n            return newState;\n\n        default:\n            return state;\n    }\n}","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addDefect } from \"../../redux/Defect\";\nimport { Segment } from 'semantic-ui-react'\nimport \"./DefectForm.scss\";\nimport uniqid from \"uniqid\";\n\nconst DefectForm = () => {\n    const dispatch = useDispatch();\n\n    const [newDefect, setNewDefect] = useState({\n        title: \"\",\n        summary: \"\",\n        status: \"Assigned\",\n        assignee: \"\",\n        expectedResults: \"\",\n        actualResults: \"\",\n        steps: \"\",\n        comments: \"\",\n        eta: \"\",\n        severity: \"Blocker\",\n        priority: \"P1\",\n        dateCreated: \"\",\n        dateResolved: \"\",\n    });\n\n\n    const { title, summary, status, expectedResults, actualResults, steps, comments, eta, assignee, severity, priority } = newDefect;\n\n    // useEffect(() => {\n    //     console.log(title,summary,status, priority)\n    // },[title,summary,status,priority])\n\n    const [defects, setDefects] = useState([]);\n\n    const defects_ = useSelector(state => state.defect.defects);\n\n    useEffect(() => {\n        setDefects(defects_);\n      }, [defects_]);\n\n    const onInputChange = (event) => {\n        const { name, value } = event.target;\n        setNewDefect({ ...newDefect, [name]: value });\n    };\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n        if (title !== \"\" && summary !== \"\" && expectedResults !== \"\") {\n            //generate uniqid and insert it as first param\n            const id = uniqid();\n            setNewDefect({ ...newDefect, id});\n            dispatch(addDefect(id, title, summary, expectedResults, actualResults, steps, status, assignee, priority, severity));\n            document.getElementById(\"defect-form\").submit();\n        } else {\n            alert(\"Make sure all fields have been entered\");\n        }\n    };\n\n    return (\n        <div>\n            <form id=\"defect-form\" className=\"ui form\" /* onSubmit={onFormSubmit} */>\n                <div className=\"field\">\n                    <label>Title:</label>\n                    <input\n                        name=\"title\"\n                        type=\"text\"\n                        value={title}\n                        onChange={onInputChange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label>Summary:</label>\n                    <textarea\n                        name=\"summary\"\n                        value={summary}\n                        onChange={onInputChange}\n                    />\n                </div>\n                <Segment.Group horizontal>\n                    <Segment>\n\n                        <div className=\"field\">\n                            <label>Expected Results:</label>\n                            <textarea\n                                name=\"expectedResults\"\n                                value={expectedResults}\n                                onChange={onInputChange}\n                            />\n                        </div>\n                    </Segment>\n                    <Segment>\n                        <div className=\"field\">\n                            <label>Actual Results:</label>\n                            <textarea\n                                name=\"actualResults\"\n                                value={actualResults}\n                                onChange={onInputChange}\n                            />\n                        </div>\n                    </Segment>\n                </Segment.Group>\n                <div className=\"field\">\n                    <label>Steps to Reproduce:</label>\n                    <textarea\n                        className=\"steps\"\n                        name=\"steps\"\n                        value={steps}\n                        onChange={onInputChange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label>Status:</label>\n                    <select\n                        //value={status} \n                        name=\"status\"\n                        onChange={onInputChange}>\n                        <option value=\"Assigned\">Assigned</option>\n                        <option value=\"Rejected\">Rejected</option>\n                        <option value=\"Cancelled\">Cancelled</option>\n                        <option value=\"Blocked\">Blocked</option>\n                        <option value=\"Hold\">Hold</option>\n                        <option value=\"Reopen\">Reopen</option>\n                        <option value=\"Ready for UAT\">Ready for UAT</option>\n                        <option value=\"Ready for DVT\">Ready for DVT</option>\n                        <option value=\"Closed\">Closed</option>\n                    </select>\n                </div>\n                <div className=\"field\">\n                    <label>Assigned To:</label>\n                    <input\n                        name=\"assignee\"\n                        type=\"text\"\n                        value={assignee}\n                        onChange={onInputChange}\n                    />\n                </div>\n                <Segment.Group horizontal>\n                    <Segment>\n                        <div className=\"field\">\n                            <label>Priority:</label>\n                            <select value={priority} name=\"priority\" onChange={onInputChange}>\n                                <option value=\"P1\">P1</option>\n                                <option value=\"P2\">P2</option>\n                                <option value=\"P3\">P3</option>\n                                <option value=\"P4\">P4</option>\n                            </select>\n                        </div>\n                    </Segment>\n                    <Segment>\n                        <div className=\"field\">\n                            <label>Severity:</label>\n                            <select value={severity} name=\"severity\" onChange={onInputChange}>\n                                <option value=\"Blocker\">Blocker</option>\n                                <option value=\"Major\">Major</option>\n                                <option value=\"Medium\">Medium</option>\n                                <option value=\"Minor\">Minor</option>\n                            </select>\n                        </div>\n                    </Segment>\n                </Segment.Group>\n                <div className=\"defect-form-btn\">\n                    <button class=\"ui button\" type=\"submit\" onClick={onFormSubmit}>\n                        Submit\n                        </button>\n                </div>\n            </form>\n        </div>\n    )\n};\n\nexport default DefectForm;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./DefectApp.css\";\nimport DefectForm from \"./DefectForm\";\nimport {routeHelper} from \"../../utils/routeHelper\";\n\nclass DefectApp extends React.Component {\n\n    state = { tasks: [], selectedTask: null };\n\n    onTaskSubmit = (tasks) => {\n        this.setState({\n            tasks: tasks\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div class=\"ui secondary  menu\">\n          <Link to={routeHelper(\"Welcome\")}class=\"item\">\n            Home\n                </Link>\n          <Link to={routeHelper(\"TaskApp\")} class=\"item\">\n            Project Management\n                </Link>\n          <Link to={routeHelper(\"DefectApp\")} class=\"active item\">\n            Defect Management\n                </Link>\n                <Link to={routeHelper(\"Forum\")} class=\"item\">\n            Forum\n                </Link>\n                <Link to={routeHelper(\"VacationApp\")} class=\"item\">\n                        HR\n                </Link>\n                    <div class=\"right menu\">\n                        <div class=\"item\">\n                            <div class=\"ui icon input\">\n                                <input type=\"text\" placeholder=\"Search...\" />\n                                <i class=\"search link icon\"></i>\n                            </div>\n                        </div>\n                        <a class=\"ui item\">\n                            Logout\n                        </a>\n                    </div>\n                </div>\n                <div class=\"ui grid\">\n                    <div class=\"four wide column\">\n                        <div class=\"ui vertical fluid tabular menu\">\n                            <Link to={routeHelper(\"DefectApp\")} class=\"item active\">\n                                Add Defect\n                            </Link>\n                            <Link to={routeHelper(\"DefectListApp\")} class=\"item\">\n                                Defect List\n                            </Link>\n                        </div>\n                    </div>\n                    <div class=\"twelve wide stretched column\">\n                        <div class=\"ui segment\">\n                            <DefectForm onFormSubmit={this.onDefectSubmit} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DefectApp;","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport TimeLine from \"react-gantt-timeline\";\nimport \"./GanttApp.css\";\n\nconst GanttApp = () => {\n\n    const tasks_ = useSelector((state) => state.gantt.task);\n    const date = useSelector(state => state.gantt.date);\n    const tasks_noid = Object.values(tasks_);\n    const temp = tasks_noid.map((task, id) => ({...task, id: id}));\n    const data = temp.slice(1);\n\n    const genID = () => {\n        function S4() {\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n        }\n        return (\n            S4() +\n            S4() +\n            \"-\" +\n            S4() +\n            \"-4\" +\n            S4().substr(0, 3) +\n            \"-\" +\n            S4() +\n            \"-\" +\n            S4() +\n            S4() +\n            S4()\n        ).toLowerCase();\n    }\n    function createLink(start, end) {\n        return {\n            id: genID(),\n            start: start.task.id,\n            startPosition: start.position,\n            end: end.task.id,\n            endPosition: end.position\n        };\n    }\n    /*     const onUpdateTask  = (item) => {\n            item.start = props.start;\n            item.end = props.end;\n            this.setState({ data: [...this.state.data] });\n        };\n       const onCreateLink = item => {\n            let newLink = this.createLink(item.start, item.end);\n            this.setState({ links: [...this.state.links, newLink] });\n        }; */\n\n\n    return (\n        <div className=\"app-container\">\n            <h1>Gantt Chart</h1>\n            {/* DayWidth<input type=\"range\" min=\"30\" max=\"500\" value={this.state.daysWidth} onChange={this.handleDayWidth} step=\"1\"/>\n       Item Height<input type=\"range\" min=\"30\" max=\"500\" value={this.state.itemheight} onChange={this.handleItemHeight} step=\"1\"/> */}\n            <div className=\"time-line-container\">\n                <TimeLine\n                    data={data}\n                    //links={this.state.links}\n                    //onUpdateTask={this.onUpdateTask}\n                    //onCreateLink={this.onCreateLink}\n                />\n            </div>\n        </div>\n    );\n\n}\n\nexport default GanttApp;","import React, { Component } from 'react';\nimport { Link, NavLink } from \"react-router-dom\";\nimport GanttApp from './GanttApp';\nimport {routeHelper} from '../../utils/routeHelper';\n\nclass GanttChart extends Component {\n\n  render() {\n    return (\n      <div>\n        <div class=\"ui secondary  menu\">\n        <Link to={routeHelper(\"Welcome\")} class=\"item\">\n                        Home\n                </Link>\n                    <Link to={routeHelper(\"TaskApp\")} class=\"item active\">\n                        Project Management\n                    </Link>\n                    <Link to={routeHelper(\"DefectApp\")} class=\"item\">\n                        Defect Management\n                    </Link>\n                    <Link to={routeHelper(\"Forum\")} class=\"item\">\n                        Forum\n                </Link>\n                <Link to={routeHelper(\"VacationApp\")} class=\"item\">\n                        HR\n                </Link>\n          <div class=\"right menu\">\n            <div class=\"item\">\n              <div class=\"ui icon input\">\n                <input type=\"text\" placeholder=\"Search...\" />\n                <i class=\"search link icon\"></i>\n              </div>\n            </div>\n            <a class=\"ui item\">\n              Logout\n                        </a>\n          </div>\n        </div>\n        <div class=\"ui grid\">\n          <div class=\"four wide column\">\n            <div class=\"ui vertical fluid tabular menu\">\n                            <NavLink to={routeHelper(\"TaskApp\")} class=\"item\">\n                                Add Task\n                            </NavLink>\n                            <NavLink to={routeHelper(\"TaskListApp\")} class=\"item\">\n                                Task List\n                            </NavLink>\n                            <NavLink to={routeHelper(\"GanttChart\")} class=\"item active\">\n                                Gantt Chart\n                            </NavLink>\n                            <NavLink to={routeHelper(\"GanttFormApp\")} class=\"item\">\n                                Gantt Form\n                            </NavLink>\n                            <NavLink to={routeHelper(\"ProjectFormApp\")} class=\"item\">\n                                Project Form\n                            </NavLink>\n                            <NavLink to={routeHelper(\"ProjectListApp\")} class=\"item\">\n                                Project List\n                            </NavLink>\n            </div>\n          </div>\n          <div class=\"twelve wide stretched column\">\n            <div class=\"ui segment\">\n              <GanttApp />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GanttChart;  ","import React from \"react\";\nimport \"./ForumApp.css\";\n\nfunction ForumNote(props) {\n    function handleClick() {\n        props.onDelete(props.id);\n    }\n\n    return (\n            <div className=\"note\">\n                <h1>{props.title}</h1>\n                <p>{props.content}</p>\n                <button onClick={handleClick}>DELETE</button>\n            </div>\n    );\n}\n\nexport default ForumNote;\n","import React, { useState } from \"react\";\nimport \"../ForumApp/ForumApp.css\"\n\nfunction CreateArea(props) {\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n\n    setNote(prevNote => {\n      return {\n        ...prevNote,\n        [name]: value\n      };\n    });\n  }\n\n  function submitNote(event) {\n    props.onAdd(note);\n    setNote({\n      title: \"\",\n      content: \"\"\n    });\n    event.preventDefault();\n  }\n\n  return (\n    <div className=\"create-area\">\n      <form>\n        <input\n          name=\"title\"\n          onChange={handleChange}\n          value={note.title}\n          placeholder=\"Title\"\n        />\n        <textarea\n          name=\"content\"\n          onChange={handleChange}\n          value={note.content}\n          placeholder=\"Take a note...\"\n          rows=\"3\"\n        />\n        <button className=\"btn\" onClick={submitNote}>Add</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import React, { useState } from \"react\";\nimport ForumNote from \"./ForumNote\";\nimport CreateArea from \"./CreateArea\";\nimport \"./ForumApp.css\";\n\nfunction ForumApp() {\n  const [notes, setNotes] = useState([]);\n\n  function addNote(newNote) {\n    setNotes(prevNotes => {\n      return [...prevNotes, newNote];\n    });\n  }\n\n  function deleteNote(id) {\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className=\"forum-app\">\n\n      <CreateArea onAdd={addNote} />\n       \n      {notes.map((noteItem, index) => {\n        return (\n            \n          <ForumNote\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n            onDelete={deleteNote}\n          />\n        \n        );\n      })}\n\n    </div>\n  );\n}\n\nexport default ForumApp;\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport ForumApp from './ForumApp';\nimport {routeHelper} from \"../../utils/routeHelper\"\n\nclass Forum extends Component {\n\n  render() {\n\n    return (\n      <div>\n        <div class=\"ui secondary  menu\">\n          <Link to={routeHelper(\"Welcome\")}class=\"item\">\n            Home\n                </Link>\n          <Link to={routeHelper(\"TaskApp\")} class=\"item\">\n            Project Management\n                </Link>\n          <Link to={routeHelper(\"DefectApp\")} class=\"item\">\n            Defect Management\n                </Link>\n                <Link to={routeHelper(\"Forum\")} class=\"item active\">\n            Forum\n                </Link>\n                <Link to={routeHelper(\"VacationApp\")} class=\"item\">\n                        HR\n                </Link>\n          <div class=\"right menu\">\n            <div class=\"item\">\n              <div class=\"ui icon input\">\n                <input type=\"text\" placeholder=\"Search...\" />\n                <i class=\"search link icon\"></i>\n              </div>\n            </div>\n            <a class=\"ui item\">\n              Logout\n                    </a>\n          </div>\n        </div>\n        <div class=\"twelve wide stretched column\">\n          <div class=\"ui segments\">\n            <ForumApp />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Forum;","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport DatePickerApp from \"../Utlities/DatePickerApp\";\nimport './GanttForm.scss';\nimport { addGanttTask } from \"../../redux/GanttForm/action.js\";\nimport uniqid from \"uniqid\";\n\nconst GanttForm = () => {\n\n    const [newTask, setNewTask] = useState({\n        taskName: \"\",\n        startDate_: new Date(),\n        endDate_: new Date(),\n        id: \"\",\n    });\n\n    const [tasks, setTasks] = useState([]);\n    const { taskName, startDate_, endDate_, id} = newTask;\n    const dispatch = useDispatch();\n\n    //const tasks_ = useSelector((state) => state.taskform.task);\n    const tasks_ = useSelector((state) => state.gantt.task);\n    const date_ = useSelector(state => state.gantt.date);\n    const {start, end} = date_;\n    useEffect(() => {\n        //console.log(tasks_)\n        setTasks(tasks_);\n        //setNewTask({...newTask, startDate, endDate})\n    }, [tasks_, start, end]);\n\n    const onInputChange = (event) => {\n        const { name, value } = event.target;\n\n        if (name === \"taskName\") {\n            setNewTask({ taskName: value });\n        }\n\n    };\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n\n        if (taskName !== \"\") {\n            const id = uniqid();\n            setNewTask({ ...newTask, id });\n            dispatch(addGanttTask(taskName, start,end,id));\n            document.getElementById(\"gantt-form\").submit();\n        } else {\n            alert(\"Make sure all fields have been entered\");\n        }\n    };\n\n    return (\n        <div>\n            <form id=\"gantt-form\" className=\"ui form\" /* onSubmit={onFormSubmit} */>\n                <div className=\"field\">\n                    <label>Task Name:</label>\n                    <input\n                        name=\"taskName\"\n                        type=\"text\"\n                        value={taskName}\n                        onChange={onInputChange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label>Start Date:</label>\n                    <DatePickerApp type={{mode: \"gantt\", id, key: 1}}/>\n                </div>\n                <div className=\"field\">\n                    <label>End Date:</label>\n                    <DatePickerApp type={{mode: \"gantt\", key: 2, id}}/>\n                </div>\n                {/*}\n                <div class=\"field\">\n                    <label>Color</label>\n                    <Dropdown text='black'>\n                        <Dropdown.Menu>\n                            <Dropdown.Item text='orange' />\n                            <Dropdown.Item text='green' />\n                            <Dropdown.Item text='red'/>\n                            <Dropdown.Item text='blue' />\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </div>\n                */}\n                <div className=\"gantt-form-btn\">\n                    <button class=\"ui button\" type=\"submit\" onClick={onFormSubmit} >\n                        Add to Gantt\n                        </button>\n                </div>\n            </form>\n        </div>\n    )\n};\n\nexport default GanttForm;","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport GanttForm from './GanttForm';\nimport {routeHelper} from '../../utils/routeHelper';\n\nclass GanttFormApp extends React.Component {\n\n    state = { tasks: [], selectedTask: null };\n\n    render() {\n        return (\n            <div>\n                <div class=\"ui secondary  menu\">\n                <Link to={routeHelper(\"Welcome\")} class=\"item\">\n                        Home\n                </Link>\n                    <Link to={routeHelper(\"TaskApp\")} class=\"active item\">\n                        Project Management\n                    </Link>\n                    <Link to={routeHelper(\"DefectApp\")} class=\"item\">\n                        Defect Management\n                    </Link>\n                    <Link to={routeHelper(\"Forum\")} class=\"item\">\n                        Forum\n                </Link>\n                <Link to={routeHelper(\"VacationApp\")} class=\"item\">\n                        HR\n                </Link>\n                    <div class=\"right menu\">\n                        <div class=\"item\">\n                            <div class=\"ui icon input\">\n                                <input type=\"text\" placeholder=\"Search...\" />\n                                <i class=\"search link icon\"></i>\n                            </div>\n                        </div>\n                        <a class=\"ui item\">\n                            Logout\n                        </a>\n                    </div>\n                </div>\n                <div class=\"ui grid\">\n                    <div class=\"four wide column\">\n                        <div class=\"ui vertical fluid tabular menu\">\n                            <NavLink to={routeHelper(\"TaskApp\")} class=\"item\">\n                                Add Task\n                            </NavLink>\n                            <NavLink to={routeHelper(\"TaskListApp\")} class=\"item\">\n                                Task List\n                            </NavLink>\n                            <NavLink to={routeHelper(\"GanttChart\")} class=\"item\">\n                                Gantt Chart\n                            </NavLink>\n                            <NavLink to={routeHelper(\"GanttFormApp\")} class=\"item active\">\n                                Gantt Form\n                            </NavLink>\n                            <NavLink to={routeHelper(\"ProjectFormApp\")} class=\"item\">\n                                Project Form\n                            </NavLink>\n                            <NavLink to={routeHelper(\"ProjectListApp\")} class=\"item\">\n                                Project List\n                            </NavLink>\n                        </div>\n                    </div>\n                    <div class=\"twelve wide stretched column\">\n                        <div class=\"ui segment\">\n                            <GanttForm />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default GanttFormApp;","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport DatePickerApp from \"../Utlities/DatePickerApp\";\nimport './VacationForm.scss';\nimport { addVacationRequest } from \"../../redux/VacationForm/action.js\";\nimport uniqid from \"uniqid\";\n\nconst VacationForm = () => {\n\n    const [newVacation, setNewVacation] = useState({\n        employeeName: \"\",\n        startDate_: new Date(),\n        endDate_: new Date(),\n        id: \"\",\n    });\n\n    const [vacations, setVacations] = useState([]);\n    const { employeeName, startDate_, endDate_, id} = newVacation;\n    const dispatch = useDispatch();\n\n    //const tasks_ = useSelector((state) => state.taskform.task);\n    const vacations_ = useSelector((state) => state.vacation.employee);\n    const date_ = useSelector(state => state.vacation.date);\n    const {start, end} = date_;\n    useEffect(() => {\n        setVacations(vacations_);\n        //setNewTask({...newTask, startDate, endDate})\n    }, [vacations_, start, end]);\n\n    const onInputChange = (event) => {\n        const { name, value } = event.target;\n\n        if (name === \"employeeName\") {\n            setNewVacation({ employeeName: value });\n        }\n\n    };\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n\n        if (employeeName !== \"\") {\n            const id = uniqid();\n            setNewVacation({ ...newVacation, id });\n            dispatch(addVacationRequest(employeeName, start,end,id));\n            document.getElementById(\"vacation-form\").submit();\n        } else {\n            alert(\"Make sure all fields have been entered\");\n        }\n    };\n\n    return (\n        <div>\n            <form id=\"vacation-form\" className=\"ui form\" /* onSubmit={onFormSubmit} */>\n                <div className=\"field\">\n                    <label>Employee Name:</label>\n                    <input\n                        name=\"employeeName\"\n                        type=\"text\"\n                        value={employeeName}\n                        onChange={onInputChange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label>Start Date:</label>\n                    <DatePickerApp type={{mode: \"vacation\", id, key: 1}}/>\n                </div>\n                <div className=\"field\">\n                    <label>End Date:</label>\n                    <DatePickerApp type={{mode: \"vacation\", key: 2, id}}/>\n                </div>\n                <div className=\"vacation-form-btn\">\n                    <button class=\"ui button\" type=\"submit\" onClick={onFormSubmit} >\n                        Add to Vacation Calendar\n                        </button>\n                </div>\n            </form>\n        </div>\n    )\n};\n\nexport default VacationForm;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { routeHelper } from '../../utils/routeHelper';\nimport VacationForm from \"./VacationForm\";\n\nclass VacationApp extends React.Component {\n\n    state = { tasks: [], selectedTask: null };\n\n    onTaskSubmit = (tasks) => {\n        this.setState({\n            tasks: tasks\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div class=\"ui secondary  menu\">\n                    <Link to={routeHelper(\"Welcome\")} class=\"item\">\n                        Home\n                </Link>\n                    <Link to={routeHelper(\"TaskApp\")} class=\"item\">\n                        Project Management\n                    </Link>\n                    <Link to={routeHelper(\"DefectApp\")} class=\"item\">\n                        Defect Management\n                    </Link>\n                    <Link to={routeHelper(\"Forum\")} class=\"item\">\n                        Forum\n                </Link>\n                <Link to={routeHelper(\"VacationApp\")} class=\"item active\">\n                        HR\n                </Link>\n                    <div class=\"right menu\">\n                        <div class=\"item\">\n                            <div class=\"ui icon input\">\n                                <input type=\"text\" placeholder=\"Search...\" />\n                                <i class=\"search link icon\"></i>\n                            </div>\n                        </div>\n                        <a class=\"ui item\">\n                            Logout\n                        </a>\n                    </div>\n                </div>\n                <div class=\"ui grid\">\n                    <div class=\"four wide column\">\n                        <div class=\"ui vertical fluid tabular menu\">\n                            <Link to={routeHelper(\"VacationApp\")} class=\"item active\">\n                                Add Vacation\n                            </Link>\n                            <Link to={routeHelper(\"VacationChartApp\")} class=\"item\">\n                                Vacation Chart\n                                </Link>\n                                <Link to={routeHelper(\"TimesheetFormApp\")} class=\"item\">\n                                Timesheet\n                                </Link>\n                        </div>\n                    </div>\n                    <div class=\"twelve wide stretched column\">\n                        <div class=\"ui segment\">\n                            <VacationForm onFormSubmit={this.onVacationSubmit} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default VacationApp;","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport TimeLine from \"react-gantt-timeline\";\nimport \"./VacationChart.css\";\n\nconst VacationChart = () => {\n\n    const vacations_ = useSelector((state) => state.vacation.vacation);\n    const date = useSelector(state => state.vacation.date);\n    const vacations_noid = Object.values(vacations_);\n    const temp = vacations_noid.map((vacation, id) => ({ ...vacation, id: id }));\n    const data = temp.slice(1);\n\n    const config = {\n        taskList: {\n            title: {\n                label: \"Employee\",\n                style: {\n                    background: \"linear-gradient( grey, black)\"\n                }\n            },\n        },\n    }\n\nconst genID = () => {\n    function S4() {\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    }\n    return (\n        S4() +\n        S4() +\n        \"-\" +\n        S4() +\n        \"-4\" +\n        S4().substr(0, 3) +\n        \"-\" +\n        S4() +\n        \"-\" +\n        S4() +\n        S4() +\n        S4()\n    ).toLowerCase();\n}\nfunction createLink(start, end) {\n    return {\n        id: genID(),\n        start: start.task.id,\n        startPosition: start.position,\n        end: end.task.id,\n        endPosition: end.position\n    };\n}\n/*     const onUpdateTask  = (item) => {\n        item.start = props.start;\n        item.end = props.end;\n        this.setState({ data: [...this.state.data] });\n    };\n   const onCreateLink = item => {\n        let newLink = this.createLink(item.start, item.end);\n        this.setState({ links: [...this.state.links, newLink] });\n    }; */\n\n\nreturn (\n    <div className=\"app-container\">\n        <h1>Vacation Chart</h1>\n        {/* DayWidth<input type=\"range\" min=\"30\" max=\"500\" value={this.state.daysWidth} onChange={this.handleDayWidth} step=\"1\"/>\n       Item Height<input type=\"range\" min=\"30\" max=\"500\" value={this.state.itemheight} onChange={this.handleItemHeight} step=\"1\"/> */}\n        <div className=\"time-line-container\">\n            <TimeLine\n                data={data}\n                config={config}\n            //links={this.state.links}\n            //onUpdateTask={this.onUpdateTask}\n            //onCreateLink={this.onCreateLink}\n            />\n        </div>\n    </div>\n);\n\n}\n\nexport default VacationChart;","import React, { Component } from 'react';\nimport { Link, NavLink } from \"react-router-dom\";\nimport VacationChart from './VacationChart';\nimport {routeHelper} from \"../../utils/routeHelper\";\n\nclass VacationChartApp extends Component {\n\n    render() {\n        return (\n            <div>\n                <div class=\"ui secondary  menu\">\n                <Link to={routeHelper(\"Welcome\")} class=\"item\">\n                        Home\n                </Link>\n                    <Link to={routeHelper(\"TaskApp\")} class=\"item\">\n                        Project Management\n                    </Link>\n                    <Link to={routeHelper(\"DefectApp\")} class=\"item\">\n                        Defect Management\n                    </Link>\n                    <Link to={routeHelper(\"Forum\")} class=\"item\">\n                        Forum\n                </Link>\n                <Link to={routeHelper(\"VacationApp\")} class=\"item active\">\n                        HR\n                </Link>\n                    <div class=\"right menu\">\n                        <div class=\"item\">\n                            <div class=\"ui icon input\">\n                                <input type=\"text\" placeholder=\"Search...\" />\n                                <i class=\"search link icon\"></i>\n                            </div>\n                        </div>\n                        <a class=\"ui item\">\n                            Logout\n                        </a>\n                    </div>\n                </div>\n                <div class=\"ui grid\">\n                    <div class=\"four wide column\">\n                        <div class=\"ui vertical fluid tabular menu\">\n                            <Link to={routeHelper(\"VacationApp\")} class=\"item\">\n                                Add Vacation\n                            </Link>\n                            <Link to={routeHelper(\"VacationChartApp\")} class=\"item active\">\n                                Vacation Chart\n                                </Link>\n                                <Link to={routeHelper(\"TimesheetFormApp\")} class=\"item\">\n                                Timesheet\n                                </Link>\n                    </div>\n                </div>\n                <div class=\"twelve wide stretched column\">\n                    <div class=\"ui segment\">\n                        <VacationChart />\n                    </div>\n                </div>\n            </div>\n      </div >\n    );\n    }\n}\n\nexport default VacationChartApp;  ","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Segment } from 'semantic-ui-react'\n\nconst TimesheetForm = () => {\n\n    const [newDefect, setNewDefect] = useState({\n        title: \"\",\n        summary: \"\",\n        status: \"\",\n        assignee: \"\",\n        expectedResults: \"\",\n        actualResults: \"\",\n        steps: \"\",\n        comments: \"\",\n        eta: \"\",\n        severity: \"\",\n        priority: \"\",\n        dateCreated: \"\",\n        dateResolved: \"\",\n    });\n\n    const { title, summary, assignee, severity, priority } = newDefect;\n\n    const onInputChange = (event) => {\n        const { name, value } = event.target;\n\n        if (name === \"title\") {\n            setNewDefect({ ...newDefect, title: value });\n        }\n\n        if (name === \"severity\") {\n            setNewDefect({ ...newDefect, severity: value });\n        }\n\n    };\n\n    return (\n        <div>\n            <form id=\"timesheet-form\" className=\"ui form\" /* onSubmit={onFormSubmit} */>\n                <div className=\"field\">\n                    <label>Day: Monday</label>\n                </div>\n                <div className=\"field\">\n                    <label>Project:</label>\n                    <select value={severity} name=\"severity\" onChange={onInputChange}>\n                        <option value=\"IR\">IR</option>\n                        <option value=\"SFDC\">SFDC</option>\n                    </select>\n                </div>\n                <Segment.Group horizontal>\n                    <Segment>\n                        <div className=\"field\">\n                            <label>Task:</label>\n                            <input\n                                name=\"summary\"\n                                value={summary}\n                            //onChange={onInputChange}\n                            />\n                        </div>\n                    </Segment>\n                    <Segment>\n                        <div className=\"field\">\n                            <label>Percentage Worked (%):</label>\n                            <input\n                                name=\"assignee\"\n                                type=\"text\"\n                                value={assignee}\n                            //onChange={onInputChange}\n                            />\n                        </div>\n                    </Segment>\n                </Segment.Group>\n                <div className=\"field\">\n                    <label>OT:</label>\n                </div>\n                <div className=\"field\">\n                    <label>Project:</label>\n                    <select value={severity} name=\"severity\" onChange={onInputChange}>\n                        <option value=\"IR\">IR</option>\n                        <option value=\"SFDC\">SFDC</option>\n                    </select>\n                </div>\n                <Segment.Group horizontal>\n                    <Segment>\n                        <div className=\"field\">\n                            <label>Task:</label>\n                            <input\n                                name=\"summary\"\n                                value={summary}\n                            //onChange={onInputChange}\n                            />\n                        </div>\n                    </Segment>\n                    <Segment>\n                        <div className=\"field\">\n                            <label>Hours Worked:</label>\n                            <input\n                                name=\"assignee\"\n                                type=\"text\"\n                                value={assignee}\n                            //onChange={onInputChange}\n                            />\n                        </div>\n                    </Segment>\n                </Segment.Group>\n                <div className=\"defect-form-btn\">\n                    <button class=\"ui button\" type=\"submit\"> {/*onClick={onFormSubmit}*/}\n                        Submit\n                        </button>\n                </div>\n            </form>\n        </div >\n    )\n};\n\nexport default TimesheetForm;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport TimesheetForm from \"./TimesheetForm\";\nimport {routeHelper} from \"../../utils/routeHelper\"\n\nclass TimesheetFormApp extends React.Component {\n\n    state = { tasks: [], selectedTask: null };\n\n    onTaskSubmit = (tasks) => {\n        this.setState({\n            tasks: tasks\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div class=\"ui secondary  menu\">\n          <Link to={routeHelper(\"Welcome\")}class=\"item\">\n            Home\n                </Link>\n          <Link to={routeHelper(\"TaskApp\")} class=\"item\">\n            Project Management\n                </Link>\n          <Link to={routeHelper(\"DefectApp\")} class=\"item\">\n            Defect Management\n                </Link>\n                <Link to={routeHelper(\"Forum\")} class=\"item\">\n            Forum\n                </Link>\n                <Link to={routeHelper(\"VacationApp\")} class=\"item active\">\n                        HR\n                </Link>\n                    <div class=\"right menu\">\n                        <div class=\"item\">\n                            <div class=\"ui icon input\">\n                                <input type=\"text\" placeholder=\"Search...\" />\n                                <i class=\"search link icon\"></i>\n                            </div>\n                        </div>\n                        <a class=\"ui item\">\n                            Logout\n                        </a>\n                    </div>\n                </div>\n                <div class=\"ui grid\">\n                    <div class=\"four wide column\">\n                        <div class=\"ui vertical fluid tabular menu\">\n                        <Link to={routeHelper(\"VacationApp\")} class=\"item\">\n                                Add Vacation\n                            </Link>\n                            <Link to={routeHelper(\"VacationChartApp\")} class=\"item\">\n                                Vacation Chart\n                                </Link>\n                                <Link to={routeHelper(\"TimesheetFormApp\")} class=\"item active\">\n                                Timesheet\n                                </Link>\n                        </div>\n                    </div>\n                    <div class=\"twelve wide stretched column\">\n                        <div class=\"ui segment\">\n                            <TimesheetForm onFormSubmit={this.onTimesheetSubmit} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TimesheetFormApp;","import React, { useEffect, useState } from \"react\";\nimport DatePickerApp from \"../Utlities/DatePickerApp\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport uniqid from \"uniqid\";\nimport { Segment } from \"semantic-ui-react\";\nimport { addProject } from \"../../redux/ProjectApp/action.js\";\n\nconst ProjectForm = () => {\n    const [newProject, setNewProject] = useState({\n        projectName: \"\",\n        projectAssignee: \"\",\n        projectMilestones: \"\",\n        startDate_: new Date(),\n        endDate_: new Date(),\n        progressV: 0,\n        id: \"\",\n    });\n\n    const [projects, setProjects] = useState([]);\n    const { projectName, projectAssignee, projectMilestones, startDate_, endDate_, id} = newProject;\n    const dispatch = useDispatch();\n\n    const projects_ = useSelector((state) => state.project.project);\n    const date_ = useSelector(state => state.project.date);\n    const {start, end} = date_;\n\n    useEffect(() => {\n        setProjects(projects_);\n    }, [projects_, start, end]);\n\n    const onInputChange = (event) => {\n        const { name, value } = event.target;\n        setNewProject({ ...newProject, [name]: value });\n    };\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n\n        if (projectName !== \"\" && projectAssignee !== \"\" && projectMilestones !== \"\") {\n            const id = uniqid();\n            setNewProject({ ...newProject, id });\n            dispatch(addProject(projectName, projectAssignee, projectMilestones, start,end,id));\n            document.getElementById(\"project-form\").submit();\n        } else {\n            alert(\"Make sure all fields have been entered\");\n        }\n    };\n\n    return (\n        <div>\n            <form id=\"project-form\" className=\"ui form\" /* onSubmit={onFormSubmit} */>\n                <div className=\"field\">\n                    <label>Project Name:</label>\n                    <input\n                        name=\"projectName\"\n                        type=\"text\"\n                        value={projectName}\n                        onChange={onInputChange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label>Assigned To:</label>\n                    <textarea\n                        name=\"projectAssignee\"\n                        type=\"text\"\n                        rows=\"2\"\n                        value={projectAssignee}\n                        onChange={onInputChange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label>Project Milestones:</label>\n                    <textarea\n                        name=\"projectMilestones\"\n                        type=\"text\"\n                        rows=\"4\"\n                        value={projectMilestones}\n                        onChange={onInputChange}\n                    />\n                </div>\n                <Segment.Group horizontal>\n                    <Segment>\n                        <div className=\"field\">\n                            <label>Start Date:</label>\n                            <DatePickerApp type={{ mode: \"project\", key:1}} />\n                        </div>\n                    </Segment>\n                    <Segment>\n                        <div className=\"field\">\n                            <label>End Date:</label>\n                            <DatePickerApp type={{ mode: \"project\", key: 2 }} />\n                        </div>\n                    </Segment>\n                </Segment.Group>\n                <div className=\"project-form-btn\">\n                    <button onClick={onFormSubmit} class=\"ui button\" type=\"submit\">\n                        Add Project\n                    </button>\n                </div>\n            </form>\n        </div >\n    );\n};\nexport default ProjectForm;\n","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport ProjectForm from \"./ProjectForm.js\";\nimport {routeHelper} from \"../../utils/routeHelper\";\n\nclass ProjectFormApp extends React.Component {\n\n    state = { tasks: [], selectedTask: null };\n\n    render() {\n        return (\n            <div>\n                <div class=\"ui secondary  menu\">\n                <Link to={routeHelper(\"Welcome\")} class=\"item\">\n                        Home\n                </Link>\n                    <Link to={routeHelper(\"TaskApp\")} class=\"active item\">\n                        Project Management\n                    </Link>\n                    <Link to={routeHelper(\"DefectApp\")} class=\"item\">\n                        Defect Management\n                    </Link>\n                    <Link to={routeHelper(\"Forum\")} class=\"item\">\n                        Forum\n                </Link>\n                <Link to={routeHelper(\"VacationApp\")} class=\"item\">\n                        HR\n                </Link>\n                    <div class=\"right menu\">\n                        <div class=\"item\">\n                            <div class=\"ui icon input\">\n                                <input type=\"text\" placeholder=\"Search...\" />\n                                <i class=\"search link icon\"></i>\n                            </div>\n                        </div>\n                        <a class=\"ui item\">\n                            Logout\n                        </a>\n                    </div>\n                </div>\n                <div class=\"ui grid\">\n                    <div class=\"four wide column\">\n                        <div class=\"ui vertical fluid tabular menu\">\n                            <NavLink to={routeHelper(\"TaskApp\")} class=\"item\">\n                                Add Task\n                            </NavLink>\n                            <NavLink to={routeHelper(\"TaskListApp\")} class=\"item\">\n                                Task List\n                            </NavLink>\n                            <NavLink to={routeHelper(\"GanttChart\")} class=\"item\">\n                                Gantt Chart\n                            </NavLink>\n                            <NavLink to={routeHelper(\"GanttFormApp\")} class=\"item\">\n                                Gantt Form\n                            </NavLink>\n                            <NavLink to={routeHelper(\"ProjectFormApp\")} class=\"item active\">\n                                Project Form\n                            </NavLink>\n                            <NavLink to={routeHelper(\"ProjectListApp\")} class=\"item\">\n                                Project List\n                            </NavLink>\n                        </div>\n                    </div>\n                    <div class=\"twelve wide stretched column\">\n                        <div class=\"ui segment\">\n                            <ProjectForm />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ProjectFormApp;","import React, { useState, useEffect } from 'react';\nimport DefectDetail from \"./DefectDetail\";\nimport DefectItem from \"./DefectItem\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { Bar } from 'react-chartjs-2';\nimport {deleteDefect} from \"../../redux/Defect\";\nimport \"./DefectList.scss\";\n\nconst DefectList = () => {\n\n    const exportPDF = () => {\n        const unit = \"pt\";\n        const size = \"A4\"; // Use A1, A2, A3 or A4\n        const orientation = \"portrait\"; // portrait or landscape\n        const marginLeft = 40;\n        const doc = new jsPDF(orientation, unit, size);\n\n        doc.setFontSize(15);\n\n        const title = \"Defects Report\";\n        const headers = [[\"Title\", \"Summary\", \"Expected Results\", \"Actual Results\", \"Steps\", \"Status\", \"Assignee\", \"Priority\", \"Severity\"]];\n        const data = defect_data.map((elt) => [\n            elt.title,\n            elt.summary,\n            elt.expect,\n            elt.actual,\n            elt.steps,\n            elt.status,\n            elt.assignee,\n            elt.priority,\n            elt.severity\n        ]);\n\n        let content = {\n            startY: 50,\n            head: headers,\n            body: data,\n        };\n\n        doc.text(title, marginLeft, 40);\n        doc.autoTable(content);\n        doc.save(\"defect_report.pdf\");\n    };\n\n\n    const defects_ = useSelector((state) => state.defect.defects);\n    const defect_data = Object.values(defects_).slice(1);\n    const [selectedDefect, setSelectedDefect] = useState(null);\n    const [activeIndex, setActiveIndex] = useState(null);\n    const [localDefect, setLocalDefect] = useState({...defects_});\n\n    const countBlockers = defect_data.filter(defect => defect.severity === \"Blocker\");\n    const blockerCounted = countBlockers.length;\n    const countMajors = defect_data.filter(defect => defect.severity === \"Major\");\n    const majorCounted = countMajors.length;\n    const countMediums = defect_data.filter(defect => defect.severity === \"Medium\");\n    const mediumCounted = countMediums.length;\n    const countLows = defect_data.filter(defect => defect.severity === \"Low\");\n    const lowCounted = countLows.length;\n\n    const dispatch = useDispatch();\n\n    const state = {\n        labels: [\"Defects\"],\n        datasets: [\n            {\n                label: \"Blockers\",\n                backgroundColor: 'rgba(75,192,192,1)',\n                borderColor: 'rgba(0,0,0,1)',\n                borderWidth: 2,\n                data: [blockerCounted],\n            },\n            {\n                label: \"Majors\",\n                backgroundColor: 'rgba(51,79,234,1)',\n                borderColor: 'rgba(0,0,0,1)',\n                borderWidth: 2,\n                data: [majorCounted],\n            },\n            {\n                label: \"Mediums\",\n                backgroundColor: 'rgba(247,191,24,1)',\n                borderColor: 'rgba(0,0,0,1)',\n                borderWidth: 2,\n                data: [mediumCounted],\n            },\n            {\n                label: \"Lows\",\n                backgroundColor: 'rgba(214,60,241,1)',\n                borderColor: 'rgba(0,0,0,1)',\n                borderWidth: 2,\n                data: [lowCounted],\n            }\n        ],\n    };\n\n    const onTitleClick = (index) => {\n        const newIndex = activeIndex === index ? -1 : index\n        setActiveIndex(newIndex);\n    }\n\n    const onDefectSelect = (key) => {\n        setSelectedDefect(key);\n    };\n\n    const handleDeleteDefect = (e) => {\n        dispatch(deleteDefect(e.target.id));\n        setLocalDefect({}) // to re-render\n    }\n\n    if (defects_ != null && Object.keys(defects_).length > 1) {\n        const renderedItems = defect_data.map((defect, index) => {\n            if (defect.title != \"\") {\n                const active = index === activeIndex ? 'active' : '';\n\n                return (\n                    <div key={defect.title}>\n                        <div className={`title ${active}`} onClick={() => onTitleClick(index)}>\n                            <div id={defect.id} className=\"trash-icon\" onClick={(e) => {e.stopPropagation(); return handleDeleteDefect(e)}}>\n                               <i id={defect.id} class=\"trash icon\" onClick={handleDeleteDefect}></i>\n                            </div>\n\n                            <div className=\"task-name\">\n\n                            <i className=\"dropdown icon\"></i>\n\n                            {defect.title}\n                            </div>\n\n\n                        </div>\n                        <div className={`content ${active}`}>\n                            <p>\n                                <label>Summary: </label>{defect.summary}\n                            </p>\n                            <p>\n                                <label>Status: </label>{defect.status}\n                            </p>\n                            <p>\n                                <label>Assignee: </label>{defect.assignee}\n                            </p>\n                            <p>\n                                <label>Expected Results: </label> {defect.expect}\n                            </p>\n                            <p>\n                                <label>Actual Results: </label> {defect.actuals}\n                            </p>\n                            <p>\n                                <label>Steps: </label> {defect.steps}\n                            </p>\n                            <p>\n                                <label>Severity: </label>{defect.severity}\n                            </p>\n                            <p>\n                                <label>Priority: </label>{defect.priority}\n                            </p>\n                        </div>\n                    </div >\n                );\n            }\n        });\n\n\n        return (\n            <div>\n                <h3>List of Defects</h3>\n                <div className=\"ui styled accordion\">\n                    {renderedItems}\n\n                    {/*\n                <br />\n                <DefectDetail idx={selectedDefect}/>\n                <br />\n                */}\n                </div>\n                <br />\n                <div>\n                    <button class=\"ui button\" onClick={exportPDF}>\n                        Generate Report\n                </button>\n                </div>\n                <br />\n                <div>\n                    <Bar\n                        data={state}\n                        options={\n                            {\n                                title: {\n                                    display: true,\n                                    text: '# of Defects by Severity',\n                                    fontSize: 20,\n                                },\n                                scales: {\n                                    yAxes: [{\n                                        ticks: {\n                                            beginAtZero: true,\n                                        }\n                                    }]\n                                }\n                            }}\n                    />\n                </div>\n            </div>\n        )\n    }\n    return <div>No Defect Created....</div>\n};\n\nexport default DefectList;","import React from 'react';\nimport {NavLink, Link} from \"react-router-dom\";\nimport DefectList from \"./DefectList\"\nimport {routeHelper} from \"../../utils/routeHelper\"\n\nconst DefectListApp = () => {\n    return  (\n        <div className=\"DefectListApp\">\n\n                <div class=\"ui secondary  menu\">\n          <Link to={routeHelper(\"Welcome\")}class=\"item\">\n            Home\n                </Link>\n          <Link to={routeHelper(\"TaskApp\")} class=\"item\">\n            Project Management\n                </Link>\n          <Link to={routeHelper(\"DefectApp\")} class=\"item active\">\n            Defect Management\n                </Link>\n                <Link to={routeHelper(\"Forum\")} class=\"item\">\n            Forum\n                </Link>\n                <Link to={routeHelper(\"VacationApp\")} class=\"item\">\n                        HR\n                </Link>\n                    <div class=\"right menu\">\n                        <div class=\"item\">\n                            <div class=\"ui icon input\">\n                                <input type=\"text\" placeholder=\"Search...\" />\n                                <i class=\"search link icon\"></i>\n                            </div>\n                        </div>\n                        <a class=\"ui item\">\n                            Logout\n                        </a>\n                    </div>\n                </div>\n                <div class=\"ui grid\">\n                    <div class=\"four wide column\">\n                        <div class=\"ui vertical fluid tabular menu\">\n                            <Link to={routeHelper(\"DefectApp\")} class=\"item\">\n                                Add Defect\n                            </Link>\n                            <Link to={routeHelper(\"DefectListApp\")} class=\"item active\">\n                                Defect List\n                            </Link>\n                        </div>\n                    </div>\n                    <div class=\"twelve wide stretched column\">\n                        <div class=\"ui segment\">\n                            <DefectList />\n                        </div>\n                    </div>\n                </div>\n    \n    </div>\n    );\n};\n\nexport default DefectListApp;","import React from 'react';\n\nconst ProjectItem = ({ idx, project, onProjectSelect }) => {\n    return (\n        <div onClick={() => onProjectSelect(idx)} className=\"item\">\n            <div class=\"ui card\">\n                <div class=\"content\">\n                    <div class=\"header\">{project.projectName}</div>\n                </div>\n                <div class=\"content\">\n                    <h4 class=\"ui sub header\">Summary</h4>\n                    <div class=\"ui small feed\">\n                        <div class=\"event\">\n                            <div class=\"content\">\n                                <div class=\"summary\">\n                                    <p>\n                                        <label>Assignee(s): </label>{project.projectAssignee}\n                                    </p>\n                                    <p>\n                                        <label>Project Milestones: </label>{project.projectMilestones}\n                                    </p>\n                                    <p>\n                                        <label>Project Start Date: </label>{project.start.split(\"T\")[0]}\n                                    </p>\n                                    <p>\n                                        <label>Project End Date: </label>{project.end.split(\"T\")[0]}\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectItem;","export const ADD_SCENARIO = \"ADD_SCENARIO\";\nexport const DELETE_SCENARIO = \"DELETE_SCENARIO\";\nexport const SET_RESULT = \"SET_RESULT\";\n\nexport const addScenario = (project, description, highLevelSteps, validation, language, id, key) => ({\n  type: ADD_SCENARIO,\n  payload: {\n    project,\n    description,\n    highLevelSteps,\n    validation,\n    language,\n    id,\n    key \n  },\n});\n\nexport const deleteScenario = (id) => ({\n  type: DELETE_SCENARIO,\n  payload: {id}\n});\n\nexport const setResult = (id, result, key ) => (\n  {\n    type: SET_RESULT,\n    payload: {\n      id,\n      result,\n      key\n    }\n  }\n)","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./Popup.scss\";\nimport { addScenario } from \"../redux/Scenario/action.js\";\nimport uniqid from \"uniqid\";\n\nconst Popup = ({ projectName, projectId, closePopup }) => {\n  const [newScenario, setNewScenario] = useState({\n    project: \"\",\n    description: \"\",\n    highLevelSteps: \"\",\n    validation: \"\",\n    language: \"English\",\n    // key: \"\",\n    result: \"\",\n  });\n\n  const [scenarios, setScenarios] = useState([]);\n  const {\n    project,\n    description,\n    highLevelSteps,\n    validation,\n    language,\n  } = newScenario;\n  const dispatch = useDispatch();\n\n  const [showPopup, setShowPopup] = useState(false);\n\n  const scenarios_ = useSelector((state) => state.scenario);\n\n  useEffect(() => {\n    setScenarios(scenarios_);\n  }, [scenarios_]);\n\n  const onInputChange = (event) => {\n    const { name, value } = event.target;\n    setNewScenario({ ...newScenario, [name]: value });\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"scenarios\", newScenario);\n    if (description !== \"\" && highLevelSteps !== \"\" && validation !== \"\") {\n      const key = \"key-\" + uniqid();\n      console.log(\"genereated key\", key);\n      setNewScenario({ ...newScenario, projectId });\n      dispatch(\n        addScenario(\n          projectName,\n          description,\n          highLevelSteps,\n          validation,\n          language,\n          projectId,\n          key\n        )\n      );\n      document.getElementById(\"scenarios-form\").submit();\n    } else {\n      alert(\"Make sure all fields have been entered\");\n    }\n  };\n\n  return (\n    <div className=\"popup\">\n      <div className=\"popup_inner\">\n        <h1>Create Scenario for {projectName}</h1>\n        <button className=\"close-btn\" onClick={closePopup}>\n          close me\n        </button>\n        <form\n          id=\"scenarios-form\"\n          className=\"ui form\" /* onSubmit={onFormSubmit} */\n        >\n          <div className=\"field\">\n            <label>Description:</label>\n            <textarea\n              className=\"text-area-popup\"\n              name=\"description\"\n              type=\"text\"\n              value={description}\n              onChange={onInputChange}\n            />\n          </div>\n          <div className=\"field\">\n            <label>High Level Steps:</label>\n            <textarea\n              className=\"text-area-popup\"\n              name=\"highLevelSteps\"\n              type=\"text\"\n              value={highLevelSteps}\n              onChange={onInputChange}\n            />\n          </div>\n          <div className=\"field\">\n            <label>Validation:</label>\n            <textarea\n              className=\"text-area-popup\"\n              name=\"validation\"\n              type=\"text\"\n              value={validation}\n              onChange={onInputChange}\n            />\n          </div>\n          <div className=\"field\">\n            <label>Language:</label>\n            <select name=\"language\" onChange={onInputChange}>\n              <option selected value=\"English\">\n                English\n              </option>\n              <option value=\"French\">French</option>\n            </select>\n          </div>\n          <div className=\"scenarios-form-btn\">\n            <button onClick={onFormSubmit} class=\"ui button\" type=\"submit\">\n              Create\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Popup;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setResult } from \"../redux/Scenario/action.js\";\n\nconst ScenarioItem = ({\n  projectId,\n  scenario,\n  onScenarioSelect,\n  projectKey,\n}) => {\n  const testResult = useSelector((state) => state.scenario)[projectId][\n    projectKey\n  ];\n\n  const [result, setResultS] = useState(testResult.result);\n  const dispatch = useDispatch();\n\n  function handleResultUpdate(e) {\n    setResultS(e.target.value);\n  }\n\n  function handleButtonClick() {\n    if (result === \"p\" || result === \"f\" || result === \"b\") {\n      setResultS(result);\n      dispatch(setResult(projectId, result, projectKey));\n    } else alert(\"Invalid value was entered\");\n  }\n\n  return (\n    <div onClick={() => onScenarioSelect(projectId)} className=\"item\">\n      <div className=\"content\">\n        <div class=\"header\">\n          <label style={{ cursor: \"pointer\" }}>Scenario Description: </label>\n          {scenario.description}\n        </div>\n        <div class=\"description\">\n          <div>\n            <label style={{ cursor: \"pointer\" }}>High Level Steps: </label>\n            {scenario.highLevelSteps}\n          </div>\n          <div>\n            <label style={{ cursor: \"pointer\" }}>Validation: </label>\n            {scenario.validation}\n          </div>\n          <div>\n            <label style={{ cursor: \"pointer\" }}>Language: </label>\n            {scenario.language}\n          </div>\n          <div>\n            <label>Test Result: </label>\n            <input\n              type=\"text\"\n              placeholder=\"Enter Result\"\n              value={result}\n              onChange={handleResultUpdate}\n            />\n            <button type=\"submit\" onClick={handleButtonClick}>\n              Set Result\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ScenarioItem;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addScenario, deleteScenario } from \"../redux/Scenario/action.js\";\nimport uniqid from \"uniqid\";\nimport Popup from \"./Popup\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport ScenarioItem from \"./ScenarioItem.js\";\n\nconst ScenariosForm = ({ projectName, projectId }) => {\n  const exportPDF = () => {\n    const unit = \"pt\";\n    const size = \"A4\"; // Use A1, A2, A3 or A4\n    const orientation = \"portrait\"; // portrait or landscape\n    const marginLeft = 40;\n    const doc = new jsPDF(orientation, unit, size);\n\n    doc.setFontSize(15);\n\n    const title = \"Test Scenarios Report\";\n    const headers = [\n      [\n        \"Project\",\n        \"Description\",\n        \"High Level Steps\",\n        \"Validation\",\n        \"Language\",\n        \"Test Result\",\n      ],\n    ];\n    const data = scenario_arr.map((elt) => [\n      elt.project,\n      elt.description,\n      elt.highLevelSteps,\n      elt.validation,\n      elt.language,\n      elt.result,\n    ]);\n\n    let content = {\n      startY: 50,\n      head: headers,\n      body: data,\n    };\n\n    doc.text(title, marginLeft, 40);\n    doc.autoTable(content);\n    doc.save(\"project_test_scenario_report.pdf\");\n  };\n\n  const [newScenario, setNewScenario] = useState({\n    project: \"\",\n    description: \"\",\n    highLevelSteps: \"\",\n    validation: \"\",\n    language: \"\",\n    id: \"\",\n  });\n\n  const [scenarios, setScenarios] = useState([]);\n  const {\n    project,\n    description,\n    highLevelSteps,\n    validation,\n    language,\n  } = newScenario;\n  const dispatch = useDispatch();\n  const [showPopup, setShowPopup] = useState(false);\n  const scenarios_ = useSelector((state) => state.scenario);\n\n  useEffect(() => {\n    setScenarios(scenarios_);\n  }, [scenarios_]);\n\n  const onInputChange = (event) => {\n    const { name, value } = event.target;\n    setNewScenario({ ...newScenario, [name]: value });\n  };\n\n  const togglePopup = () => {\n    console.log(showPopup);\n    setShowPopup(showPopup ? false : true);\n  };\n\n  const [selectedScenario, setSelectedScenario] = useState(null);\n\n  const onScenarioSelect = (key) => {\n    console.log(\"onScenarioSelect\", key);\n    setSelectedScenario(key);\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n\n    if (description !== \"\" && highLevelSteps !== \"\" && validation !== \"\") {\n      const key = uniqid();\n      setNewScenario({ ...newScenario, projectId });\n      dispatch(\n        addScenario(\n          project,\n          description,\n          highLevelSteps,\n          validation,\n          language,\n          projectId,\n          key\n        )\n      );\n      document.getElementById(\"scenarios-form\").submit();\n    } else {\n      alert(\"Make sure all fields have been entered\");\n    }\n  };\n\n  const [localScenario, setLocalScenario] = useState({});\n\n  const scenario_arr = Object.values(scenarios_).slice(1);\n\n  const handleDeleteScenario = (e) => {\n    dispatch(deleteScenario(e.target.id));\n    setLocalScenario({});\n  };\n\n  const scenarioToRender = scenarios_[projectId];\n\n  if (scenarioToRender !== undefined) {\n    const renderedItems = Object.entries(scenarioToRender).map((el) => {\n      const [key, obj] = el;\n      if (el !== \"id\") {\n        return (\n          <div class=\"list-items\">\n            <div id={el} className=\"trash-icon\" onClick={handleDeleteScenario}>\n              <i id={el} class=\"trash icon\" onClick={handleDeleteScenario}></i>\n            </div>\n            <ScenarioItem\n              projectId={projectId}\n              scenario={obj}\n              onScenarioSelect={() => onScenarioSelect(key)}\n              projectKey={key}\n            />\n          </div>\n        );\n      }\n    });\n\n    return (\n      <div>\n        <h3>{projectName} Test Scenarios</h3>\n        <div className=\"ui celled list\">{renderedItems}</div>\n        <button onClick={togglePopup}> Create Scenario</button>\n        {showPopup ? (\n          <Popup\n            projectName={projectName}\n            closePopup={togglePopup}\n            projectId={projectId}\n          />\n        ) : null}\n        <br />\n        <br />\n        <div>\n          <button class=\"ui button\" onClick={exportPDF}>\n            Generate Test Scenarios Report\n          </button>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <h3>No Test Scenarios Created.....</h3>\n      <button onClick={togglePopup}> Create Scenario</button>\n      {showPopup ? (\n        <Popup\n          projectName={projectName}\n          closePopup={togglePopup}\n          projectId={projectId}\n        />\n      ) : null}\n    </div>\n  );\n};\nexport default ScenariosForm;\n","const INVOKE = \"INVOKE\";\n\nexport const scenarioEnabled = (flag) => ({\n    type: INVOKE,\n    flag\n})\n\nconst initialState = {\n    scenarioEnabled: false\n}\n\nexport const scenarioEnabledReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case INVOKE:\n            return {scenarioEnabled: action.flag}\n        default:\n            return state;\n    }\n}","import React, { useState, useEffect } from \"react\";\nimport { LinearProgress } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setProgress } from \"../../redux/ProjectApp/action.js\";\nimport { Link } from \"react-router-dom\";\nimport ScenariosForm from \"../ScenariosForm.js\";\nimport { scenarioEnabled } from \"../../redux/ScenarioEnabler\";\n\nconst ProjectDetail = ({ idx }) => {\n  const todayDate = new Date();\n\n  const [progressV, setProgressV] = useState();\n  const projects = useSelector((state) => state.project.project);\n  const dispatch = useDispatch();\n\n  const project = projects[idx];\n\n  const progressV_by_idx = useSelector((state) => {\n    if (state.project.project[idx] !== undefined) {\n      return state.project.project[idx].progressV;\n    }\n    return 0;\n  });\n\n  function handleProgressUpdate(e) {\n    setProgressV(e.target.value);\n  }\n\n  function handleButtonClick() {\n    if (progressV > 0 && progressV < 101) {\n      dispatch(setProgress(idx, progressV));\n      setProgressV(\"\");\n    } else alert(\"Invalid value was entered\");\n  }\n\n  const scenariosEnabled = useSelector(\n    (state) => state.scenarioEnabler.scenarioEnabled\n  );\n\n  function handleTestScenarioClick() {\n    dispatch(scenarioEnabled(true));\n  }\n\n  function calculateDaysRemain() {\n    const diff = Date.parse(project.end) - todayDate.getTime();\n    if (diff > 0)\n      return (\n        Math.abs(Math.round(diff / 1000 / 60 / 60 / 24)).toString() +\n        \" Day(s) Remaining\"\n      );\n    return (\n      Math.abs(Math.round(diff / 1000 / 60 / 60 / 24)).toString() +\n      \" Day(s) overdue\"\n    );\n  }\n\n  if (!project) {\n    return <div>Loading...</div>;\n  }\n\n  if (scenariosEnabled) {\n    return (\n      <div>\n        <ScenariosForm projectName={project.projectName} projectId={idx} />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"ui segment\">\n        <h3>Selected Project - More Details</h3>\n        <table class=\"ui celled table\">\n          <thead>\n            <tr>\n              <th>Project Name</th>\n              <th>Project Assignee</th>\n              <th>Project Milestones</th>\n              <th>Project's Progress</th>\n              <th>Project's Timeline</th>\n              <th>Days Remaining</th>\n              <th>Test Scenarios</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td data-label=\"Project Name\">{project.projectName}</td>\n              <td data-label=\"Project Assignee\">{project.projectAssignee}</td>\n              <td data-label=\"Project Milestones\">\n                {project.projectMilestones}\n              </td>\n              <td style={{ width: \"120%\" }} data-label=\"Task Progress\">\n                <p>\n                  <input\n                    type=\"text\"\n                    style={{ width: \"80%\" }}\n                    placeholder=\"Enter Progress (%)\"\n                    value={progressV}\n                    onChange={handleProgressUpdate}\n                  />\n                  <button\n                    style={{ margin: \"0 4px\" }}\n                    type=\"submit\"\n                    onClick={handleButtonClick}\n                  >\n                    Set\n                  </button>\n                </p>\n                <LinearProgress\n                  variant=\"determinate\"\n                  value={progressV_by_idx}\n                />\n                <label>Current Progress: {progressV_by_idx}%</label>\n              </td>\n              <td style={{ width: \"120%\" }} data-label=\"Project Timeline\">\n                {project.start.substring(0, 10)} -{\" \"}\n                {project.end.substring(0, 10)}\n              </td>\n              <td data-label=\"Days to Deadline\">{calculateDaysRemain()}</td>\n              <td data-label=\"Test Scenarios\">\n                <button type=\"submit\" onClick={handleTestScenarioClick}>\n                  Test Scenarios\n                  {/*<Link to={{pathname: '/ScenariosFormApp', projectProps: { name: project.projectName } }}>Test Scenarios</Link>*/}\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectDetail;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport ProjectItem from \"./ProjectItem\";\nimport ProjectDetail from \"./ProjectDetail.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { scenarioEnabled } from \"../../redux/ScenarioEnabler\";\n\nconst ProjectList = () => {\n  const exportPDF = () => {\n    const unit = \"pt\";\n    const size = \"A4\"; // Use A1, A2, A3 or A4\n    const orientation = \"portrait\"; // portrait or landscape\n    const marginLeft = 40;\n    const doc = new jsPDF(orientation, unit, size);\n\n    doc.setFontSize(15);\n\n    const title = \"Projects Report\";\n    const headers = [\n      [\"Project\", \"Analyst(s)\", \"Project Milestones\", \"Start Date\", \"End Date\"],\n    ];\n    const data = project_data.map((elt) => [\n      elt.projectName,\n      elt.projectAssignee,\n      elt.projectMilestones,\n      elt.start,\n      elt.end,\n    ]);\n\n    let content = {\n      startY: 50,\n      head: headers,\n      body: data,\n    };\n\n    doc.text(title, marginLeft, 40);\n    doc.autoTable(content);\n    doc.save(\"project_report.pdf\");\n  };\n\n  const dispatch = useDispatch();\n  const projects_ = useSelector((state) => state.project.project);\n  // console.log(\"projects_\", projects_)\n  const project_data = Object.values(projects_).slice(1);\n\n  const scenarios_ = useSelector((state) => state.scenario);\n  const scenarios_data = Object.values(scenarios_).slice(1);\n\n  console.log(scenarios_data);\n  const projectNames = project_data.map((project) => project.projectName);\n  const projectProgresses = project_data.map((project) => project.progressV);\n  console.log(projectProgresses);\n\n  const countScenarioArr = scenarios_data.map((project) => {\n    const arr = Object.values(project);\n    const count_arr = arr.map((x) => {\n      return x.result;\n    });\n    let pCount = 0;\n    let fCount = 0;\n    let bCount = 0;\n    count_arr.map((x) => {\n      if (x == \"p\") pCount++;\n      if (x == \"f\") fCount++;\n      if (x == \"b\") bCount++;\n    });\n    return [pCount, fCount, bCount];\n  });\n\n  // const scenarioProgresses = countScenarioArr.map((x) => []);\n  // console.log(scenarioProgresses);\n\n  let scenario_state;\n\n  const projectKeys = Object.keys(projects_).slice(1);\n  const scenarioKeys = Object.keys(scenarios_).slice(1);\n\n  const pCountArr = [];\n  const fCountArr = [];\n  const bCountArr = [];\n\n  countScenarioArr.map((x) => {\n    pCountArr.push(x[0]);\n    fCountArr.push(x[1]);\n    bCountArr.push(x[2]);\n  });\n\n  console.log(pCountArr, fCountArr, bCountArr);\n\n  if (scenarios_data[0] !== undefined) {\n    scenario_state = {\n      labels: projectNames,\n      datasets: [\n        {\n          label: \"Pass\",\n          backgroundColor: \"rgba(75,192,192,1)\",\n          borderColor: \"rgba(0,0,0,1)\",\n          borderWidth: 2,\n          data: pCountArr,\n          maxBarThickness: 50,\n        },\n        {\n          label: \"Fail\",\n          backgroundColor: \"rgba(255,0,0,1)\",\n          borderColor: \"rgba(0,0,0,1)\",\n          borderWidth: 2,\n          data: fCountArr,\n          maxBarThickness: 50,\n        },\n        {\n          label: \"Blocked\",\n          backgroundColor: \"rgba(120,120,120,1)\",\n          borderColor: \"rgba(0,0,0,1)\",\n          borderWidth: 2,\n          data: bCountArr,\n          maxBarThickness: 50,\n        },\n      ],\n    };\n  }\n\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  const project_state = {\n    labels: projectNames,\n    datasets: [\n      {\n        label: \"Progress\",\n        backgroundColor: \"rgba(75,192,192,1)\",\n        borderColor: \"rgba(0,0,0,1)\",\n        borderWidth: 2,\n        data: projectProgresses,\n        maxBarThickness: 50,\n      },\n    ],\n  };\n\n  const onTitleClick = (index) => {\n    const newIndex = activeIndex === index ? -1 : index;\n    setActiveIndex(newIndex);\n  };\n\n  const [selectedProject, setSelectedProject] = useState(null);\n\n  const onProjectSelect = (key) => {\n    setSelectedProject(key);\n    dispatch(scenarioEnabled(false));\n  };\n\n  if (projects_ != null && Object.keys(projects_).length > 1) {\n    const keys = Object.keys(projects_);\n\n    const renderedItems = keys.map((key) => {\n      if (key !== \"id\") {\n        //const active = index === activeIndex ? 'active' : '';\n\n        return (\n          <ProjectItem\n            idx={key}\n            onProjectSelect={() => onProjectSelect(key)}\n            project={projects_[key]}\n          />\n        );\n      }\n    });\n    {\n      /*\n                    <div key={project.projectName}>\n                        <div className={`title ${active}`} onClick={() => onTitleClick(index)}>\n                            <i className=\"dropdown icon\"></i>\n                            {project.projectName}\n                        </div>\n                        <div className={`content ${active}`}>\n                            <p>\n                                <label>Assignee(s): </label>{project.projectAssignee}\n                            </p>\n                            <p>\n                                <label>Project Milestones: </label>{project.projectMilestones}\n                            </p>\n                            <p>\n                                <label>Project Start Date: </label>{project.start}\n                            </p>\n                            <p>\n                                <label>Project End Date: </label>{project.end}\n                            </p>\n                        </div>\n                    </div >\n                );\n            }\n        });\n    */\n    }\n\n    return (\n      <div>\n        <h3>List of Projects</h3>\n\n        {renderedItems}\n\n        <br />\n        <div>\n          <button class=\"ui button\" onClick={exportPDF}>\n            Generate Project Report\n          </button>\n        </div>\n        <br />\n        <ProjectDetail idx={selectedProject} />\n        <br />\n        <div>\n          <Bar\n            data={project_state}\n            options={{\n              title: {\n                display: true,\n                text: \"Projects Summary\",\n                fontSize: 20,\n              },\n              scales: {\n                yAxes: [\n                  {\n                    ticks: {\n                      beginAtZero: true,\n                    },\n                  },\n                ],\n              },\n            }}\n          />\n        </div>\n        <div>\n          <Bar\n            className=\"graph-scenarios\"\n            data={scenario_state}\n            options={{\n              title: {\n                display: true,\n                text: \"Test Scenarios Summary\",\n                fontSize: 20,\n              },\n              scales: {\n                yAxes: [\n                  {\n                    ticks: {\n                      beginAtZero: true,\n                      precision: 0,\n                    },\n                    stacked: true,\n                    // scaleLabel: {\n                    //   labelString: \"test\",\n                    //   display: true,\n                    // },\n                  },\n                ],\n\n                xAxes: [\n                  {\n                    stacked: true,\n                  },\n                ],\n              },\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n  return <div>No Project Created....</div>;\n};\n\nexport default ProjectList;\n","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport ProjectList from \"./ProjectList\";\nimport {routeHelper} from \"../../utils/routeHelper\";\n\nclass ProjectListApp extends React.Component {\n\n    state = { tasks: [], selectedTask: null };\n\n    render() {\n        return (\n            <div>\n                <div class=\"ui secondary  menu\">\n                <Link to={routeHelper(\"Welcome\")} class=\"item\">\n                        Home\n                </Link>\n                    <Link to={routeHelper(\"TaskApp\")} class=\"active item\">\n                        Project Management\n                    </Link>\n                    <Link to={routeHelper(\"DefectApp\")} class=\"item\">\n                        Defect Management\n                    </Link>\n                    <Link to={routeHelper(\"Forum\")} class=\"item\">\n                        Forum\n                </Link>\n                <Link to={routeHelper(\"VacationApp\")} class=\"item\">\n                        HR\n                </Link>\n                    <div class=\"right menu\">\n                        <div class=\"item\">\n                            <div class=\"ui icon input\">\n                                <input type=\"text\" placeholder=\"Search...\" />\n                                <i class=\"search link icon\"></i>\n                            </div>\n                        </div>\n                        <a class=\"ui item\">\n                            Logout\n                        </a>\n                    </div>\n                </div>\n                <div class=\"ui grid\">\n                    <div class=\"four wide column\">\n                        <div class=\"ui vertical fluid tabular menu\">\n                            <NavLink to={routeHelper(\"TaskApp\")} class=\"item\">\n                                Add Task\n                            </NavLink>\n                            <NavLink to={routeHelper(\"TaskListApp\")} class=\"item\">\n                                Task List\n                            </NavLink>\n                            <NavLink to={routeHelper(\"GanttChart\")} class=\"item\">\n                                Gantt Chart\n                            </NavLink>\n                            <NavLink to={routeHelper(\"GanttFormApp\")} class=\"item\">\n                                Gantt Form\n                            </NavLink>\n                            <NavLink to={routeHelper(\"ProjectFormApp\")} class=\"item\">\n                                Project Form\n                            </NavLink>\n                            <NavLink to={routeHelper(\"ProjectListApp\")} class=\"item active\">\n                                Project List\n                            </NavLink>\n                        </div>\n                    </div>\n                    <div class=\"twelve wide stretched column\">\n                        <div class=\"ui segment\">\n                            <ProjectList />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ProjectListApp;","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport ScenariosForm from \"./ScenariosForm.js\";\nimport {routeHelper} from \"../utils/routeHelper\";\n\nclass ScenariosFormApp extends React.Component {\n\n    state = { tasks: [], selectedTask: null };\n\n    render() {\n        return (\n            <div>\n                <div class=\"ui secondary  menu\">\n                <Link to={routeHelper(\"Welcome\")} class=\"item\">\n                        Home\n                </Link>\n                    <Link to={routeHelper(\"TaskApp\")} class=\"active item\">\n                        Project Management\n                    </Link>\n                    <Link to={routeHelper(\"DefectApp\")} class=\"item\">\n                        Defect Management\n                    </Link>\n                    <Link to={routeHelper(\"Forum\")} class=\"item\">\n                        Forum\n                </Link>\n                <Link to={routeHelper(\"VacationApp\")} class=\"item\">\n                        HR\n                </Link>\n                    <div class=\"right menu\">\n                        <div class=\"item\">\n                            <div class=\"ui icon input\">\n                                <input type=\"text\" placeholder=\"Search...\" />\n                                <i class=\"search link icon\"></i>\n                            </div>\n                        </div>\n                        <a class=\"ui item\">\n                            Logout\n                        </a>\n                    </div>\n                </div>\n                <div class=\"ui grid\">\n                    <div class=\"four wide column\">\n                        <div class=\"ui vertical fluid tabular menu\">\n                            <NavLink to={routeHelper(\"TaskApp\")} class=\"item\">\n                                Add Task\n                            </NavLink>\n                            <NavLink to={routeHelper(\"TaskListApp\")} class=\"item\">\n                                Task List\n                            </NavLink>\n                            <NavLink to={routeHelper(\"GanttChart\")} class=\"item\">\n                                Gantt Chart\n                            </NavLink>\n                            <NavLink to={routeHelper(\"GanttFormApp\")} class=\"item\">\n                                Gantt Form\n                            </NavLink>\n                            <NavLink to={routeHelper(\"ProjectFormApp\")} class=\"item\">\n                                Project Form\n                            </NavLink>\n                            <NavLink to={routeHelper(\"ProjectListApp\")} class=\"item active\">\n                                Project List\n                            </NavLink>\n                        </div>\n                    </div>\n                    <div class=\"twelve wide stretched column\">\n                        <div class=\"ui segment\">\n                            <ScenariosForm />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ScenariosFormApp;","import React from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { startLogin } from '../redux/auth';\n\nconst Login = () => {\n    const dispatch = useDispatch();\n    return (\n    <div>\n        <button onClick={()=>dispatch(startLogin())}>Login</button>\n    </div>\n    )\n};\n\n// const mapDispatchToProps = (dispatch) => ({\n//     startLogin: () => dispatch(startLogin())\n// });\n\nexport default Login;","import { firebase, googleAuthProvider } from '../Firebase/firebase';\n\nexport const startLogin = () => {\n    \n    return () => {\n        return firebase.auth().signInWithPopup(googleAuthProvider);\n    }\n}\n\nexport const startLogout = () => {\n    return () => {\n        return firebase.auth().signOut();\n    }\n}","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Welcome from \"../Components/Welcome\";\nimport TaskApp from \"../Components/TaskApp/TaskApp\";\nimport TaskListApp from \"../Components/TaskApp/TaskListApp\";\nimport DefectApp from \"../Components/DefectApp/DefectApp\";\nimport GanttChart from \"../Components/GanttApp/GanttChart\";\nimport Forum from \"../Components/ForumApp/Forum\";\nimport GanttFormApp from \"../Components/GanttApp/GanttFormApp\";\nimport VacationApp from \"../Components/VacationApp/VacationApp\";\nimport VacationChartApp from \"../Components/VacationApp/VacationChartApp\";\nimport TimesheetFormApp from \"../Components/TimesheetApp/TimesheetFormApp\";\nimport ProjectFormApp from \"../Components/ProjectApp/ProjectFormApp\";\nimport DefectListApp from \"../Components/DefectApp/DefectListApp\";\nimport ProjectListApp from \"../Components/ProjectApp/ProjectListApp\";\nimport ScenariosFormApp from \"../Components/ScenariosFormApp\";\nimport Login  from '../Components/Login';\n\nfunction Routes() {\n    return (\n        <Switch>\n            <Route path={process.env.NODE_ENV === \"production\" ? \"/ReactAppTool\" : '/'} exact component={Login} />\n            <Route path={process.env.NODE_ENV === \"production\" ? \"/ReactAppTool/TaskApp\" : '/TaskApp'} component={TaskApp} />   \n            <Route path={process.env.NODE_ENV === \"production\" ? \"/ReactAppTool/Welcome\" : '/Welcome'} component={Welcome} />\n            <Route path={process.env.NODE_ENV === \"production\" ? \"/ReactAppTool/TaskListApp\" : '/TaskListApp'} component={TaskListApp}  />\n            <Route path={process.env.NODE_ENV === \"production\" ? \"/ReactAppTool/DefectApp\" : '/DefectApp'} component={DefectApp} />\n            <Route path={process.env.NODE_ENV === \"production\" ? \"/ReactAppTool/DefectListApp\" : '/DefectListApp'} component={DefectListApp} />\n            <Route path={process.env.NODE_ENV === \"production\" ? \"/ReactAppTool/GanttChart\" : '/GanttChart'} component={GanttChart} />\n            <Route path={process.env.NODE_ENV === \"production\" ? \"/ReactAppTool/Forum\" : '/Forum'} component={Forum} />\n            <Route path={process.env.NODE_ENV === \"production\" ? \"/ReactAppTool/GanttFormApp\" : '/GanttFormApp'} component={GanttFormApp} />\n            <Route path={process.env.NODE_ENV === \"production\" ? \"/ReactAppTool/VacationApp\" : '/VacationApp'} component={VacationApp} />\n            <Route path={process.env.NODE_ENV === \"production\" ? \"/ReactAppTool/VacationChartApp\" : '/VacationChartApp'} component={VacationChartApp} />\n            <Route path={process.env.NODE_ENV === \"production\" ? \"/ReactAppTool/TimesheetFormApp\" : '/TimesheetFormApp'} component={TimesheetFormApp} />\n            <Route path={process.env.NODE_ENV === \"production\" ? \"/ReactAppTool/ProjectFormApp\" : '/ProjectFormApp'} component={ProjectFormApp} />\n            <Route path={process.env.NODE_ENV === \"production\" ? \"/ReactAppTool/ProjectListApp\" : '/ProjectListApp'} component={ProjectListApp} />\n            <Route path={process.env.NODE_ENV === \"production\" ? \"/ReactAppTool/ScenariosFormApp\" : '/ScenariosFormApp'} component={ScenariosFormApp} />\n        </Switch>\n    )\n}\n\nexport default Routes;  ","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport {routeHelper} from \"../../utils/routeHelper\"\nimport { connect } from 'react-redux';\nimport { startLogin, startLogout } from '../../redux/auth';\n\nexport const Header = ({ startLogout }) => {\n  const history = useHistory();\n  const handleLogout = () => {\n    startLogout();\n    history.push(\"/\")\n  }\n  return (\n    <div className=\"ui secondary pointing menu\">\n      <Link to={routeHelper(\"\")} className=\"item\">\n        <h1>IQS Management Tool</h1>\n      </Link>\n      <div className=\"right menu\">\n        <Link to={routeHelper(\"\")} className=\"item\">\n          Help\n        </Link>\n        <button onClick={handleLogout}>Logout</button>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  startLogout: () => dispatch(startLogout())\n})\n\nexport default connect(undefined, mapDispatchToProps)(Header);","import React from 'react';\nimport { BrowserRouter as Router, HashRouter, Redirect } from 'react-router-dom';\nimport history from './services/history';\nimport Routes from './routes/index';\nimport Header from \"./Components/Utlities/Header\";\nimport { AuthCheck, useUser } from 'reactfire';\nimport Login from './Components/Login';\nimport Welcome from './Components/Welcome';\n\n\nfunction App() {\n  \n  return (\n    <div className=\"ui container\">\n      <HashRouter basename=\"/\" history={history}>\n        <div>\n            <Header />\n            <Redirect to=\"/Welcome\" />\n            <Routes />\n        </div>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;","import {SELECT_DATE} from \"./action.js\"\n\nconst initialState = {\n    date: new Date(),\n}\n\n\nexport const datePickerReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SELECT_DATE:\n            return {date: action.date};\n\n        default:\n            return state;\n    }\n}","import { ADD_TASK } from \"./action.js\";\nimport { DELETE_TASK } from \"./action\"\nimport { SET_PROGRESS } from \"./action.js\";\n\nconst initialState = {\n  task: {\n    \"id\": {\n      taskName: \"\",\n      taskAssignee: \"\",\n      taskPriority: \"\",\n      date: new Date(),\n      progressV: 0,\n    },\n  },\n};\n\nexport const taskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TASK:\n      return {\n        ...state,\n        task: {\n          ...state.task,\n          [action.payload.id]: {\n            taskName: action.payload.taskName,\n            taskAssignee: action.payload.taskAssignee,\n            taskPriority: action.payload.taskPriority,\n            date: action.payload.date,\n            progressV: 0,\n          }\n        }\n      }\n\n    case DELETE_TASK:\n      const newTask = {...state};\n      delete newTask.task[action.payload.id];\n      return newTask;\n\n    case SET_PROGRESS:\n      return {\n        ...state,\n        task: {\n          ...state.task,\n          [action.payload.id]: {\n            ...state.task[action.payload.id],\n            progressV: action.payload.progressV,\n          }\n        }\n      }\n\n    default:\n      return state;\n  }\n};\n","import { ADD_GANTT_TASK } from \"./action.js\";\nimport { SELECT_GANTT_DATE } from \"./action.js\";\n\nconst initialState = {\n  task: {\n    \"id\":  {\n      name: \"\",\n      start: new Date(),\n      end: new Date()\n    },\n  },\n\n  date: {\n    start: new Date(),\n    end: new Date()\n  }\n};\n\nexport const ganttReducer = (state = initialState, action) => {\n  switch (action.type) {\n      case ADD_GANTT_TASK:\n        return {\n          ...state,\n          task: { ...state.task,\n           [action.payload.id]: {\n            name: action.payload.taskName,\n            start: action.payload.startDate,\n            end: action.payload.endDate\n           } \n          }\n        }\n\n      case SELECT_GANTT_DATE:\n        if (action.payload.key == 1) {\n          return {\n            ...state,\n           date: {\n             ...state.date,\n            start: action.payload.date\n           }\n         };\n        } else if (action.payload.key == 2) {\n          return {\n            ...state,\n           date: {\n             ...state.date,\n            end: action.payload.date\n           }\n         };\n        }\n\n    default:\n      return state;\n  }\n};\n","import { ADD_VACATION_REQUEST } from \"./action.js\";\nimport { SELECT_VACATION_DATE } from \"./action.js\";\n\nconst initialState = {\n  vacation: {\n    \"id\":  {\n      name: \"\",\n      start: new Date(),\n      end: new Date()\n    },\n  },\n\n  date: {\n    start: new Date(),\n    end: new Date()\n  }\n};\n\nexport const vacationReducer = (state = initialState, action) => {\n  switch (action.type) {\n      case ADD_VACATION_REQUEST:\n        return {\n          ...state,\n          vacation: { ...state.vacation,\n           [action.payload.id]: {\n            name: action.payload.employeeName,\n            start: action.payload.startDate,\n            end: action.payload.endDate\n           } \n          }\n        }\n\n      case SELECT_VACATION_DATE:\n        if (action.payload.key == 1) {\n          return {\n            ...state,\n           date: {\n             ...state.date,\n            start: action.payload.date\n           }\n         };\n        } else if (action.payload.key == 2) {\n          return {\n            ...state,\n           date: {\n             ...state.date,\n            end: action.payload.date\n           }\n         };\n        }\n\n    default:\n      return state;\n  }\n};\n","import { ADD_PROJECT } from \"./action.js\";\nimport { SELECT_PROJECT_DATE } from \"./action.js\";\nimport { SET_PROGRESS } from \"./action.js\";\n\nconst initialState = {\n    project: {\n    id:  {\n      projectName: \"\",\n      projectAssignee: \"\",\n      projectMilestones: \"\",\n      start: new Date(),\n      end: new Date(),\n      progressV: 0,\n    },\n  },\n\n  date: {\n    start: new Date(),\n    end: new Date()\n  }\n};\n\nexport const projectReducer = (state = initialState, action) => {\n  switch (action.type) {\n      case ADD_PROJECT:\n        return {\n          ...state,\n          project: { ...state.project,\n           [action.payload.id]: {\n            projectName: action.payload.projectName,\n            projectAssignee: action.payload.projectAssignee,\n            projectMilestones: action.payload.projectMilestones,\n            start: action.payload.startDate,\n            end: action.payload.endDate,\n            progressV: 0,\n           } \n          }\n        }\n\n      case SELECT_PROJECT_DATE:\n        if (action.payload.key == 1) {\n          return {\n            ...state,\n           date: {\n             ...state.date,\n            start: action.payload.date\n           }\n         };\n        } else if (action.payload.key == 2) {\n          return {\n            ...state,\n           date: {\n             ...state.date,\n            end: action.payload.date\n           }\n         };\n        }\n\n        case SET_PROGRESS:\n      return {\n        ...state,\n        project: {\n          ...state.project,\n          [action.payload.id]: {\n            ...state.project[action.payload.id],\n            progressV: action.payload.progressV,\n          }\n        }\n      }\n\n    default:\n      return state;\n  }\n};\n","import { ADD_SCENARIO } from \"./action.js\";\nimport { DELETE_SCENARIO } from \"./action\";\nimport { SET_RESULT } from \"./action.js\";\n\nconst initialState = {\n  id: {\n    key: {\n      project: \"\",\n      description: \"\",\n      highLevelSteps: \"\",\n      validation: \"\",\n      language: \"\",\n      result: \"\",\n    },\n  },\n};\n\nexport const scenarioReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_SCENARIO:\n      if (state[action.payload.id] === undefined) {\n        return {\n          ...state,\n          [action.payload.id]: {\n            [action.payload.key]: {\n              project: action.payload.project,\n              description: action.payload.description,\n              highLevelSteps: action.payload.highLevelSteps,\n              validation: action.payload.validation,\n              language: action.payload.language,\n              result: \"\",\n            },\n          },\n        };\n      }\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          [action.payload.key]: {\n            project: action.payload.project,\n            description: action.payload.description,\n            highLevelSteps: action.payload.highLevelSteps,\n            validation: action.payload.validation,\n            language: action.payload.language,\n            result: \"\",\n          },\n        },\n      };\n\n    case DELETE_SCENARIO:\n      const newScenario = { ...state };\n      delete newScenario[action.payload.id];\n      return newScenario;\n\n    case SET_RESULT:\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          [action.payload.key]: {\n            ...state[action.payload.id][action.payload.key],\n            result: action.payload.result,\n          },\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { datePickerReducer } from \"./DatePicker/reducer\";\nimport { taskReducer } from \"./TaskForm/reducer\";\nimport { ganttReducer } from \"./GanttForm/reducer\";\nimport { vacationReducer } from \"./VacationForm/reducer\";\nimport { defectReducer } from \"./Defect\";\nimport { projectReducer } from \"./ProjectApp/reducer\";\nimport { scenarioReducer } from \"./Scenario/reducer\";\nimport { scenarioEnabledReducer} from \"./ScenarioEnabler\"\n\nconst rootReducer = combineReducers({\n  datepicker: datePickerReducer,\n  taskform: taskReducer,\n  gantt: ganttReducer,\n  vacation: vacationReducer,\n  defect: defectReducer,\n  project: projectReducer,\n  scenario: scenarioReducer,\n  scenarioEnabler: scenarioEnabledReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport rootReducer from \"./root-reducer\";\nimport thunk from 'redux-thunk';\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport let store = createStore(\n  persistedReducer,\n  composeEnhancers(applyMiddleware(thunk))\n  //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport let persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM, { render } from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport { firebase, firebaseConfig } from './Firebase/firebase';\nimport history from '../src/services/history';\nimport { startAddTask } from \"./redux/TaskForm/action\";\nimport {FirebaseAppProvider} from \"reactfire\"\n\nconst jsx = (\n  <FirebaseAppProvider firebaseConfig={firebaseConfig}>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </FirebaseAppProvider>\n);\nlet hasRendered = false;\nconst renderApp = () => {\n  // if (!hasRendered) {\n  ReactDOM.render(jsx, document.getElementById(\"root\"));\n  //hasRendered = !hasRendered;\n  // }\n};\n\nReactDOM.render(jsx, document.getElementById(\"root\"));\n\n\n\n// firebase.auth().onAuthStateChanged((user) => {\n//   console.log(user)\n//   if (user) {\n//     console.log('log in');\n//     if (history.location.pathname === '/') {\n//       history.push(\"/\")\n//       // window.location.reload()\n//       // console.log(hasRendered)\n//       // renderApp();\n//         // console.log(history);\n//       }\n//   } else {\n//     history.push(\"/\");\n//       // window.location.reload()\n//   }\n// });\n\n\n/*\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport AppRouter, { history } from './routers/AppRouter';\nimport configureStore from './store/configureStore';\nimport { startSetExpenses } from './actions/expenses';\nimport { setTextFilter } from './actions/filters';\nimport getVisibleExpenses from './selectors/expenses';\nimport 'normalize.css/normalize.css';\nimport './styles/styles.scss';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { firebase } from './firebase/firebase';\n\nconst store = configureStore();\nconst jsx = (\n  <Provider store={store}>\n    <AppRouter />\n  </Provider>\n);\nlet hasRendered = false;\nconst renderApp = () => {\n  if (!hasRendered) {\n    ReactDOM.render(jsx, document.getElementById('app'));\n    hasRendered = true;\n  }\n};\n\nReactDOM.render(<p>Loading...</p>, document.getElementById('app'));\n\nfirebase.auth().onAuthStateChanged((user) => {\n  if (user) {\n    store.dispatch(startSetExpenses()).then(() => {\n      renderApp();\n      if (history.location.pathname === '/') {\n        history.push('/dashboard');\n      }\n    });\n  } else {\n    renderApp();\n    history.push('/');\n  }\n});\n*/\n\n/*\nexport const startSetExpenses = () => {\n  return (dispatch) => {\n    return database.ref('expenses').once('value').then((snapshot) => {\n      const expenses = [];\n\n      snapshot.forEach((childSnapshot) => {\n        expenses.push({\n          id: childSnapshot.key,\n          ...childSnapshot.val()\n        });\n      });\n\n      dispatch(setExpenses(expenses));\n    });\n  };\n  */"],"sourceRoot":""}